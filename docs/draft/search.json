[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"book provides overview basic skills needed turn raw data informative summaries visualisations presented professional reports presentations. book introduce learners R (R Core Team, 2021), programming language can help automate working data. book cover importing processing data spreadsheets, producing data summaries descriptive statistics tables, creating beautiful informative visualisations, constructing reports presentations automatically update underlying data changes.end book, able use R :clean process datasummarise datainformatively visualise datacreate reusable report templates","code":""},{"path":"index.html","id":"structure-of-the-course","chapter":"Overview","heading":"0.1 Structure of the course","text":"book accompanies 10-week course, covering one chapter per week. chapter introduce new skills concepts using concrete examples. various points, multiple-choice fill---blank questions check understanding. chapter accompanying walk-videos, instructor demonstrates skills covered chapter. chapter also accompanying exercises reinforce learning.","code":""},{"path":"index.html","id":"how-to-learn-data-skills","chapter":"Overview","heading":"0.2 How to learn data skills","text":"Learning data skills kind like gym membership (thanks Phil McAleer analogy). given state---art equipment use instructions use , data skills get stronger unless practice.Data skills require memorise lots code. introduced many different functions, main skill learn efficiently find information need. require getting used structure help files cheat sheets, learning Goggle problem choose helpful solution, learning read error messages.Learning code involves making lot mistakes. mistakes completely essential process, try feel frustrated. Many chapter exercises give broken code fix get experience seeing common errors look like. become experienced coder, might make fewer errors, recover much faster.","code":""},{"path":"advanced.html","id":"advanced","chapter":"1 Advanced Visualisations & Reports","heading":"1 Advanced Visualisations & Reports","text":"","code":""},{"path":"advanced.html","id":"ilo-advanced","chapter":"1 Advanced Visualisations & Reports","heading":"1.1 Intended Learning Outcomes","text":"final chapter ADS moves beyond core skills needed complete course. aim chapter give sense now available new-found R skills. lot chapter, wanted present overview possibilities, although exercises end. enrolled ADS, may wish prioritise summative assessment week come back chapter later date.Create customise advanced types plotsStructure data report, presentation, dashboard formatsInclude linked figures, tables, references","code":""},{"path":"advanced.html","id":"custom","chapter":"1 Advanced Visualisations & Reports","heading":"1.2 Advanced Visualisation","text":"","code":""},{"path":"advanced.html","id":"set-up","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.1 Set-up","text":"First, create new project work chapter named 09-advanced. Second, open save new R Markdown document named visualisations.Rmd, delete welcome text load required packages section. probably need install several new packages.need make folder called \"data\" download data file :\nsurvey_data.csv.Download ggplot2 cheat sheet.","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(ggthemes)    # for themes\nlibrary(patchwork)   # for combining plots\nlibrary(plotly)      # for interactive plots\n# devtools::install_github(\"hrbrmstr/waffle\")\nlibrary(waffle)      # for waffle plots\nlibrary(ggbump)      # for bump plots\nlibrary(treemap)     # for treemap plots\nlibrary(ggwordcloud) # for word clouds\nlibrary(tidytext)    # for manipulating text for word clouds\nlibrary(sf)          # for mapping geoms\nlibrary(rnaturalearth) # for map data\nlibrary(rnaturalearthdata) # extra mapping data\nlibrary(gganimate)   # for animated plots\n\ntheme_set(theme_light())"},{"path":"advanced.html","id":"defaults","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.2 Defaults","text":"code creates two familiar plots Chapter ??, using default (light) theme palettes. First, load data set issue_category factor can control order categories.Next, create bar plot number calls issue category.create scatterplot wait time call time, distinguished issue category.Finally, combine two plots using + patchwork see default styles plots.\nFigure 1.1: Default plot styles.\nTry changing theme using built-themes customising colours linetypes scale_* functions. See Appendix ?? details.","code":"\n# update column specification\nct <- cols(issue_category = col_factor(levels = c(\"tech\", \"returns\", \"sales\", \"other\")))\n\n# load data\nsurvey_data <- read_csv(file = \"data/survey_data.csv\",\n                        col_types = ct)\n# create bar plot\nbar <- ggplot(data = survey_data, \n              mapping = aes(x = issue_category,\n                            fill = issue_category)) +\n  geom_bar(show.legend = FALSE) +\n  labs(x = \"Issue Category\", \n       y = \"Count\",\n       title = \"Calls by Issue Category\")\n#create scatterplot\npoint <- ggplot(data = survey_data, \n                mapping = aes(x = wait_time, \n                              y = call_time,\n                              color = issue_category)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = lm, formula = y~x) +\n  labs(x = \"Wait Time\",\n       y = \"Call Time\",\n       color = \"Issue Category\",\n       title = \"Wait Time by Call Time\")\nbar + point"},{"path":"advanced.html","id":"annotations","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.3 Annotations","text":"often useful add annotations plot, example, highlight important part plot add labels. annotate() function creates specific geom x- y-coordinates specify.","code":""},{"path":"advanced.html","id":"text-annotations","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.3.1 Text annotations","text":"Add text annotation setting geom argument \"text\" \"label\" adding label. Labels padding background, text just text.Backslash-n \\n label text controls line breaks . Try removing changing position see happens.x y control coordinates label. likely play around values get right.argument hjust horizontal justification text, vjust vertical justification. default values 0.5, text centred x y coordinates. 0 justify left bottom, 1 justifies right top.can change angle text, labels.\nFigure 1.2: example annotation text label.\nSee can work make figure , starting following:Hint: need add 1 label annotation 8 separate text annotations.","code":"\nbar +\n  # add left-justified text to the second bar\n  annotate(geom = \"text\",\n           label = \"Our goal is to\\nreduce this\\ncategory\",\n           x = 1.65, y = 150,\n           hjust = 0, vjust = 1, \n           color = \"white\", fontface = \"bold\",\n           angle = 45) +\n  # add a centred label to the third bar\n  annotate(geom = \"label\",\n           label = \"Our goal is\\nto increase this\\ncategory\",\n           x = 3, y = 75,\n           hjust = 0.5, vjust = 1, \n           color = \" darkturquoise\", fontface = \"bold\")\ntibble(x = c(0, 0, 1, 1),\n       y = c(0, 1, 0, 1)) %>%\n  ggplot(aes(x, y)) +\n  geom_point(alpha = 0.25, size = 4, color = \"red\")\ntibble(x = c(0, 0, 1, 1),\n       y = c(0, 1, 0, 1)) %>%\n  ggplot(aes(x, y)) +\n  geom_point(alpha = 0.25, size = 4, color = \"red\") +\n  annotate(\"label\", label = \"In the\\nmiddle\",\n           x = 0.5, y = 0.5,\n           fill = \"dodgerblue\", color = \"white\",\n           label.padding = unit(1, \"lines\"),\n           label.r = unit(1.5, \"lines\")) +\n  annotate(\"text\", label = \"Bottom\\nLeft\",\n           x = 0, y = 0, hjust = 0, vjust = 0) +\n  annotate(\"text\", label = \"Top\\nLeft\", \n           x = 0, y = 1, hjust = 0, vjust = 1) +\n  annotate(\"text\", label = \"Bottom\\nRight\",\n           x = 1, y = 0, hjust = 1, vjust = 0) +\n  annotate(\"text\", label = \"Top\\nRight\",\n           x = 1, y = 1, hjust = 1, vjust = 1) +\n  annotate(\"text\", label = \"45 degrees\",\n           x = 0, y = 0.5, hjust = 0, angle = 45) +\n  annotate(\"text\", label = \"90 degrees\",\n           x = 0.25, y = 0.5, angle = 90) +\n  annotate(\"text\", label = \"270 degrees\",\n           x = 0.75, y = 0.5, angle = 270)+\n  annotate(\"text\", label = \"-45 degrees\",\n           x = 1, y = 0.5, hjust = 1, angle = -45)"},{"path":"advanced.html","id":"other-annotations","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.3.2 Other annotations","text":"can add geoms highlight parts plot. example adds rectangle around group points, text label, straight arrow label rectangle, curved arrow label individual point.\nFigure 1.3: Example annotatins rect, text, segment, curve geoms.\nSee ggforce package sophisticated options, highlighting group points ellipse.","code":"\npoint +\n  # add a rectangle surrounding long call times\n  annotate(geom = \"rect\",\n           xmin = 100, xmax = 275,\n           ymin = 140, ymax = 180,\n           fill = \"transparent\", color = \"red\") +\n  # add a text label\n  annotate(\"text\",\n           x = 260, y = 120,\n           label = \"outliers\") +\n  # add an line with an arrow from the text to the box\n  annotate(geom = \"segment\", \n           x = 240, y = 120, \n           xend = 200, yend = 135,\n           arrow = arrow(length = unit(0.5, \"lines\"))) +\n  # add a curved line with an arrow \n  # from the text to a wait time outlier\n  annotate(geom = \"curve\", \n          x = 280, y = 120, \n          xend = 320, yend = 45,\n          curvature = -0.5,\n          arrow = arrow(length = unit(0.5, \"lines\")))"},{"path":"advanced.html","id":"other-plots","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4 Other Plots","text":"","code":""},{"path":"advanced.html","id":"interactive-plots","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.1 Interactive Plots","text":"plotly package can used make interactive graphs. Assign ggplot variable use function ggplotly() plot object. Note interactive plots work HTML files, PDFs Word files.\nFigure 1.4: Interactive graph using plotly\nHover data points click legend items.","code":"\nggplotly(point)"},{"path":"advanced.html","id":"waffle-plots","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.2 Waffle Plots","text":"Chapter ??, mentioned pie charts poor way visualise proportions refused even show make one. Waffle plots delicious alternative.Use waffle hrbrmstr GitHub using install_github() function , rather one CRAN get using install.packages().default, geom_waffle() represents observation tile splits across 10 rows. can play n_rows argument determine works best data.\nFigure 1.5: Waffle plot.\nwaffle plot can also used display counts proportions achieve , set n_rows = 10 make_proportional = TRUE. Now, rather tile representing one observation, tile represents 1% data.\nFigure 1.6: Proportional waffle plot.\n","code":"\ndevtools::install_github(\"hrbrmstr/waffle\")\nsurvey_data %>% \n  count(issue_category) %>%\n  ggplot(aes(fill = issue_category, values = n)) +\n  geom_waffle(\n    n_rows = 23, # try setting this to 10 (the default)\n    size = 0.33, # line size\n    make_proportional = FALSE, # use raw values\n    colour = \"white\", # line colour\n    flip = FALSE, # bottom-top or left-right\n    radius = grid::unit(0.1, \"npc\") # set to 0.5 for circles\n  ) +\n  theme_enhance_waffle() + # gets rid of axes\n  scale_fill_colorblind(name = \"Issue Category\")\nsurvey_data %>% \n  count(issue_category) %>%\n  ggplot(aes(fill = issue_category, values = n)) +\n  geom_waffle(\n    n_rows = 10, \n    size = 0.33, \n    make_proportional = TRUE, # compute proportions\n    colour = \"white\", \n    flip = FALSE, \n    radius = grid::unit(0.1, \"npc\") \n  ) +\n  theme_enhance_waffle() + \n  scale_fill_colorblind(name = \"Issue Category\")"},{"path":"advanced.html","id":"treemap","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.3 Treemap","text":"Treemap plots another way visualise proportions. Like waffle plots, need count data category first. can use brewer palette fill.\nFigure 1.7: Treemap plot.\ncan also represent multiple categories treemaps\nFigure 1.8: Treemap two variables\n","code":"\nsurvey_data %>% \n  count(issue_category) %>%\n  treemap(\n    index = \"issue_category\", # column with number of rectangles\n    vSize = \"n\", # column with size of rectangle\n    title = \"\",\n    palette = \"BuPu\",\n    inflate.labels = TRUE # expand labels to size of rectangle\n  )\nsurvey_data %>% \n  count(issue_category, employee_id) %>%\n  arrange(employee_id) %>%\n  treemap(\n    # use c() to specify two variables\n    index = c(\"employee_id\", \"issue_category\"), \n    vSize = \"n\", \n    title = \"\",\n    palette = \"Dark2\",\n    # set different label sizes for each type of label\n    fontsize.labels = c(30, 10), \n    # set different alignments for two label types\n    align.labels = list(c(\"left\", \"top\"), c(\"center\", \"center\")) \n  )"},{"path":"advanced.html","id":"bump-plots","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.4 Bump Plots","text":"Bump plots useful visualising rankings change time. first, need get ranking data. start typical raw data table, containing identifying column person three columns scores weekNow make table long, group week, use rank() function find rank person's score week. Use n() - rank(score) + 1 reverse ranks highest score gets rank 1. also need make week variable number.typical mapping bump plot puts time variable x-axis, rank variable y-axis, sets colour identifying variable.\nFigure 1.9: Basic bump plot\ncan make attractive customising axes adding text labels. Try running line code see builds .Add label = person mapping can add text labels.Increase size lines size argument geom_bump()need labels weeks 1.5 2.5, change x-axis breaksThe expand argument two scale_ functions expands plot area can fit text labels right.makes sense first place top, reverse order y-axis scale_y_reverse() fix breaks expansion.Add text labels geom_text(), just week 3, set data =  filter(rank_data, week == 3) geom.Set x = 3.05 move text labels just right week 3, set hjust = 0 right-justify text labels (default hjust = 0.5, center 3.05).Remove legend grid lines. Increase x-axis text size.\nFigure 1.10: Bump plot added features.\n","code":"\n# make a small dataset of scores for 3 people over 3 weeks\nscore_data <- tribble(\n  ~person, ~week_1, ~week_2, ~week_3,\n  \"Abeni\",      80,     75,       90,\n  \"Beth\",       75,     85,       75,\n  \"Carmen\",     60,     70,       80\n)\n# calculate ranks\nrank_data <- score_data %>%\n  pivot_longer(cols = -person,\n               names_to = \"week\",\n               values_to = \"score\") %>%\n  group_by(week) %>%\n  mutate(rank = n() - rank(score) + 1) %>%\n  ungroup() %>%\n  arrange(week, rank) %>%\n  mutate(week = str_replace(week, \"week_\", \"\") %>% as.integer())\n\nrank_data\nggplot(data = rank_data, \n       mapping = aes(x = week, \n                     y = rank, \n                     colour = person)) +\n  ggbump::geom_bump()\nggplot(data = rank_data, \n       mapping = aes(x = week, \n                     y = rank, \n                     colour = person,\n                     label = person)) +\n  ggbump::geom_bump(size = 10) +\n  scale_x_continuous(name = \"\",\n                     breaks = 1:3, \n                     labels = c(\"Week 1\", \"Week 2\", \"Week 3\"),\n                     expand = expansion(c(.05, .2))) +\n  scale_y_reverse(name = \"Ranking\",\n                  breaks = 1:3, \n                  expand = expansion(.2)) +\n  geom_text(data = filter(rank_data, week == 3),\n            color = \"black\", x = 3.05, hjust = 0) +\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.text.x = element_text(size = 12))"},{"path":"advanced.html","id":"word-clouds","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.5 Word Clouds","text":"Word clouds common way summarise text data. First, download amazon_alexa.csv data folder load object. dataset contains text reviews well 1-5 rating customers bought Alexa device Amazon.can use data look words used differ depending rating given. make text data easy work , function tidytext::unnest_tokens() splits words input column individual words new output column. unnnest_tokens() particularly helpful also things like removes punctuation transforms words lower case make easier work . Compare words alexa see map .can add another line code using pipe counts many instances word rating give us popular words.problem common words function words rather content words, makes sense words highest word frequency natural language.Helpfully, tidytext contains list common \"stop words\", .e., words want ignore, stored object named stop_words. also useful define list custom stop words based upon unique properties data (can sometimes take attempts identify appropriate dataset). dataset contains lot numbers informative, also contains \"https\" website links, get rid custom stop list.defined stop words, can use anti_join() remove word present stop word list.get top 25 words, group rating use dplyr::slice_max(), ordered column n.First, make word cloud customers gave 1-star rating:Filter retains data 1-star ratings.label comes word column data plot (.e., words).colour makes words red (also set word give word different colour n vary colour continuously frequency).size makes size word proportional n, number times word appeared.ggwordcloud::geom_text_wordcloud_area() word cloud geom.ggwordcloud::scale_size_area() controls big word cloud (usually takes trial--error).can now 5-star ratings paste plots together patchwork (word clouds play well facets).\nFigure 1.11: Word cloud.\nworth highlighting whilst word clouds common, really equivalent pie charts text data good making accurate comparisons based size. might able see popular word, can accurately determine 2nd, 3rd, 4th 5th popular word based clouds alone? also issue just text data make qualitative analysis just something said lot mean useful important. , argument outwith scope book, even recurring part Emily's life thanks qualitative wife.","code":"\n# https://www.kaggle.com/sid321axn/amazon-alexa-reviews\n# extracted from Amazon by Manu Siddhartha & Anurag Bhatt\nalexa <- rio::import(\"data/amazon_alexa.csv\")\nwords <- alexa %>%\n  unnest_tokens(output = \"word\", input = \"verified_reviews\")\nwords <- alexa %>%\n  unnest_tokens(output = \"word\", input = \"verified_reviews\") %>%\n  count(word, rating, sort = TRUE) \ncustom_stop <- tibble(word = c(0:9, \"https\", 34))\n\nwords <- alexa %>%\n  unnest_tokens(output = \"word\", input = \"verified_reviews\") %>%\n  count(word, rating) %>%\n  anti_join(stop_words, by = \"word\") %>%\n  anti_join(custom_stop, by = \"word\") %>%\n  group_by(rating) %>%\n  slice_max(order_by = n, n = 25, with_ties = FALSE) %>%\n  ungroup()\nrating1 <- filter(words, rating == 1) %>%\n  ggplot(aes(label = word, colour = \"red\", size = n)) +\n  geom_text_wordcloud_area() +\n  scale_size_area(max_size = 10) +\n  ggtitle(\"Rating = 1\") +\n  theme_minimal(base_size = 14)\n\nrating1\nrating5 <- filter(words, rating == 5) %>%\n  ggplot(aes(label = word, size = n)) +\n  geom_text_wordcloud_area(colour = \"darkolivegreen3\") +\n  scale_size_area(max_size = 12) +\n  ggtitle(\"Rating = 5\") +\n  theme_minimal(base_size = 14)\n\nrating1 + rating5"},{"path":"advanced.html","id":"maps","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.6 Maps","text":"Working maps can tricky. sf package provides functions work ggplot2, geom_sf(). rnaturalearth package (associated data packages may prompted download) provide high-quality mapping coordinates.ne_countries() returns world country polygons (.e., world map). specify object returned \"simple feature\" class sf work geom_sf(). like deep dive simple feature objects, check vignette sf package.worth checking object ne_countries() returns see just much information available.Try changing values colours get sense code works.can combine multiple countries using bind_rows() visualise different colours country.\nFigure 1.12: Map coloured country.\ncan join data map table visualise data map using colours labels.typo data rnaturalearth, need change \"North Ayshire\" \"North Ayrshire\" join population data.Setting fill population geom_sf() gives region colour based population.colours customised scale_fill_viridis_c(). breaks fill scale set increments 100K (1e5 scientific notation) scale set span 0 600K.paste0() creates labels taking numbers 0 6 adding \"00 k\" .Finally, position legend moved sea using legend.position().\nFigure 1.13: Map coloured population.\n","code":"\n# get the world map coordinates\nworld_sf <- ne_countries(returnclass = \"sf\", scale = \"medium\")\n\n# plot them on a light blue background\nggplot() + \n  geom_sf(data = world_sf, size = 0.3) +\n  theme(panel.background = element_rect(fill = \"lightskyblue2\"))\n# get and bind country data\nuk_sf <- ne_states(country = \"united kingdom\", returnclass = \"sf\")\nireland_sf <- ne_states(country = \"ireland\", returnclass = \"sf\")\nislands <- bind_rows(uk_sf, ireland_sf) %>%\n  filter(!is.na(geonunit))\n\n# set colours\ncountry_colours <- c(\"Scotland\" = \"#0962BA\",\n                     \"Wales\" = \"#00AC48\",\n                     \"England\" = \"#FF0000\",\n                     \"Northern Ireland\" = \"#FFCD2C\",\n                     \"Ireland\" = \"#F77613\")\n\nggplot() + \n  geom_sf(data = islands,\n          mapping = aes(fill = geonunit),\n          colour = NA,\n          alpha = 0.75) +\n  coord_sf(crs = sf::st_crs(4326),\n           xlim = c(-10.7, 2.1), \n           ylim = c(49.7, 61)) +\n  scale_fill_manual(name = \"Country\", \n                    values = country_colours)\n# load map data\nscotland_sf <- ne_states(geounit = \"Scotland\", \n                         returnclass = \"sf\")\n\n# load population data from\n# https://www.indexmundi.com/facts/united-kingdom/quick-facts/scotland/population\nscotpop <- read_csv(\"data/scottish_population.csv\", \n                    show_col_types = FALSE)\n\n# join data and fix typo in the map\nscotmap_pop <- scotland_sf %>%\n  mutate(name = ifelse(name == \"North Ayshire\", \n                       yes = \"North Ayrshire\", \n                       no = name)) %>%\n  left_join(scotpop, by = \"name\") %>%\n  select(name, population, geometry)\n# plot\nggplot() + \n  geom_sf(data = scotmap_pop,\n          mapping = aes(fill = population),\n          color = \"white\", \n          size = .1) +\n  coord_sf(xlim = c(-8, 0), ylim = c(54, 61)) +\n  scale_fill_viridis_c(name = \"Population\",\n                       breaks = seq(from = 0, to = 6e5, by = 1e5), \n                       limits = c(0, 6e5),\n                       labels = paste0(0:6, \"00 K\")) +\n  theme(legend.position = c(0.16, 0.84))"},{"path":"advanced.html","id":"animated-plots","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.4.7 Animated Plots","text":"Animated plots great way add wow factor reports, can complex make, distracting, accessible, use sparingly data visualisation animation really adds something. package gganimate many functions animating ggplots., load population data United Nations. Download file data folder open Excel first see looks like. code gets data first tab, filters just 6 world regions, makes data long, makes sure year column numeric pop column shows population whole numbers (original data 1000s).make animated plot showing population region changes year. First, make static plot. Filter data recent year can see single frame animation look like.convert animated plot shows data multiple years:Remove filter add transition_time(year).Use {} syntax include frame_time title.Use anim_save() save animation GIF file set code chunk eval = FALSE creating animation takes long time want run every time knit report.can show animated gif html report (animations work Word PDF) using include_graphics(), include GIF dynamic document like PowerPoint.\nFigure 1.14: Animated gif.\n","code":"\n# load and process data\nworldpop <- readxl::read_excel(\"data/WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES.xlsx\", skip = 16) %>%\n  filter(Type == \"Region\") %>%\n  select(region = 3, `1950`:`1992`) %>%\n  pivot_longer(cols = -region, \n               names_to = \"year\",\n               values_to = \"pop\") %>%\n  mutate(year = as.integer(year),\n         pop = round(1000 * as.numeric(pop)))\nworldpop %>%\n  filter(year == 1992) %>%\n  ggplot(aes(x = region, y = pop, fill = region)) +\n  geom_col(show.legend = FALSE) +\n  scale_fill_viridis_d() +\n  scale_x_discrete(name = \"\", \n                   guide = guide_axis(n.dodge=2))+\n  scale_y_continuous(name = \"Population\",\n                     breaks = seq(0, 3e9, 1e9),\n                     labels = paste0(0:3, \"B\")) +\n  ggtitle('Year: 1992')\nanim <- worldpop %>%\n  ggplot(aes(x = region, y = pop, fill = region)) +\n  geom_col(show.legend = FALSE) +\n  scale_fill_viridis_d() +\n  scale_x_discrete(name = \"\",\n                   guide = guide_axis(n.dodge=2))+\n  scale_y_continuous(name = \"Population\",\n                     breaks = seq(0, 3e9, 1e9),\n                     labels = paste0(0:3, \"B\")) +\n  ggtitle('Year: {frame_time}') +\n  transition_time(year)\n  \n\nanim_save(filename = \"images/gganim-demo.gif\",\n          animation = anim,\n          width = 8, height = 5, units = \"in\", res = 150)\nknitr::include_graphics(\"images/gganim-demo.gif\")"},{"path":"advanced.html","id":"resources-custom","chapter":"1 Advanced Visualisations & Reports","heading":"1.2.5 Resources","text":"many options data visualisation R time cover . following resources get started journey informative, intuitive visualisations.R Graph Gallery (really useful)Look Data Data Vizualization Social ScienceGraphs Cookbook RTop 50 ggplot2 VisualizationsR Graphics Cookbook Winston Changggplot extensionsplotly creating interactive graphsDrawing Beautiful Maps Programmaticallygganimate","code":""},{"path":"advanced.html","id":"present","chapter":"1 Advanced Visualisations & Reports","heading":"1.3 Reports","text":"","code":""},{"path":"advanced.html","id":"set-up-1","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.1 Set-up","text":"Close visualisation Markdown open save new R Markdown document named reports.Rmd, delete welcome text load required packages section.","code":"\nlibrary(tidyverse)     # data wrangling functions\nlibrary(bookdown)      # for chaptered reports\nlibrary(flexdashboard) # for dashboards\nlibrary(DT)            # for interactive tables"},{"path":"advanced.html","id":"linked-documents","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.2 Linked documents","text":"need create longer reports links sections, can edit YAML use bookdown format. bookdown::html_document2 useful one adds figure table numbers automatically figures tables caption allows link reference.create links tables figures, need name code chunk created figures tables, call names inline coding:code chunk names can contain letters, numbers dashes. contain characters like spaces underscores, referencing work.can also link different sections report naming headings {#}:code shows link text figures tables full report using built-diamonds dataset - use reports.Rmd create document now. can see HTML output .format defaults numbered sections, set number_sections: false YAML header want . remove numbered sections, links like \\@ref(conclusion) show \"??\", need use URL link syntax instead, like :","code":"```{r my-table}\n# table code here``````{r my-figure}\n# figure code here```See Table\\ \\@ref(tab:my-table) or Figure\\ \\@ref(fig:my-figure).# My first heading {#heading-1}\n\n## My second heading {#heading-2}\n\nSee Section\\ \\@ref(heading-1) and Section\\ \\@ref(heading-2)\n---\ntitle: \"Linked Document Demo\"\noutput: \n  bookdown::html_document2:\n    number_sections: true\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE,\n                      message = FALSE,\n                      warning = FALSE)\nlibrary(tidyverse)\nlibrary(kableExtra)\ntheme_set(theme_minimal())\n```\n\nDiamond price depends on many features, such as:\n\n- cut (See Table\\ \\@ref(tab:by-cut))\n- colour (See Table\\ \\@ref(tab:by-colour))\n- clarity (See Figure\\ \\@ref(fig:by-clarity))\n- carats (See Figure\\ \\@ref(fig:by-carat))\n- See section\\ \\@ref(conclusion) for concluding remarks\n\n## Tables\n\n### Cut\n\n```{r by-cut}\ndiamonds %>%\n  group_by(cut) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by cut.\") %>%\n  kable_material()\n```\n\n### Colour\n\n```{r by-colour}\ndiamonds %>%\n  group_by(color) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by colour.\") %>%\n  kable_material()\n```\n\n## Plots\n\n### Clarity\n\n```{r by-clarity, fig.cap = \"Diamond price by clarity\"}\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n```\n\n### Carats\n\n```{r by-carat, fig.cap = \"Diamond price by carat\"}\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n```\n\n### Concluding remarks {#conclusion}\n\nI am not rich enough to worry about any of this.See the [last section](#conclusion) for concluding remarks."},{"path":"advanced.html","id":"references","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.3 References","text":"several ways -text references automatically generate bibliography R Markdown. Markdown files need link BibTex file (plain text file references specific format) contains references need cite. specify name file YAML header, like bibliography: filename.bib cite references text using symbol shortname, like [@tidyverse].","code":""},{"path":"advanced.html","id":"creating-a-bibtex-file","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.3.1 Creating a BibTeX file","text":"reference software like EndNote, Zotero Mendeley exporting options can export BibTeX format. just need check shortnames resulting file.can also make BibTeX file add references manually. RStudio, go File > New File... > Text File save file \"bibliography.bib\".Next, add line bibliography: bibliography.bib YAML header.","code":""},{"path":"advanced.html","id":"adding-references","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.3.2 Adding references","text":"can add references journal article following format:See complete guide BibTeX format instructions citing books, technical reports, .can get reference R package using functions citation() toBibtex(). can paste bibtex entry bibliography.bib file. Make sure add short name (e.g., \"ggplot2\") first comma refer reference.Google Scholar entries BibTeX citation option. usually easiest way get relevant values, although add DOI . can keep suggested shortname change something makes sense .","code":"@article{shortname,\n  author = {Author One and Author Two and Author Three},\n  title = {Paper Title},\n  journal = {Journal Title},\n  volume = {vol},\n  number = {issue},\n  pages = {startpage--endpage},\n  year = {year},\n  doi = {doi}\n}\ncitation(package=\"ggplot2\") %>% toBibtex()## @Book{,\n##   author = {Hadley Wickham},\n##   title = {ggplot2: Elegant Graphics for Data Analysis},\n##   publisher = {Springer-Verlag New York},\n##   year = {2016},\n##   isbn = {978-3-319-24277-4},\n##   url = {https://ggplot2.tidyverse.org},\n## }"},{"path":"advanced.html","id":"citing-references","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.3.3 Citing references","text":"can cite references text like :tutorial uses several R packages (Allaire et al., 2018; Wickham, 2017).Put minus front @ just want year:Franconeri colleagues (2021) review research-backed guidelines creating effective intuitive visualizations.","code":"This tutorial uses several R packages [@tidyverse;@rmarkdown].Franconeri and colleagues [-@franconeri2021science] review research-backed guidelines for creating effective and intuitive visualizations."},{"path":"advanced.html","id":"citation-styles","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.3.4 Citation styles","text":"can search list style files (e.g., APA, MLA, Harvard) download file format bibliography. need add line csl: filename.csl YAML header.","code":""},{"path":"advanced.html","id":"reference-section","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.3.5 Reference section","text":"default, reference section added end document. want change position (e.g., add figures tables references), include <div id=\"refs\"><\/div> want references.Add -text citations reference list report.","code":""},{"path":"advanced.html","id":"interactive-tables","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.4 Interactive tables","text":"One way make reports exciting use interactive tables. DT::datatable() function displays table extra interactive elements allow readers search reorder data, well controlling number rows shown . can especially helpful. works HTML output types. DT website extensive tutorials, cover basics .can customise display, changing column names, adding caption, moving location filter boxes, removing row names, applying classes change table appearance, applying advanced options.Create interactive table like one diamonds dataset diamonds table value greater 65 (whole table much large display interactive table). Show 20 items default remove search box, leave filter default options.","code":"\nlibrary(DT)\n\nscotpop <- read_csv(\"data/scottish_population.csv\", \n                    show_col_types = FALSE)\n\ndatatable(data = scotpop)\n# https://datatables.net/reference/option/\nmy_options <- list(\n  pageLength = 5, # how many rows are displayed\n  lengthChange = FALSE, # whether pageLength can change\n  info = TRUE, # text with the total number of rows\n  paging = TRUE, # if FALSE, the whole table displays\n  ordering = FALSE, # whether you can reorder columns\n  searching = FALSE # whether you can search the table\n)\n\ndatatable(\n  data = scotpop,\n  colnames = c(\"County\", \"Population\"),\n  caption = \"The population of Scottish counties.\",\n  filter = \"none\", # \"none\", \"bottom\" or \"top\"\n  rownames = FALSE, # removes the number at the left\n  class = \"cell-border hover stripe\", # default is \"display\"\n  options = my_options\n)\nmy_options <- list(\n  pageLength = 20, # how many rows are displayed\n  searching = FALSE # whether you can search the table\n)\n\ndiamonds %>% \n  filter(table > 65) %>%\n  select(-table, -(x:z)) %>%\n  DT::datatable(\n    caption = \"All diamonds with table > 65.\",\n    options = my_options\n  )"},{"path":"advanced.html","id":"other-formats","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.5 Other formats","text":"can create just reports R Markdown. can also create presentations, interactive dashboards, books, websites, web applications.","code":""},{"path":"advanced.html","id":"presentations","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.5.1 Presentations","text":"can choose presentation template create new R Markdown document. use ioslides example, formats work similarly.\nFigure 1.15: Ioslides RMarkdown template.\nmain differences Rmd files working now output type YAML header ioslides_presentation instead html_document format requires specific title structure. slide starts level-2 header.template provides examples text, bullet point, code, plot slides. can knit template create HTML document presentation. often looks odd RStudio built-browser, click button open web browser. can use space bar arrow keys advance slides.code shows load packages display text, table, plot. can see HTML output .","code":"---\ntitle: \"Presentation Demo\"\nauthor: \"Lisa DeBruine\"\noutput: ioslides_presentation\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\nlibrary(tidyverse)\nlibrary(kableExtra)\n```\n\n## Slide with Markdown\n\nThe following slides will present some data from the `diamonds` dataset from **ggplot2**.\n\nDiamond price depends on many features, such as:\n\n- cut\n- colour\n- clarity\n- carats\n\n## Slide with a Table\n\n```{r}\ndiamonds %>%\n  group_by(cut, color) %>%\n  summarise(avg_price = mean(price),\n            .groups = \"drop\") %>%\n  pivot_wider(names_from = cut, values_from = avg_price) %>%\n  kable(digits = 0, caption = \"Mean diamond price by cut and colour.\") %>%\n  kable_material()\n```\n\n## Slide with a Plot\n\n```{r pressure}\nggplot(diamonds, aes(x = cut, y = price, color = color)) +\n  stat_summary(fun = mean, geom = \"point\") +\n  stat_summary(aes(x = as.integer(cut)), \n               fun = mean, geom = \"line\") +\n  scale_x_discrete(position = \"top\") +\n  scale_color_viridis_d(guide = guide_legend(reverse = TRUE)) +\n  theme_minimal() \n```"},{"path":"advanced.html","id":"dashboards","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.5.2 Dashboards","text":"Dashboards way display text, tables, plots dynamic formatting. install flexdashboard, can choose flexdashboard template create new R Markdown document.\nFigure 1.16: Flexdashboard RMarkdown template.\ncode shows load packages, display two tables tabset, display two plots column. can see HTML output .Change size web browser see boxes, tables figures change.best way figure format dashboard trial error, can also look sample layouts.","code":"---\ntitle: \"Flexdashboard Demo\"\noutput: \n  flexdashboard::flex_dashboard:\n    social: [ \"twitter\", \"facebook\", \"linkedin\", \"pinterest\" ]\n    source_code: embed\n    orientation: columns\n    vertical_layout: fill\n---\n\n```{r setup, include=FALSE}\nlibrary(flexdashboard)\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(DT) # for interactive tables\ntheme_set(theme_minimal())\n```\n\nColumn {data-width=350, .tabset}\n--------------------------------\n\n### By Cut\n\nThis table uses `kableExtra` to render the table with a specific theme.\n\n```{r}\ndiamonds %>%\n  group_by(cut) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by cut.\") %>%\n  kable_classic()\n```\n\n### By Colour\n\nThis table uses `DT::datatable()` to render the table with a searchable interface.\n\n```{r}\ndiamonds %>%\n  group_by(color) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  DT::datatable(colnames = c(\"Colour\", \"Average Price\"), \n                caption = \"Mean diamond price by colour\",\n                options = list(pageLength = 5),\n                rownames = FALSE) %>%\n  DT::formatRound(columns=2, digits=0)\n```\n\nColumn {data-width=350}\n-----------------------\n\n### By Clarity\n\n```{r by-clarity, fig.cap = \"Diamond price by clarity\"}\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n```\n\n\n### By Carats\n\n```{r by-carat, fig.cap = \"Diamond price by carat\"}\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n```"},{"path":"advanced.html","id":"books","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.5.3 Books","text":"can create online books bookdown. fact, book reading created using bookdown. download package, start new project choose \"Book project using bookdown\" list project templates.\nFigure 1.17: Bookdown project template.\nchapter written separate .Rmd file general book settings can changed _bookdown.yml _output.yml files.","code":""},{"path":"advanced.html","id":"websites","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.5.4 Websites","text":"can create simple website way create R Markdown document. Choose \"Simple R Markdown Website\" project templates get started. See Appendix ?? step--step tutorial.complex, blog-style websites, can investigate blogdown. install package, also able create template blogdown projects get started.","code":""},{"path":"advanced.html","id":"shiny","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.5.5 Shiny","text":"get truly interactive, can take R coding next level learn Shiny. Shiny apps let R code react user input. can things like make word cloud, search google spreadsheet, conduct survey.well outside scope class, skills learned provide good start. free book Building Web Apps R Shiny one authors book can get started creating shiny apps.","code":""},{"path":"advanced.html","id":"resources-report","chapter":"1 Advanced Visualisations & Reports","heading":"1.3.6 Resources","text":"RStudio FormatsR Markdown CookbookDTFlexdashboardBookdownBlogdownShinyBuilding Web Apps R Shiny","code":""},{"path":"advanced.html","id":"course-complete","chapter":"1 Advanced Visualisations & Reports","heading":"1.4 Course Complete","text":", done. covered huge amount course Applied Data Skills, whilst likely comfortable bits others, skills developed truly impressive. Even go learned book, can now work reproducibly produce informative summaries visualisations provide new insights data reduce human error.also important recognise knowledge R never complete. course writing book, entire ADS team learned new functions, new arguments, new approaches, new reasons love loathe certain data visualisations. flexibility possibility R makes frustrating empowering equal measure. hope anything Applied Data Skills start journey R, end. Please keep touch, love see takes .Emily Nordmann,\nLisa DeBruine,\nGaby Mahrholz,\nJaimie Torrance","code":""}]
