[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"book provides overview basic skills needed turn raw data informative summaries visualisations presented professional reports presentations. book introduce learners R (R Core Team, 2021), programming language can help automate working data. book cover importing processing data spreadsheets, producing data summaries descriptive statistics tables, creating beautiful informative visualisations, constructing reports presentations automatically update underlying data changes.end book, able use R :clean process datasummarise datainformatively visualise datacreate reusable report templates","code":""},{"path":"index.html","id":"structure-of-the-course","chapter":"Overview","heading":"0.1 Structure of the course","text":"book accompanies 10-week course, covering one chapter per week. chapter introduce new skills concepts using concrete examples. various points, multiple-choice fill---blank questions check understanding. chapter accompanying walk-videos, instructor demonstrates skills covered chapter. chapter also accompanying exercises reinforce learning.","code":""},{"path":"index.html","id":"how-to-learn-data-skills","chapter":"Overview","heading":"0.2 How to learn data skills","text":"Learning data skills kind like gym membership (thanks Phil McAleer analogy). given state---art equipment use instructions use , data skills get stronger unless practice.Data skills require memorise lots code. introduced many different functions, main skill learn efficiently find information need. require getting used structure help files cheat sheets, learning Goggle problem choose helpful solution, learning read error messages.Learning code involves making lot mistakes. mistakes completely essential process, try feel frustrated. Many chapter exercises give broken code fix get experience seeing common errors look like. become experienced coder, might make fewer errors, recover much faster.","code":""},{"path":"intro.html","id":"intro","chapter":"1 Intro to R and RStudio","heading":"1 Intro to R and RStudio","text":"","code":""},{"path":"intro.html","id":"ilo-intro","chapter":"1 Intro to R and RStudio","heading":"1.1 Intended Learning Outcomes","text":"Install R RStudioBe able install add-packagesBe able get help packages functionsBe able create objects writing running code console","code":""},{"path":"intro.html","id":"walkthrough-video","chapter":"1 Intro to R and RStudio","heading":"1.2 Walkthrough video","text":"walkthrough video chapter available via Echo360. recommend first trying work section book watching video get stuck, like information. feel slower just starting video, learn long-run.","code":""},{"path":"intro.html","id":"intro-r-rstudio","chapter":"1 Intro to R and RStudio","heading":"1.3 R and RStudio","text":"R programming language write code RStudio Integrated Development Environment (IDE) makes working R easier. Think knowing English using plain text editor like NotePad write book versus using word processor like Microsoft Word. , much harder without things like spell-checking formatting able use advanced features Word developed. similar way, can use R without R Studio recommend . RStudio serves text editor, file manager, spreadsheet viewer, . key thing remember although work using RStudio course, actually using two pieces software means time--time, may separate updates.","code":""},{"path":"intro.html","id":"intro-installing-r","chapter":"1 Intro to R and RStudio","heading":"1.4 Installing R and RStudio","text":"Appendix technical details installing R RStudio computer. need help installing R, please ask Teams attend office hours. installed R RStudio come back chapter. already R /RStudio installed, recommend updating latest version work course. Appendix B details . , concentrate introducing RStudio's interface getting configured.","code":""},{"path":"intro.html","id":"rstudio_ide","chapter":"1 Intro to R and RStudio","heading":"1.4.1 RStudio","text":"installed R, gave computer ability process R programming language, also installed app called \"R\". never use app. Instead, use RStudio. RStudio arranged four window panes.\nFigure 1.1: RStudio IDE\ndefault, upper left pane source pane, view, write, edit code files view data tables spreadsheet format. first open RStudio, pane display open document load data - worry, get soon.lower left pane console pane, can type commands view output messages. can write code console test . code run can create objects environment, code saved. need write code script source pane save .right panes several different tabs show information code. used tabs upper right pane Environment tab Help tab. environment tab lists information objects defined code. learn Help tab Section 1.6.5.lower right pane, used tabs Files tab directory structure, Plots tab plots made script, Packages tab managing add-packages (see Section 1.6), Viewer tab display reports created scripts. can change location panes tabs shown Preferences > Pane Layout.","code":""},{"path":"intro.html","id":"intro-reproducibility","chapter":"1 Intro to R and RStudio","heading":"1.4.2 Reproducibility","text":"class, learning make reproducible reports. involves writing scripts transform data, create summaries visualisations, embed report way always gives results.things reproducibly, others (future ) can understand check work. can also reuse work easily. example, need create report every month social media analytics company, reproducible report allows download new month's data create report within seconds. might take little longer set report first instance reproducible methods, time saves long run invaluable.Appendix .3 shows change two important settings global Options increase reproducibility. settings :Restore .RData workspace startup: CheckedNot CheckedSave workspace .RData exit: AlwaysNeverAsk","code":""},{"path":"intro.html","id":"themes-and-accessiblilty","chapter":"1 Intro to R and RStudio","heading":"1.4.3 Themes and accessiblilty","text":"can customise R Studio looks make work . Click Tools - Global Options - Appearance. can change default font, font size, general appearance R Studio, including using dark mode. Play around settings see prefer - going spend lot time R, might well look nice!","code":""},{"path":"intro.html","id":"intro-sessions","chapter":"1 Intro to R and RStudio","heading":"1.5 Sessions","text":"settings configured correctly, open RStudio start writing code, loading packages, creating objects, new session Environment tab completely empty. find code working figure , might worth restarting R session. clear environment detach loaded packages - think like restarting phone. several ways can restart R:Menu: Session > Restart RCmd-Shift-F10 Ctl-Shift-F10type .rs.restartR() consoleTry now. Additionally, now good time create notebook can keep record useful hints tips things try code working. Add \"restart R session\" notebook first item.","code":""},{"path":"intro.html","id":"packages","chapter":"1 Intro to R and RStudio","heading":"1.6 Packages and functions","text":"install R access range functions including options rglossary(\"data wrangling\")` statistical analysis. functions included default installation typically referred base R can think like default apps come pre-loaded phone.One great things R, however, user extensible: anyone can create new add-extends functionality. currently thousands packages R users created solve many different kinds problems, just simply fun. example, packages data visualisation, machine learning, interactive dashboards, web scraping, playing games Sudoku.Add-packages distributed base R, downloaded installed archive, way , instance, download install PokemonGo smartphone. main repository packages reside called CRAN, Comprehensive R Archive Network.important distinction installing package loading package.","code":""},{"path":"intro.html","id":"install-package","chapter":"1 Intro to R and RStudio","heading":"1.6.1 Installing a package","text":"done using install.packages(). like installing app phone: app remain installed remove . instance, want use PokemonGo phone, install App Store Play Store; re-install time want use . launch app, run background close restart phone. Likewise, install package, package available (loaded) every time open R.Install esquisse package system. package lets create plots interactively copy code needed make reproducibly.already packages like ggplot2 shiny installed, also install dependencies . get message says something like package ‘esquisse’ successfully unpacked MD5 sums checked, installation successful.Never install package inside script. console pane.can also install multiple packages . command install packages using class. take , try middle tutorial!","code":"\n# type this in the console pane\ninstall.packages(\"esquisse\")\ninstall.packages(\n  \"tidyverse\",      # for everything\n  \"rio\",            # for data import\n  \"kableExtra\",     # for nice tables\n  \"ggwordcloud\",    # for word clouds\n  \"tidytext\",       # for parsing text for word clouds\n  \"patchwork\",      # for multi-part plots\n  \"ggthemes\",       # for themed plots\n  \"glue\",           # for text manipulation\n  \"flexdashboard\",  # for dashboard presentations\n  \"treemap\",        # for treemap plots\n  \"sf\",             # for mapping geoms\n  \"rnaturalearth\",  # for map data\n  \"rnatrualearthdata\" # extra mapping data\n)\n\n# install waffle package \n\ndevtools::install_github(\"hrbrmstr/waffle\")"},{"path":"intro.html","id":"loading-a-package","chapter":"1 Intro to R and RStudio","heading":"1.6.2 Loading a package","text":"done using library(package_name). like launching app phone: functionality app launched remains close app restart. example, run library(glue) within session, functions package referred glue made available R session. next time start R, need run library(glue) want access package.can load esquisse package current R session follows:might get red text load package, normal. usually warning package functions name packages already loaded.can use convention package::function() indicate add-package function resides. instance, see readr::read_csv(), refers function read_csv() readr add-package. package loaded using library(), specify package name function unless conflict (e.g., two packages loaded function name).","code":"\nlibrary(esquisse)"},{"path":"intro.html","id":"using-a-function","chapter":"1 Intro to R and RStudio","heading":"1.6.3 Using a function","text":"Now can run function esquisser(), starts interactive plotting example.see error message: Error esquisser(data = ggplot2::diamonds) : find function \"esquisser\", just means forgot load esquisse package using library(esquisse). Either run code load package first, preface function package name like esquisse::esquisser() use without loading package.function name refers code can reuse. start using functions provided packages, can also write functions. function name, pair parentheses, contain zero arguments. options can set. example , data argument set ggplot2::diamonds, refers built-dataset diamonds ggplot2 package.type function console pane, run soon hit enter. put function script R Markdown document source pane, run run script, knit R Markdown file, run code chunk. learn Chapter 2.","code":"\n# type this in the console pane and press enter\nesquisser(data = ggplot2::diamonds)"},{"path":"intro.html","id":"tidyverse","chapter":"1 Intro to R and RStudio","heading":"1.6.4 Tidyverse","text":"tidyverseis meta-package loads several packages using almost every chapter book:ggplot2, data visualisation (Chapter 3)readr, data import (Chapter 4)tibble, tables (Chapter 4)tidyr, data tidying (Chapter 7)dplyr, data manipulation (Chapter 8)stringr, stringsforcats, factorspurrr, repeating thingsWhen install tidyverse, also installs useful packages can load individually. can get full list using tidyverse_packages(), packages using book :googlesheets4, working Google spreadsheetsreadxl, Excel fileslubridate, working dateshms, working timesrvest, web scraping","code":""},{"path":"intro.html","id":"function-help","chapter":"1 Intro to R and RStudio","heading":"1.6.5 Function Help","text":"load tidyverse automatically loads packages, however, can helpful know package function comes need Google . function base R loaded package, can type ?function_name console access help file. top help give function package name.package loaded, use ?package_name::function_name specify package help() function. sure package function , use shortcut ??function_name.Function help always organised way. example, look help ?glue::trim. top, tells name function package curly brackets, short description function, followed longer description. Usage section shows function arguments. arguments default values, shown like function(arg = default). Arguments section lists argument explanation. may Details section even detail functions. Examples section last, shows examples can run console window see function works.first argument mean function? trimna.rmmeanxWhat package read_excel ? readrreadxlbasestats","code":"\n# if the package is loaded\n?esquisser\nhelp(\"esquisser\")\n\n# works whether or not the package is loaded\n?esquisse::esquisser\nhelp(\"esquisser\", package=\"esquisse\") \n\n# shows a list of potentially matching functions\n??esquisser"},{"path":"intro.html","id":"arguments","chapter":"1 Intro to R and RStudio","heading":"1.6.6 Arguments","text":"can look arguments/options function using help documentation. arguments required, optional. Optional arguments often use default (normally specified help documentation) enter value.example, look help documentation function sample() randomly samples items list.help documentation sample() appear bottom right help panel. usage section, see sample() takes following form:arguments section, explanations arguments. x list items want choose , size number items want choose, replace whether item may selected , prob gives probability item chosen. details section notes values entered replace prob use defaults FALSE (item can chosen ) NULL (items equal probability chosen). default value x size, must specified otherwise code run.try example just change required arguments x size ask R choose 5 random letters (letters built-vector 26 lower-case Latin letters).sample() generates random sample. time run code, generate different set random letters (try ). function set.seed() controls random number generator - using functions use randomness (sample()), running set.seed() ensure get result (many cases may want ). get numbers , run set.seed(1242016) console, run sample(x = letters, size = 5) .Now can change default value replace argument produce set letters allowed duplicates.time R still produced 5 random letters, now set letters two instances \"k\". Always remember use help documentation help understand arguments function requires.","code":"\n?sample\nsample(x, size, replace = FALSE, prob = NULL)\nsample(x = letters, size = 5)## [1] \"z\" \"v\" \"y\" \"w\" \"j\"\nset.seed(8675309)\nsample(x = letters, size = 5, replace = TRUE)## [1] \"t\" \"k\" \"j\" \"k\" \"m\""},{"path":"intro.html","id":"argument-names","chapter":"1 Intro to R and RStudio","heading":"1.6.7 Argument names","text":"examples, written argument names code (.e., x, size, replace), however, strictly necessary. following two lines code produce result (although time run sample() produce slightly different result, random, still work ):Importantly, write argument names, R use default order arguments. sample assume first value enter x. second value size third value replace.write argument names can write arguments whatever order like:first learning R, may find useful write argument names can help remember understand part function . However, skills progress may find quicker omit argument names also see examples code online use argument names, important able understand argument bit code referring (look help documentation check).course, always write argument names first time use function. However, subsequent uses may omitted.","code":"\nsample(x = letters, size = 5, replace = TRUE)\nsample(letters, 5, TRUE)\nsample(size = 5, replace = TRUE, x = letters)"},{"path":"intro.html","id":"tab-auto-complete","chapter":"1 Intro to R and RStudio","heading":"1.6.8 Tab auto-complete","text":"One useful feature R Studio tab auto-complete functions (see Figure 1.2). write name function press tab key, R Studio show arguments function takes along brief description. press enter argument name fill name , just like auto-complete phone. incredibly useful first learning R remember use feature frequently.\nFigure 1.2: Tab auto-complete\n","code":""},{"path":"intro.html","id":"objects","chapter":"1 Intro to R and RStudio","heading":"1.7 Objects","text":"large part coding involve creating manipulating objects. Objects contain stuff. stuff can numbers, words, result operations analyses. assign content object using <-.Run following code console, change values name age details change christmas holiday date care .see four objects now appear environment pane:name character (text) data. order R recognise character data, must enclosed double quotation marks \" \".age numeric data. order R recognise number, must enclosed quotation marks.today stores result function Sys.Date(). function returns computer system's date. Unlike name age, hard-coded (.e., always return values enter), contents object today change dynamically date. , run function tomorrow, update date tomorrow's date.christmas also date hard-coded specific date. wrapped within .Date() function tells R interpret character string provide date rather text.print contents object, type object's name console press enter. Try printing four objects now.Finally, key concept understand objects can interact can save results interactions new object. Edit run following code create new objects, print contents new object.","code":"\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2022-12-25\")\ndecade <- age + 10\nfull_name <- paste(name, \"Nordmann\")\nhow_long <- christmas - today"},{"path":"intro.html","id":"help","chapter":"1 Intro to R and RStudio","heading":"1.8 Getting help","text":"feel like need lot help starting learn. really go away; impossible memorise everything. goal learn enough structure R can look things quickly. introduce specialised jargon glossary chapter; easier google \"convert character numeric R\" \"make numbers quotes actual numbers words\". addition function help described , additional resources use often.","code":""},{"path":"intro.html","id":"package-reference-manuals","chapter":"1 Intro to R and RStudio","heading":"1.8.1 Package reference manuals","text":"Start help browser entering help.start() console. Click \"Packages\" \"Reference\" see list packages. Scroll readxl package click see list functions available package.","code":""},{"path":"intro.html","id":"googling","chapter":"1 Intro to R and RStudio","heading":"1.8.2 Googling","text":"function help help, even sure function need, try Googling question. take practice able use right jargon search terms get want. helps put \"R\" \"tidyverse\" search text, name relevant package, like ggplot2.","code":""},{"path":"intro.html","id":"vignettes","chapter":"1 Intro to R and RStudio","heading":"1.8.3 Vignettes","text":"Many packages, especially tidyverse ones, helpful websites vignettes explaining use functions. vignettes also available inside R. can access package's help page vignette() function.","code":"\n# opens a list of available vignettes\nvignette(package = \"ggplot2\")\n\n# opens a specific vignette in the Help pane\nvignette(\"ggplot2-specs\", package = \"ggplot2\")"},{"path":"intro.html","id":"glossary-intro","chapter":"1 Intro to R and RStudio","heading":"1.9 Glossary","text":"","code":""},{"path":"intro.html","id":"resources-intro","chapter":"1 Intro to R and RStudio","heading":"1.10 Further Resources","text":"RStudio IDE CheatsheetRStudio Cloud","code":""},{"path":"reports.html","id":"reports","chapter":"2 Reports with R Markdown","heading":"2 Reports with R Markdown","text":"","code":""},{"path":"reports.html","id":"ilo-reports","chapter":"2 Reports with R Markdown","heading":"2.1 Intended Learning Outcomes","text":"able structure projectBe able knit simple reproducible report R MarkdownBe able create code chunks, tables, images, inline R R Markdown documentFor reference, packages use chapter.","code":"\nlibrary(tidyverse)  # various data manipulation functions\nlibrary(knitr)      # for rendering a report from a script\nlibrary(kableExtra) # for styling tables"},{"path":"reports.html","id":"projects","chapter":"2 Reports with R Markdown","heading":"2.2 Organising a project","text":"write code, first, need get organised. Projects RStudio way group files need one project. projects include scripts, data files, output files like PDF report created script images.First, make new folder computer keep materials class, suggest renaming something like ADS-22. folder R look default find save files known working directory. can set working directory manually folder want work menu commands:Session > Set Working Directory > Choose Directory...However, better way organising files using Projects RStudio.","code":""},{"path":"reports.html","id":"project-start","chapter":"2 Reports with R Markdown","heading":"2.2.1 Start a Project","text":"create new project work chapter:File > New Project...Name project 02-reportsSave inside directory just made.RStudio restart open new project directory working directory.\nFigure 2.1: Starting new project.\nClick Files tab lower right pane see contents project directory. see file called 02-reports.Rproj, file contains project information. can double-click open project.Depending settings, may also see directory called .Rproj.user, contains specific user settings. can ignore \"invisible\" files start full stop.","code":""},{"path":"reports.html","id":"naming","chapter":"2 Reports with R Markdown","heading":"2.2.2 Naming Things","text":"start creating new files, important review name files. might seem bit pedantic, following clear naming rules people computers can easily find things make life much easier long run. important principles:file directory names contain letters, numbers, dashes, underscores, full stop (.) file name extension (means spaces!)consistent capitalisation (set rule make easy remember, like always use lowercase)use underscores (_) separate parts file name, like title date, dashes (-) separate words part (e.g., social-media-report_2021-10.Rmd)name files pattern alphabetises sensible order makes easy find file looking forprefix file name underscore move top list, prefix files numbers control orderFor example, file names mess:report.docreport final.docData (Customers) 11-15.xlsCustomers Data Nov 12.xlsfinal report2.docproject notes.txtVendor Data November 15.xlsHere one way structure similar files structure easy human scan list use code find relevant files. See can figure last one ._project-notes.txtreport_v1.docreport_v2.docreport_v3.docdata_customer_2021-11-12.xlsdata_customer_2021-11-15.xlsvendor-data_2021-11-15.xlsdata-vendor-2021_11_15.xlsdata_vendor_2021-11-15.xlsdata_2021-11-15_vendor.xlsThink ways name files . Look project files see can improve.","code":""},{"path":"reports.html","id":"rmarkdown","chapter":"2 Reports with R Markdown","heading":"2.3 R Markdown","text":"Throughout course use R Markdown create reproducible reports table contents, text, tables, images, code. text can written using markdown, way specify formatting, headers, paragraphs, lists, bolding, links.","code":""},{"path":"reports.html","id":"new-document","chapter":"2 Reports with R Markdown","heading":"2.3.1 New document","text":"open new R Markdown document click:File > New File > R MarkdownYou prompted give title; call document Important Info. can also change author name. Keep output format HTML.opened new document sure save clicking File > Save .... name file important_info (Mac can see file extension, name important_info.Rmd). file automatically saved project folder, .e., working directory, now see file appear file viewer pane.first open new R Markdown document see bunch welcome text looks like :\nFigure 2.2: New R Markdown text\nfollowing steps:Delete everything line 12 onwardsOn line 12 type \"## info\" (hashtags without quotation marks)Click insert new code menu (green box C plus sign) RYour Markdown document now look something like :\nFigure 2.3: New R chunk\n","code":""},{"path":"reports.html","id":"code-chunks","chapter":"2 Reports with R Markdown","heading":"2.3.2 Code chunks","text":"created subtitle code chunk. R Markdown, anything written grey code chunk assumed code, anything written white space (code chunks) regarded normal text (actual colours depend theme applied, refer default white grey). makes easy combine text code one document.create new code chunk notice grey box starts ends three back ticks ```. One common mistake accidentally delete back ticks. Remember, code chunks text entry different colours - colour certain parts Markdown look right, check deleted back ticks.code chunk, write code created Chapter 1.7.","code":"\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2022-12-25\")"},{"path":"reports.html","id":"running-code","chapter":"2 Reports with R Markdown","heading":"2.3.3 Running code","text":"working R Markdown document, several ways run lines code.First, can highlight code want run click Run -> Run Selected Line(s), however tedious can cause problems highlight exactly code want run.\nFigure 2.4: Tedious method running code\nAlternatively, can press green \"play\" button top-right code chunk run lines code chunk.\nFigure 2.5: Slightly better method running code\nEven better learn keyboard short cuts R Studio. run single line code, make sure cursor line code want run (can anywhere) press ctrl + enter Cmd + enter Mac. want run code code chunk, press ctrl/cmd + shift + enter. Learn short cuts, make life easier!Run code using methods . see variables name, age, today, christmas appear environment pane.","code":""},{"path":"reports.html","id":"rmd-inline-r","chapter":"2 Reports with R Markdown","heading":"2.3.4 Inline code","text":"keep talking using R Markdown reproducible reports easier show tell powerful give insight course (hopefully!) change way work data forever!One important feature R Markdown can combine text code insert values writing using inline coding. ever copy paste value text one file another, know easy can make mistakes. Inline code avoids . easier show inline code rather explain go.First, copy paste text white space underneath code chunk. used different variable name christmas update name object created, otherwise change anything else.","code":"My name is `r name` and I am `r age` years old. \nIt is `r christmas - today` days until Christmas, \nwhich is my favourite holiday."},{"path":"reports.html","id":"rmd-knit","chapter":"2 Reports with R Markdown","heading":"2.3.5 Knitting your file","text":"Now going knit, compile, file document type choosing. case create default html file, learn create files like Word PDF throughout course. knit file click:Knit > Knit HMTLR Markdown create display new HTML document, also automatically save file working directory.magic, slightly odd bit text copied pasted now appears normal sentence values pulled objects created.name Emily 36 years old. 338 days Christmas, favourite holiday.can also knit typing following code console. Never put Rmd script , try knit infinite loop.","code":"\nknitr::knit2html(\"important_info.Rmd\")"},{"path":"reports.html","id":"loading-data","chapter":"2 Reports with R Markdown","heading":"2.4 Loading data","text":"Now try another example using Markdown time rather using objects created scratch, read data file.Save close important_info.Rmd document. open save new Markdown document, time named sales_data.Rmd. can get rid everything line 12 onwards.","code":""},{"path":"reports.html","id":"loading-online","chapter":"2 Reports with R Markdown","heading":"2.4.1 Online sources","text":"First, try loading data stored online. Create code chunk document copy, paste, run code. code loads simulated sales data.data stored .csv file going use readr::read_csv() function load .package readr part tidyverse installed Chapter 1 load package library()Note url contained within double quotation marks - work without .dataset simulated sales data different types vehicles line data single order. multiple ways view check dataset R. following make note information approach seems give . like information functions, can look help documentation ?function:Click sales_online object environment paneRun head(sales_online) consoleRun summary(sales_online) consoleRun str(sales_online) consoleRun View(sales_online) console","code":"\n# Data from https://www.kaggle.com/kyanyoga/sample-sales-data\nlibrary(tidyverse)\nsales_online <- readr::read_csv(\"https://psyteachr.github.io/ads-v1/data/sales_data_sample.csv\")"},{"path":"reports.html","id":"local-data-files","chapter":"2 Reports with R Markdown","heading":"2.4.2 Local data files","text":"commonly, working data files stored locally computer. put files? usually want scripts data files single project inside one folder computer, working directory, already set main directory 02-reportsfor chapter.can also organise files subdirectories inside main project directory, putting raw data files directory called data saving image files directory called images. Using subdirectories helps avoid one single folder becoming cluttered, important working big projects.02-reports directory, create new folder named data, , download copy sales data file save new subdirectory.load data local file, can use read_csv() function time rather specifying url, give subdirectory file name.Things note:must include file extension (case .csv)subdirectory folder name (data) file name separated forward slash /Precision important, typo file name able find file; remember R case sensitive - Sales_Data.csv completely different file sales_data.csv far R concerned.Run head(), summary(), str(), View() sales_local confirm data sales_online.","code":"\nsales_local <- read_csv(\"data/sales_data_sample.csv\") "},{"path":"reports.html","id":"writing-a-report","chapter":"2 Reports with R Markdown","heading":"2.5 Writing a report","text":"going write basic report sales dataset using R Markdown show features. expanding almost every bit show throughout course; important outcome start get comfortable R Markdown works can use .","code":""},{"path":"reports.html","id":"data-analysis","chapter":"2 Reports with R Markdown","heading":"2.5.1 Data analysis","text":"report just going present simple sales stats three types vehicles: planes, motorcycles, classic cars. come back write kind code Chapter 2.6.5. now, see can follow logic code via code comments.Create new code chunk, copy, paste run following code view sales_counts clicking object environment pane.row dataset sale, code gives us nice easy way seeing many sales made type vehicle; just counts number rows group.","code":"\n# start with the sale_online data and then\nsales_counts <- sales_online %>% \n  # keep only the data from planes, motorcycles, and cars and then\n  filter(PRODUCTLINE %in% c(\"Planes\", \"Motorcycles\", \"Classic Cars\")) %>% \n  # count how many are in each PRODUCTLINE\n  count(PRODUCTLINE)"},{"path":"reports.html","id":"markdown","chapter":"2 Reports with R Markdown","heading":"2.5.2 Text formatting","text":"can use visual markdown editor RStudio version 1.4 higher. button top source pane pen tip menu options familiar anyone worked software like Microsoft Word.\nFigure 2.6: visual editor.\nuseful complex styling, can also use common plain-text style markups:Headers created prefacing subtitles one hashes (#) space (exclude space). include table contents, created document headers.Format text italics bold surrounding text one two asterisks underscores.Make lists using numbers, asterisks dashes items. Indent items make nested lists.Make links like : [psyTeachR](https://psyteachr.github.io/)Download R Markdown Cheat Sheet learn .Copy paste text white space code chunk loads data. Save file click knit view results. look bit messy now contains code messages loading data worry, get rid soon.Try match inline code sales_counts table. note:$ sign used indicate specific variables (columns) object using object$variable syntax.Square brackets number e.g., [3] indicate particular observationSo sales_counts$n[3] asks inline code display third observation variable n dataset sales_online.Add another line reports total numbers motorcycles using inline code. Using either visual editor text markups, add bold italics matches others.","code":"## Sample sales report\n\nThis report summarises the sales data for different types of vehicles sold between 2003 and 2005. Thie data is from [Kaggle](https://www.kaggle.com/kyanyoga/sample-sales-data).\n\n### Sales by type\n\nThe *total* number of **planes** sold was `r sales_counts$n[3]`\n\nThe *total* number of **classic cars** sold was `r sales_counts$n[1]`.The *total* number of **motorcycles** sold was `r sales_counts$n[2]`."},{"path":"reports.html","id":"comments","chapter":"2 Reports with R Markdown","heading":"2.5.3 Code comments","text":"code used code comments important highlight useful . can add comments inside R chunks hash symbol (#). R ignore characters hash end line.usually good practice start code chunk comment explains , especially code explained text report.name objects clearly, often need add clarifying comments. example, named three objects total_number_of_sales, first_year last_year, omit comments. bit art comment code well try add comments working book - help consolidate learning future comes review code, thank past clear.","code":"\n# important numbers\n\nn <- nrow(sales_online) # the total number of sales (number of rows)\nfirst <- min(sales_online$YEAR_ID) # the first (minimum) year\nlast <- max(sales_online$YEAR_ID) # the last (maximum) year"},{"path":"reports.html","id":"rmd-images","chapter":"2 Reports with R Markdown","heading":"2.5.4 Images","text":"saying goes, picture paints thousand words sometimes want communicate data using visualisations.Create code chunk display graph data document text written far. use code learn Chapter 3 make simple bar chart represents sales data - focus trying follow bits code map plot created.Copy paste code. Run code Markdown see plot creates knit file see displayed document.can also include images create R using markdown syntax images. similar loading data can either use image stored computer, via url using knitr::include_graphics().Create new code chunk underneath sales figures planes, classic cars, motorcycles add image Google Wikipedia (right click image select copy image address get url). See section chunk defaults see change display size.images Wikipedia public domain open license. can search images license Google Images clicking Tools button choosing \"Creative Commons licenses\" \"Usage Rights\" menu.","code":"\nggplot(data = sales_counts, \n       mapping = aes(x = PRODUCTLINE, y = n, fill = PRODUCTLINE)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  labs(x = \"Type of vehicle\",\n       y = \"Number of sales\",\n       title = \"Sales by vehicle type\",\n       subtitle = \"2003 - 2005\")\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/3/3f/P-51_Mustang_edit1.jpg\")"},{"path":"reports.html","id":"rmd-tables","chapter":"2 Reports with R Markdown","heading":"2.5.5 Tables","text":"Rather figure, might want display data table.Add new level 2 heading (two hashtags) document, name heading \"Data table form\" create new code chunk .First, see table looks like make edits. Simply write name table want display code chunk (case sales_counts) click knit see looks like.just readable great. customise tables going use function kable() kableExtra package.Amend code load kableExtra package apply kable() function table. done , knit file see output.better, still amazing. make adjustments. can change names columns, add caption, also change alignment cell contents using arguments kable().can also add theme change overall style. example used kable_classic 5 others: kable_paper, kable_classic_2, kable_minimal, kable_material kable_material_dark. Try see one prefer.Finally, can change formatting first row using row_spec. Look help documentation row_spec see options available. Try changing value arguments figure .\nTable 2.1: Number sales per product line.\nappearance placement table caption depends type document creating. captions may look different book creating single-page html_document, book uses bs4_book style bookdown package. learn document output types Chapter 10.feeling confident covered far, kableExtra vignette gives lot detail can edit tables using kableExtra.can also explore gt package, complex, allows create beautiful customised tables. Riding tables {gt} {gtExtras} outstanding tutorial.","code":"\nsales_counts## # A tibble: 3 × 2\n## # Groups:   PRODUCTLINE [3]\n##   PRODUCTLINE      n\n##   <chr>        <int>\n## 1 Classic Cars   967\n## 2 Motorcycles    331\n## 3 Planes         306\nlibrary(kableExtra) # for table display\n\nsales_counts %>% # start with the sales_count table and then\n  kable() # apply the kable function\nsales_counts %>%\n  kable(col.names = c(\"Product\", \"Sales\"),\n      caption = \"Number of sales per product line.\", \n      align = \"c\") %>% \n  kable_classic(full_width = FALSE) %>% \n  row_spec(row = 0, bold = TRUE, color = \"red\") "},{"path":"reports.html","id":"refining-your-report","chapter":"2 Reports with R Markdown","heading":"2.6 Refining your report","text":"","code":""},{"path":"reports.html","id":"rmd-setup","chapter":"2 Reports with R Markdown","heading":"2.6.1 Chunk defaults","text":"finish tidying report organising code bit better. create new R Markdown file RStudio, setup chunk automatically created - ignored chunk now.can set default options document . Type str(knitr::opts_chunk$get()) console see full list options can set default values, however, useful common options change purposes writing reports revolve around whether want show code size images.Replace code setup chunk code try changing option FALSE TRUE changing numeric values knit file see difference makes.Note fig.width fig.height control original size aspect ratio images generated R, plots. affect relative size text elements plots. affect size existing images . However, .width controls display size existing images figures generated R. usually set percentage page width.\nFigure 2.7: plot default values fig.width = 8, fig.height = 5, .width = \"100%\"\n\nFigure 2.8: plot half default width height: fig.width = 4, fig.height = 2.5, .width = \"100%\"\n\nFigure 2.9: plot half output width: fig.width = 4, fig.height = 2.5, .width = \"50%\"\n","code":"```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)``````{r setup, include=FALSE}\nknitr::opts_chunk$set(\n  echo       = FALSE,     # whether to show code chunks\n  message    = FALSE,     # whether to show messages from your code\n  warning    = FALSE,     # whether to show warnings from your code\n  fig.width  = 8,         # figure width in inches (at 96 dpi)\n  fig.height = 5,         # figure height in inches (at 96 dpi)\n  out.width = \"50%\"      # figures/images span 50% of the page width\n)```"},{"path":"reports.html","id":"override-defaults","chapter":"2 Reports with R Markdown","heading":"2.6.2 Override defaults","text":"setup options change behaviour entire document, however, can override behaviour individual code chunks.example, default might want hide code also might occasion want show code used analyse data. can set echo = FALSE setup chunk make hiding code default individual code chunk plot set echo = TRUE. Try now knit file see results.Additionally, can also override default image display size dimensions.","code":"```{r, echo = TRUE}\nggplot(data = sales_counts, \n       mapping = aes(x = PRODUCTLINE, y = n, fill = PRODUCTLINE)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  labs(x = \"Type of vehicle\",\n       y = \"Number of sales\",\n       title = \"Sales by vehicle type\",\n       subtitle = \"2003 - 2005\")``````{r, out.width='25%'}\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/3/3f/P-51_Mustang_edit1.jpg\")``````{r, fig.width = 10, fig.height = 20}\nggplot(data = sales_counts, \n       mapping = aes(x = PRODUCTLINE, y = n, fill = PRODUCTLINE)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  labs(x = \"Type of vehicle\",\n       y = \"Number of sales\",\n       title = \"Sales by vehicle type\",\n       subtitle = \"2003 - 2005\")```"},{"path":"reports.html","id":"loading-packages","chapter":"2 Reports with R Markdown","heading":"2.6.3 Loading packages","text":"can also add packages need setup chunk using library(). Often working script, realize need load another add-package. bury call library(package_I_need) way script. Put top, user overview packages needed.Move code loads tidyverse kableExtra setup chunk.","code":""},{"path":"reports.html","id":"yaml","chapter":"2 Reports with R Markdown","heading":"2.6.4 YAML header","text":"Finally, YAML header bit top Markdown document. can set several options well.Try changing values false true see options .df_print: kable option prints data frames using knitr::kable automatically.built-bootswatch themes : default, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united, yeti. can view download themes. Try changing theme see one like best.\nFigure 2.10: Light themes versions 3 4.\nYAML headers can picky spaces semicolons (rest R Markdown much forgiving). example, put space \"author\", get error looks like:error message tell exactly problem (second character second line YAML header), usually matter fixing typos making sure indenting exactly right.","code":"---\ntitle: \"Sales Data Report\"\nauthor: \"Your name\"\noutput:\n  html_document:\n    df_print: kable\n    theme: \n      version: 4\n      bootswatch: yeti\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: false\n    toc_depth: 3\n    number_sections: false\n---Error in yaml::yaml.load(..., eval.expr = TRUE) : \n  Parser error: while parsing a block mapping at line 1, column 1 did not find expected key at line 2, column 2"},{"path":"reports.html","id":"summary","chapter":"2 Reports with R Markdown","heading":"2.6.5 Summary","text":"chapter covered lot hopefully now much better idea Markdown able . Whilst working Markdown takes longer initial set-stage, fully reproducible report can plug new data week month simply click knit, reducing duplication effort, human error comes .continue work book learn wrangle analyse data use Markdown present . slowly build available customisation options course next weeks, find Markdown reports start look polished professional.","code":""},{"path":"reports.html","id":"exercises-reports","chapter":"2 Reports with R Markdown","heading":"2.7 Exercises","text":"additional exercises let apply learned chapter. suggest taking break - might feel slightly effortful, spreading practice help learn long run.","code":""},{"path":"reports.html","id":"exercises-reports-project","chapter":"2 Reports with R Markdown","heading":"2.7.1 New project","text":"Create new project called \"demo_report\" [2.2]","code":""},{"path":"reports.html","id":"exercises-reports-setup","chapter":"2 Reports with R Markdown","heading":"2.7.2 New script","text":"\"demo_report\" project, create new Rmarkdown document called \"job.Rmd\" [2.3]. Edit YAML header output tables using kable set custom theme [2.6.4].","code":"---\ntitle: \"My Job\"\nauthor: \"Me\"\noutput:\n  html_document:\n    df_print: kable\n    theme: \n      version: 4\n      bootswatch: sandstone\n---"},{"path":"reports.html","id":"exercises-reports-rmarkdown","chapter":"2 Reports with R Markdown","heading":"2.7.3 R Markdown","text":"Write short paragraph describing job job might like future [2.5.2]. Include bullet-point list links websites useful job [2.5.2].","code":"I am a research psychologist who is interested in open science \nand teaching computational skills.\n\n* [psyTeachR books](https://psyteachr.github.io/)\n* [Google Scholar](https://scholar.google.com/)"},{"path":"reports.html","id":"exercises-reports-tables","chapter":"2 Reports with R Markdown","heading":"2.7.4 Tables","text":"Use following code load small table tasks [2.3.2]. Edit relevant job (can change categories entirely want).Figure make code chunks show knitted document [2.6.1]can set default echo = FALSE setup chunk top script.set visibility specific code chunk, put echo = FALSE inside curly brackets.Display table purple italic column headers. Try different styles using kableExtra [2.5.5]","code":"\ntasks <- tibble::tribble(\n  ~task,                   ~category,      ~frequency,\n  \"Respond to tweets\",     \"social media\", \"daily\",\n  \"Create a twitter poll\", \"social media\", \"weekly\",\n  \"Make the sales report\", \"reporting\",    \"montly\"\n)\nknitr::opts_chunk$set(echo = FALSE)```{r, echo=FALSE}\n# code to hide```\nkableExtra::kable(tasks) %>%\n  kableExtra::kable_minimal() %>%\n  kableExtra::row_spec(row = 0, italic = TRUE, color = \"purple\")"},{"path":"reports.html","id":"exercises-reports-images","chapter":"2 Reports with R Markdown","heading":"2.7.5 Images","text":"Add image anything relevant [2.5.4]can add image web using URL:save image project directory (e.g., images folder) add using relative path:","code":"![Applied Data Skills](https://psyteachr.github.io/ads-v1/images/logos/logo.png)![Applied Data Skills](images/logos/logo.png)"},{"path":"reports.html","id":"exercises-reports-inline","chapter":"2 Reports with R Markdown","heading":"2.7.6 Inline R","text":"Use inline R include version R using following sentence: \"report created using R version 4.1.1 (2021-08-10).\" can get version using object R.version.string. [2.3.4]report created using `r R.version.string`.","code":""},{"path":"reports.html","id":"exercises-reports-knit","chapter":"2 Reports with R Markdown","heading":"2.7.7 Knit","text":"Knit document html [2.3.5]Click knit button run following code console. (put Rmd script!)","code":"\nknitr::knit2html(\"job.Rmd\")"},{"path":"reports.html","id":"glossary-reports","chapter":"2 Reports with R Markdown","heading":"2.8 Glossary","text":"","code":""},{"path":"reports.html","id":"resources-reports","chapter":"2 Reports with R Markdown","heading":"2.9 Further Resources","text":"R Markdown Cheat Sheet\nR Markdown TutorialR Markdown: Definitive Guide Yihui Xie, J. J. Allaire, & Garrett GrolemundChapter 27: R Markdown R Data ScienceProject Structure Danielle NavarroHow name files Jenny BryankableExtragt","code":""},{"path":"viz.html","id":"viz","chapter":"3 Basic Data Visualisation","heading":"3 Basic Data Visualisation","text":"","code":""},{"path":"viz.html","id":"ilo-viz","chapter":"3 Basic Data Visualisation","heading":"3.1 Intended Learning Outcomes","text":"able identify categorical versus continuous dataBe able create plots layers using ggplotBe able choose appropriate plots dataIn chapter use following packages:","code":"\nlibrary(tidyverse) # includes ggplot2\nlibrary(patchwork) # for multi-part plots\nlibrary(ggthemes)  # for plot themes\nlibrary(lubridate) # for manipulating dates"},{"path":"viz.html","id":"set-up","chapter":"3 Basic Data Visualisation","heading":"3.2 Set-up","text":"Create new project work chapter:File > New Project...Name project 03-visualisationSave inside ADS directory., create save new R Markdown document named plots.Rmd, get rid default template text, load packages set-code chunk. packages installed already, get message Error library(x) : package called ‘x’, please refer Chapter 1.6.1.recommend making new code chunk different activity, using white space make notes errors make, things find interesting, questions like ask course team.","code":""},{"path":"viz.html","id":"variable-types","chapter":"3 Basic Data Visualisation","heading":"3.3 Variable types","text":"spreadsheet tidy data format, row observation, column variable, information cell value. learn get data format Chapter 7, get started use datasets right format.example, table lists pets owned members psyTeachR team. row observation one pet. 6 variables pet, name, owner, species, birthdate, weight (kg), rating (5-point scale \"evil\" \"good\").Variables can classified continuous (numbers) categorical (labels). plotting data, important know kind variables , can help decide types plots appropriate. variable also data type, numeric (numbers), character (text), logical (TRUE/FALSE values). plots can work data types. Make sure watched mini-lecture types data last week work chapter. Additionally, Appendix E details, concept relevant repeatedly.\nFigure 3.1: Data types like categories format cells Excel.\n","code":""},{"path":"viz.html","id":"continuous","chapter":"3 Basic Data Visualisation","heading":"3.3.1 Continuous","text":"Continuous variables properties can measure, like weight. can use continuous variables mathematical operations, like calculating sum total column prices average number social media likes per day. may rounded nearest whole number, make sense measurement halfway .Continuous variables always numeric data type. either integers like 42 doubles like 3.14159.","code":""},{"path":"viz.html","id":"categorical","chapter":"3 Basic Data Visualisation","heading":"3.3.2 Categorical","text":"Categorical variables properties can count, like species pet. Categorical variables can nominal, categories really order, like cats, dogs ferrets (even though ferrets obviously best), ordinal, clear order distance categories something exactly equate, like points Likert rating scale. Even data table uses numbers like 1-7 represent ordinal variables, treat like continuous variables.Categorical data can character data type, also called strings. made putting text inside quotes. text can letters, punctuation, even numbers. example, \"January\" character string, \"1\" put quotes. character data type best variables can lot different values predict ahead time.Categorical data can also factors, specific type integer lets specify category names order. useful making plots display categories order want (otherwise default alphabetical order). factor data type best categories specific number levels.Sometimes people represent categorical variables numbers correspond names, like 0 = \"\" 1 = \"yes\", values clear interpretation. control data recorded, better use character names clarity. learn recode columns Chapter 8.","code":""},{"path":"viz.html","id":"dates-and-times","chapter":"3 Basic Data Visualisation","heading":"3.3.3 Dates and times","text":"Dates times special case variable. can act like categorical continuous variables, special ways plot . Dates times can hard work , lubridate package provides functions help .","code":"\n# the current date\nlubridate::today()## [1] \"2022-01-21\"\n# the current date and time in the GMT timezone\nlubridate::now(tzone = \"GMT\")## [1] \"2022-01-21 09:33:51 GMT\""},{"path":"viz.html","id":"test-your-understanding","chapter":"3 Basic Data Visualisation","heading":"3.3.4 Test your understanding","text":"Coming back pets dataset, type variable column? can use function glimpse() show list column names, data types, first values column - output running glimpse() pets dataset.","code":"\nglimpse(pets)## Rows: 4\n## Columns: 6\n## $ name      <chr> \"Darwin\", \"Oy\", \"Khaleesi\", \"Bernie\"\n## $ owner     <chr> \"Lisa\", \"Lisa\", \"Emily\", \"Phil\"\n## $ species   <fct> ferret, ferret, cat, dog\n## $ birthdate <date> 1998-04-02, NA, 2014-10-01, 2017-06-01\n## $ weight    <dbl> 1.2, 2.9, 4.5, 32.0\n## $ rating    <fct> a little evil, very good, very good, very good"},{"path":"viz.html","id":"building-plots","chapter":"3 Basic Data Visualisation","heading":"3.4 Building plots","text":"multiple approaches data visualisation R; course use popular package ggplot2, part larger tidyverse collection packages. grammar graphics (\"gg\" \"ggplot\") standardised way describe components graphic. ggplot2 uses layered grammar graphics, plots built series layers. may helpful think picture multiple elements sit semi-transparently . good analogy old Disney movies artists create background add moveable elements top background via transparencies.Figure 3.2 displays evolution simple scatterplot using layered approach. First, plot space built (layer 1); variables specified (layer 2); type visualisation (known geom) desired variables specified (layer 3) - case geom_point() called visualise individual data points; second geom added include line best fit (layer 4), axis labels edited readability (layer 5), finally, theme applied change overall appearance plot (layer 6).\nFigure 3.2: Evolution layered plot\nImportantly, layer independent independently customisable. example, size, colour position component can adjusted, one , example, remove first geom (data points) visualise line best fit, simply removing layer draws data points (Figure 3.3). use layers makes easy build complex plots step--step, adapt extend plots existing code.\nFigure 3.3: Final plot scatterplot layer removed.\n","code":""},{"path":"viz.html","id":"plots-loading-data","chapter":"3 Basic Data Visualisation","heading":"3.4.1 Plot Data","text":"build plot , layer layer. First need get data. learn load data different sources Chapter 4, time use method Chapter 2.4.1 load online source.load data, read_csv() produce message gives information data imported assumptions made. \"column specification\" tells column named type data R categorised variable . abbreviation \"chr\" character columns, \"dbl\" double columns, \"dttm\" date/time column.data simulated data call centre customer satisfaction survey. first thing need plot data get familiar rows (observations) columns (variables) mean. Sometimes obvious, sometimes requires help data provider. , row represents one call centre.caller_id unique ID calleremployee_id unique ID employee taking callscall_start date time call arrivedwait_time number seconds caller waitcall_time number seconds call lasted employee picked upissue_category whether issue tech, sales, returns, othersatisfaction customer satisfaction rating scale 1 (unsatisfied) 5 (satisfied)Unless specify column types, data importing functions just guess types usually default double columns numbers character columns letters. Use function spec() find column types edit needed.set issue_category factor set order levels. default, R order levels factor alphanumerically, however many cases want need set order. example, data, makes sense category \"\" come end list. update column types, re-import data adjusting read_csv() code set col_types argument new column types.Note read_csv() going use object survey_col_types, must create survey_col_types run adjusted read_csv() code. ever need adjust code, try think order code run start scratch make sure organised appropriately.","code":"\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\")## Rows: 707 Columns: 7## -- Column specification --------------------------------------------------------\n## Delimiter: \",\"\n## chr  (3): caller_id, employee_id, issue_category\n## dbl  (3): wait_time, call_time, satisfaction\n## dttm (1): call_start## \n## i Use `spec()` to retrieve the full column specification for this data.\n## i Specify the column types or set `show_col_types = FALSE` to quiet this message.\nspec(survey_data)## cols(\n##   caller_id = col_character(),\n##   employee_id = col_character(),\n##   call_start = col_datetime(format = \"\"),\n##   wait_time = col_double(),\n##   call_time = col_double(),\n##   issue_category = col_character(),\n##   satisfaction = col_double()\n## )\n# updated column types\nsurvey_col_types <- cols(\n  caller_id = col_character(),\n  employee_id = col_character(),\n  call_start = col_datetime(format = \"\"),\n  wait_time = col_double(),\n  call_time = col_double(),\n  issue_category = col_factor(levels = c(\"tech\", \"sales\", \"returns\", \"other\")),\n  satisfaction = col_integer()\n)\n\n# re-import data with correct column  types\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\",\n                        col_types = survey_col_types)"},{"path":"viz.html","id":"plot-setup","chapter":"3 Basic Data Visualisation","heading":"3.4.2 Plot setup","text":"","code":""},{"path":"viz.html","id":"default-theme","chapter":"3 Basic Data Visualisation","heading":"3.4.2.1 Default theme","text":"Plots book use black--white theme, default grey theme, set default theme plots look like examples . top script, setup chunk loaded tidyverse package, add following code run . learn ways customise theme Section 3.4.3.4 Appendix F.3.","code":"\ntheme_set(theme_bw()) # set the default theme"},{"path":"viz.html","id":"plot-setup-data","chapter":"3 Basic Data Visualisation","heading":"3.4.2.2 Data","text":"Every plot starts ggplot() function data table. data loaded typo code, give error message. best check plot step, can figure errors easily.\nFigure 3.4: blank ggplot.\n","code":"\nggplot(data = survey_data)"},{"path":"viz.html","id":"mapping","chapter":"3 Basic Data Visualisation","heading":"3.4.2.3 Mapping","text":"next argument ggplot() mapping. tells plot columns data represented , \"mapped\" , different aspects plot, x-axis, y-axis, line colour, object fill, line style. aspects, \"aesthetics\", listing inside aes() function.Set arguments x y names columns want plotted axes. , want plot wait time x-axis call time y-axis.\nFigure 3.5: blank plot x- y- axes mapped.\nexample , wrote names arguments data mapping, practice, almost everyone omits . Just make sure put data mapping right order.","code":"\n# set up the plot with mapping\nggplot(\n  data = survey_data, \n  mapping = aes(x = wait_time, y = call_time)\n)\nggplot(survey_data,  aes(x = wait_time, y = call_time))"},{"path":"viz.html","id":"geoms","chapter":"3 Basic Data Visualisation","heading":"3.4.2.4 Geoms","text":"Now can add plot elements layers. referred geoms functions start geom_. add layers onto base plot created ggplot() plus (+).\nFigure 3.6: Adding scatterplot geom_point().\nSomewhat annoyingly, plus end previous line, start next line. make mistake, run first line code produce base layer get following error message rather adding geom_point().","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() # scatterplot\nggplot(survey_data, aes(x = wait_time, y = call_time))\n+ geom_point() # scatterplot## Error: Cannot use `+.gg()` with a single argument. Did you accidentally put + on a new line?"},{"path":"viz.html","id":"multiple-geoms","chapter":"3 Basic Data Visualisation","heading":"3.4.2.5 Multiple geoms","text":"Part power ggplot2 can add one geom plot adding extra layers quickly becomes possible make complex informative visualisation. Importantly, layers display order set . code uses geoms produce scatterplot line best fit orders differently.\nFigure 3.7: Points first versus line first.\n","code":"\n# Points first\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = lm) # line of best fit\n\n# Line first\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_smooth(method = lm) + # line of best fit\n  geom_point() # scatterplot"},{"path":"viz.html","id":"saving-plots","chapter":"3 Basic Data Visualisation","heading":"3.4.2.6 Saving plots","text":"Just like can save numbers data tables objects, can also save output ggplot(). code produces plots created saves objects named point_first line_first. run code, plots display like done . Instead, see object names appear environment pane.view plots, call objects name. output plot separately.","code":"\npoint_first <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = lm) # line of best fit\n  \nline_first <-\n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_smooth(method = lm) + # line of best fit\n  geom_point() # scatterplot\npoint_first # view first plot\nline_first # view second plot"},{"path":"viz.html","id":"combining-plots","chapter":"3 Basic Data Visualisation","heading":"3.4.2.7 Combining plots","text":"One reasons save plots objects can combine multiple plots using functions patchwork package. code produces plot combining two plots + specifying want plots produced single row nrow argument plot_layout().\nFigure 3.8: Combining plots patchwork.\n","code":"\n# add plots together in 1 row; try changing nrow to 2\npoint_first + line_first + plot_layout(nrow = 1)"},{"path":"viz.html","id":"customising-plots","chapter":"3 Basic Data Visualisation","heading":"3.4.3 Customising plots","text":"","code":""},{"path":"viz.html","id":"styling-geoms","chapter":"3 Basic Data Visualisation","heading":"3.4.3.1 Styling geoms","text":"definitely put line front points, points still bit dark. want change overall style geom, can set arguments colour, alpha, shape, size linetype inside geom function. many different values can set ; Appendix F gives details . Play around different values figure default values shape size.\nFigure 3.9: Changing geom styles.\nmethod changing style shapes made geom. want, example, points different colours depending issue category , set argument colour = issue_category inside aes() function mapping. can customise colours used scale_ functions, learn Chapter 9.4.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2, # 20% transparency\n             shape = 18,  # solid diamond\n             size = 2) + \n  geom_smooth(method = lm, \n              formula = y~x, # formula used to draw line, \n              # setting the default formula avoids an annoying message\n              colour = rgb(0, .5, .8),\n              linetype = 3) "},{"path":"viz.html","id":"format-axes","chapter":"3 Basic Data Visualisation","heading":"3.4.3.2 Format axes","text":"Now need make axes look neater. several functions can use change axis labels, powerful ones scale_ functions. need use scale function matches data plotting axis becomes particularly important know type data working . axes continuous, use scale_x_continuous() scale_y_continuous().name argument changes axis label. breaks argument sets major units needs vector possible values, can extend beyond range data (e.g., wait time goes 350, can specify breaks 600 make maths easier). seq() function creates sequence numbers one another specified steps.\nFigure 3.10: Formatting plot axes scale_ functions.\nCheck help ?scale_x_continuous see set minor units specify many breaks want instead.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30))"},{"path":"viz.html","id":"axis-limits","chapter":"3 Basic Data Visualisation","heading":"3.4.3.3 Axis limits","text":"want change minimum maximum values axis, use coord_cartesian() function. Many plots make sense minimum maximum values represent range possible values, even values present data. , wait call times less 0 seconds, set minimum values 0 maximum values first break highest value.\nFigure 3.11: Changing axis limits.\ncan also set limits argument inside scale_ functions, actually removes data falls outside limits, rather cropping plot, can change appearance certain types plots like violin plots density plots.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30)) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180))"},{"path":"viz.html","id":"themes","chapter":"3 Basic Data Visualisation","heading":"3.4.3.4 Themes","text":"ggplot2 comes several built-themes, theme_minimal() theme_bw(), ggthemes package provides even themes match different software, GoogleDocs Stata, publications, Economist Wall Street Journal. add GoogleDocs theme, change font size 20 base_size argument.also worth highlighting code starting look quite complicated number layers, built slowly (hopefully!) make sense. see examples ggplot2 code online like adapt, build plot layer layer make easier understand layer adds.\nFigure 3.12: Changing theme.\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30)) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180)) +\n  ggthemes::theme_gdocs(base_size = 20)"},{"path":"viz.html","id":"theme-tweaks","chapter":"3 Basic Data Visualisation","heading":"3.4.3.5 Theme tweaks","text":"still quite happy theme, can customise even themes() function. Check help function see possible options. common thing want remove element entirely. setting relevant argument element_blank(). , getting rid x-axis line plot background, removes line around plot.\nFigure 3.13: Customising theme.\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = x_breaks) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = y_breaks) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180)) +\n  theme_gdocs(base_size = 11) +\n  theme(axis.line.x = element_blank(),\n        plot.background = element_blank())"},{"path":"viz.html","id":"appropriate-plots","chapter":"3 Basic Data Visualisation","heading":"3.5 Appropriate plots","text":"Now know build plot layers customise appearance, ready learn plot types. Different types data require different types plots, section organised data type.ggplot2 cheat sheet great resource help find plots appropriate data, based many variables plotting type . examples use customer satisfaction data, plot communicates something different.expect memorise plot types methods customising , helpful try code examples , changing values test understanding.","code":""},{"path":"viz.html","id":"counting-categories","chapter":"3 Basic Data Visualisation","heading":"3.5.1 Counting categories","text":"","code":""},{"path":"viz.html","id":"bar-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.1.1 Bar plot","text":"want count number things per category, can use geom_bar(). need provide x mapping geom_bar() default geom_bar() uses number observations group x value y, need tell put y-axis.probably want customise things, like colours, order columns, labels. Inspect code try running layer layer figure things change. functions scale_fill_manual() scale_x_discrete() new, work way scale_ functions. learn Chapter 9.","code":"\nggplot(survey_data, aes(x = issue_category)) +\n  geom_bar()\nggplot(survey_data, aes(x = issue_category, \n                        fill = issue_category)) +\n  geom_bar() +\n  scale_x_discrete(\n    # change axis title\n    name = \"Issue Category\", \n    # change order\n    limits = c(\"tech\", \"returns\", \"sales\", \"other\"), \n    # change labels\n    labels = c(\"Technical\", \"Returns\", \"Sales\", \"Other\") \n  ) +\n  scale_fill_manual(\n    # change colours\n    values = c(tech = \"goldenrod\", \n                returns = \"darkgreen\", \n                sales = \"dodgerblue3\", \n                other = \"purple3\"),\n    # remove the legend\n    guide = \"none\" \n  ) +\n  scale_y_continuous(\n    name = \"\", # remove axis title\n    # remove the space above and below the y-axis\n    expand = expansion(add = 0)\n  ) +\n  # minimum = 0, maximum = 350\n  coord_cartesian(ylim = c(0, 350)) + \n  ggtitle(\"Number of issues per category\") # add a title"},{"path":"viz.html","id":"column-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.1.2 Column plot","text":"data already column number want plot, can use geom_col() plot . can use count() function make table row issue_category column called n number observations category.mapping geom_col() requires set x y aesthetics. Set y = n want plot number issues category, information column called n.","code":"\ncount_data <- count(x = survey_data, issue_category)\nggplot(count_data, aes(x = issue_category, y = n)) +\n  geom_col()"},{"path":"viz.html","id":"pie-chart","chapter":"3 Basic Data Visualisation","heading":"3.5.1.3 Pie chart","text":"Pie charts misleading form data visualisation, cover . cover options visualising proportions, like waffle, lollipop treemap plots, Chapter 9.5.","code":""},{"path":"viz.html","id":"test-your-understanding-1","chapter":"3 Basic Data Visualisation","heading":"3.5.1.4 Test your understanding","text":"small data table.geom use plot population 5 countries? geom_bargeom_colWhat mapping use?\n\naes(x = country, y = population)aes(x = population, y = country)aes(x = country)aes(x = island)aes(y = population)\ngeom use plot number countries island? geom_bargeom_colWhat mapping use?\n\naes(x = country, y = population)aes(x = population, y = country)aes(x = country)aes(x = island)aes(y = population)\n","code":""},{"path":"viz.html","id":"one-continuous-variable","chapter":"3 Basic Data Visualisation","heading":"3.5.2 One continuous variable","text":"continuous variable, like number seconds callers wait, can use geom_histogram() geom_density() show distribution. Just like geom_bar() required specify x variable.","code":""},{"path":"viz.html","id":"histogram","chapter":"3 Basic Data Visualisation","heading":"3.5.2.1 Histogram","text":"histogram splits data \"bins\" along x-axis shows count many observations bin along y-axis.\nFigure 3.14: Histogram wait times.\nalways set binwidth number bins something meaningful data (otherwise get annoying message). might need try options find something looks good conveys meaning plot -- try changing values binwidth bins see works best.default, bars start centered 0, binwidth set 15, first bar include -7.5 7.5 seconds, make much sense. can set boundary = 0 bar represents increments 15 seconds starting 0.Finally, default style grey bars ugly, can change setting fill colour, well using scale_x_continuous() update axis labels.\nFigure 3.15: Histogram custom styles.\n","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n# adjust width of each bar\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15)\n\n# adjust number of bars\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(bins = 5)\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15, boundary = 0)\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15, \n                 boundary = 0, \n                 fill = \"white\", \n                 color = \"black\") +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60))"},{"path":"viz.html","id":"frequency-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.2.2 Frequency plot","text":"Rather plotting bin bar, can connect line across top bin using frequency plot. function geom_freqpoly() works geom_histogram(), except take fill argument just line.","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_freqpoly(boundary = 0, binwidth = 15, \n                color = \"black\")"},{"path":"viz.html","id":"density-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.2.3 Density plot","text":"distribution smooth, density plot often better way show distribution. density plot need binwidth boundary arguments split data bins, can fill.","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_density(fill = \"purple\", color = \"black\")"},{"path":"viz.html","id":"test-your-understanding-2","chapter":"3 Basic Data Visualisation","heading":"3.5.2.4 Test your understanding","text":"Imagine table population country world columns country population. just look 76 countries populations less million.kind plot ? geom_histogramgeom_freqpolygeom_densityWhat kind plot B? geom_histogramgeom_freqpolygeom_densityWhat kind plot C? geom_histogramgeom_freqpolygeom_densityHow set mapping plots?\n\naes(x = country, y = population)aes(x = population, y = country)aes(x = population)aes(x = population, y = count)\nbinwidth histogram? 1100100K1M","code":""},{"path":"viz.html","id":"grouped-continuous-variables","chapter":"3 Basic Data Visualisation","heading":"3.5.3 Grouped continuous variables","text":"several ways compare continuous data across groups. choose depends point trying make plot.","code":""},{"path":"viz.html","id":"subdividing-distributions","chapter":"3 Basic Data Visualisation","heading":"3.5.3.1 Subdividing distributions","text":"previous plots, used fill purely visual reasons, e.g., changed colour histogram bars make look nicer. However, can also use fill represent another variable colours become meaningful.Setting fill aesthetic mapping produce different coloured bars category fill variable, case issue_category.\nFigure 3.16: Histogram categories represented fill.\nset aspect represent data, inside aes() function mapping, argument geom. try set geom, get following error (unless coincidentally object named issue_category colour word).default, categories positioned stacked top . function geom_area() gives similar effect stat = \"bin\".\nFigure 3.17: Stacked area plot.\n","code":"\nggplot(survey_data, aes(x = wait_time, fill = issue_category)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 15,\n                 color = \"black\")\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 15, \n                 color = \"black\",\n                 fill = issue_category)## Error in layer(data = data, mapping = mapping, stat = stat, geom = GeomBar, : object 'issue_category' not found\n# area plot\nggplot(survey_data, mapping = aes(x = wait_time, fill = issue_category)) +\n  geom_area(stat = \"bin\", \n            boundary = 0, \n            binwidth = 15, \n            color = \"black\")"},{"path":"viz.html","id":"comparing-distributions","chapter":"3 Basic Data Visualisation","heading":"3.5.3.2 Comparing distributions","text":"want compare one distribution, can set position argument geom_histogram() \"dodge\" put bars group next instead stacking . However, can look confusing several categories. Instead, usegeom_freqpoly() plot line connecting top bin.\nFigure 3.18: Different ways plot distribution continuous variable multiple groups.\n","code":"\n# dodged histogram\nhistogram_dodge <- \n  ggplot(survey_data, aes(x = wait_time, \n                          fill = issue_category,\n                          colour = issue_category))+\n  geom_histogram(boundary = 0, \n                 binwidth = 15, \n                 position = \"dodge\") +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  ggtitle(\"Dodged Histogram\")\n\n# frequency plot\nfreqpoly_plot <- \n  ggplot(survey_data, aes(x = wait_time,\n                          fill = issue_category,\n                          colour = issue_category)) +\n  geom_freqpoly(binwidth = 15, \n                boundary = 0,\n                size = 1) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  ggtitle(\"Frequency\")\n\n# put plots together\nhistogram_dodge + freqpoly_plot + \n  plot_layout(nrow = 1, guides = \"collect\") # collects the legends together, try removing this"},{"path":"viz.html","id":"violin-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.3.3 Violin plot","text":"Another way compare groups continuous variables violin plot. like density plot, rotated 90 degrees mirrored - fatter violin, larger proportion data points value.\nFigure 3.19: default violin plot gives shape area. Set scale='count' make size proportional number observations.\n","code":"\nviolin_area <- \n  ggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n  geom_violin() +\n  ggtitle('scale = \"area\"')\n\nviolin_count <- \n  ggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n  geom_violin(scale = \"count\") +\n  ggtitle('scale = \"count\"')\n\nviolin_area + violin_count"},{"path":"viz.html","id":"boxplot","chapter":"3 Basic Data Visualisation","heading":"3.5.3.4 Boxplot","text":"Boxplots serve similar purpose violin plots (without giggles back row). show shape distribution, rather statistics . middle line represents median; half data line half . box encloses 25th 75th percentiles data, 50% data falls inside box. \"whiskers\" extending box extend 1.5 times height box, although can change coef argument. points show outliers -- individual data points fall outside range.\nFigure 3.20: Basic boxplot.\n","code":"\nggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n geom_boxplot()"},{"path":"viz.html","id":"combo-plots","chapter":"3 Basic Data Visualisation","heading":"3.5.3.5 Combo plots","text":"Violin plots frequently layered geoms represent mean median values data. lot code, help understanding ) run layer layer see builds b) change values throughout code\nFigure 3.21: Violin plots combined different methods represent means medians.\ncommon type plot produce bar chart means, however, example demonstrates just misleading . communicates mean value category, bars hide distribution actual data. tell wait times close 3 minutes, spread 0 6 minutes, vast majority less 2 minutes, mean pulled high outliers.\nFigure 3.22: plot continuous data column plots. appropriate count data.\nColumn plots can also misleading. plot left starts y-axis 0, makes bar heights proportional, showing almost difference average wait times. Since differences hard see, may tempted start y-axis higher, makes look like average wait time returns double tech.","code":"\n# add fill and colour to the mapping\n\nggplot(survey_data,  aes(x = issue_category, \n                         y = wait_time,\n                         fill = issue_category,\n                         colour = issue_category)) +\n  scale_x_discrete(name = \"Issue Category\") +\n  scale_y_continuous(name = \"Wait Time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  coord_cartesian(ylim = c(0, 360)) +\n  guides(fill = \"none\", colour = \"none\") + \n  # add a line at median (50%) score\n  geom_violin(alpha = 0.4, \n              draw_quantiles = 0.5) + \n  # add a boxplot\n  geom_boxplot(width = 0.25, \n               fill = \"white\", \n               alpha = 0.75, \n               outlier.alpha = 0) + \n  # add a point that represents the mean\n  stat_summary(fun = mean, \n               geom = \"point\", \n               size = 2) + \n  ggtitle(\"ViolinBox\")"},{"path":"viz.html","id":"test-your-understanding-3","chapter":"3 Basic Data Visualisation","heading":"3.5.3.6 Test your understanding","text":"create plot ? geom_box()geom_boxplot()geom_violin()geom_violinplot()create plot B? geom_box()geom_boxplot()geom_violin()geom_violinplot()mapping look like plots?\n\naes(x = employee_id, y = call_time, colour = employee_id)aes(x = employee_id, y = call_time, fill = call_time)aes(x = employee_id, y = call_time, colour = call_time)aes(x = employee_id, y = call_time, fill = employee_id)\nemployee tends longest calls? e01e02e03e04e05e06e07e08e09e10Which employee record longest call? e01e02e03e04e05e06e07e08e09e10","code":""},{"path":"viz.html","id":"two-continuous-variables","chapter":"3 Basic Data Visualisation","heading":"3.5.4 Two continuous variables","text":"want see two continuous variables related, set one x-axis y-axis. Usually, one variable causes , plot cause x-axis effect y-axis. , want see longer wait times cause calls longer.","code":""},{"path":"viz.html","id":"scatterplot","chapter":"3 Basic Data Visualisation","heading":"3.5.4.1 Scatterplot","text":"function create scatterplot called geom_point().\nFigure 3.23: Scatterplot geom_point().\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point()"},{"path":"viz.html","id":"trendlines","chapter":"3 Basic Data Visualisation","heading":"3.5.4.2 Trendlines","text":"Figure 3.2, emphasised relationship wait time call time trendline created geom_smooth() using argument method = lm (\"lm\" stands \"linear model\" straight line relationship). can also set method = loess visualise non-linear relationship.\nFigure 3.24: Different ways show relationship two continuous variables.\nmuch data extremes x-axis, curve can uncertain. represented wider shaded area, means true relationship might anywhere within area. Add argument se = FALSE geom_smooth() remove \"standard error\" shading.","code":"\nlm_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = lm, formula = y~x) +\n  ggtitle(\"method = lm\")\n\nloess_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = loess, formula = y~x) +\n  ggtitle(\"method = loess\")\n\nlm_plot + loess_plot"},{"path":"viz.html","id":"dates","chapter":"3 Basic Data Visualisation","heading":"3.5.4.3 Dates","text":"call_start column contains date time, use date() function lubridate convert just date. need format able transform x-axis .can use scale_x_date() set date_breaks \"1 month\" apart. date_labels argument uses code different date formats; can see full list possibilities help ?strptime. example, %b means \"Abbreviated month name\", whilst wanted use format like \"2020/01/31\" try \"%Y/%m/%d\".looks like customer satisfaction declined across year, change meaningful? See plot looks like y-axis spans full range possible satisfaction values 1 5. can also plot individual data points emphasise range values.","code":"\nggplot(survey_data, aes(x = lubridate::date(call_start), \n                        y = satisfaction)) + \n  geom_smooth(method = lm, formula = y~x)\nggplot(survey_data, aes(x = lubridate::date(call_start), \n                        y = satisfaction)) +\n  geom_smooth(method = lm, formula = y~x) +\n  scale_x_date(name = \"\",\n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  scale_y_continuous(name = \"Caller Satisfaction\") +\n  ggtitle(\"2020 Caller Satisfaction\")\nggplot(survey_data, aes(x = lubridate::date(call_start), \n                        y = satisfaction)) +\n  # show individual data, jitter the height to avoid overlap\n  geom_jitter(width = 0, height = .1, alpha = 0.2) + \n  geom_smooth(method = lm,  formula = y~x) +\n  scale_x_date(name = \"\",\n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  scale_y_continuous(name = \"Caller Satisfaction\",\n                     breaks = 1:5) +\n  coord_cartesian(ylim = c(1, 5)) + # changes limits\n  ggtitle(\"2020 Caller Satisfaction\")"},{"path":"viz.html","id":"ordinal-variables","chapter":"3 Basic Data Visualisation","heading":"3.5.5 Ordinal variables","text":"limited range numeric values, ordinal rating scale, sometimes overlapping data makes difficult see going point plot. example, plot shows satisfaction ratings call time ratings 1, 2, 3, 4 5, makes hard see exactly many data points point.section, explore options dealing .\nFigure 3.25: Overlapping data.\n","code":"\nggplot(survey_data, aes(x = call_time, y = satisfaction)) + \n  geom_point()"},{"path":"viz.html","id":"jitter-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.5.1 Jitter plot","text":"can use geom_jitter() move points around bit make easier see. can also set alpha transparency. , x-axis continuous, need jitter width, y-axis ordinal categories, height jittered -0.2 +0.2 away true y-value. can help play around values understand jitter .\nFigure 3.26: Jitter plot.\n","code":"\nggplot(survey_data, aes(x = call_time, y = satisfaction)) +\n  geom_jitter(width = 0, height = .2, alpha = 0.5)"},{"path":"viz.html","id":"facets","chapter":"3 Basic Data Visualisation","heading":"3.5.5.2 Facets","text":"Alternatively, can use facet_wrap() create separate plot level satisfaction. facet_wrap() uses tilde (~) symbol, can roughly translate \"\", e.g., facet plot satisfaction rating. labeller function controls labels plot. label_both specifies want variable name (satisfaction) value (e.g., 1) printed plot make easier read.\nFigure 3.27: histogram facets.\n, means, plot types can make R. chapter just gave basic overview, go detail Chapter 9. resources section end chapter lists many resources, R Graph Gallery especially useful one get inspiration kinds beautiful plots can make R.","code":"\nggplot(survey_data, aes(x = call_time)) +\n  geom_histogram(binwidth = 10, \n                 boundary = 0, \n                 fill = \"dodgerblue\", \n                 color = \"black\") +\n  facet_wrap(~satisfaction, \n             ncol = 1, # try changing this to 2 \n             labeller = label_both) +\n  scale_x_continuous(name = \"Call Time (seconds)\",\n                     breaks = seq(0, 600, 30))"},{"path":"viz.html","id":"exercises","chapter":"3 Basic Data Visualisation","heading":"3.6 Exercises","text":"final step chapter, create report data visualisations. may need refer back Chapter 2 help complete exercises may also want take break work section. also recommend knit every step can see output changes.","code":""},{"path":"viz.html","id":"exercises-new-rmd-3","chapter":"3 Basic Data Visualisation","heading":"3.6.1 New Markdown","text":"Create save new R Markdown document named plots_report.Rmd give title \"Customer satisfaction report\". Remove default template text load packages code set-code chunk:","code":"\nlibrary(tidyverse) \nlibrary(patchwork) \nlibrary(ggthemes)  \nlibrary(lubridate) \nlibrary(knitr)\nlibrary(kableExtra)\n\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\")"},{"path":"viz.html","id":"summary-1","chapter":"3 Basic Data Visualisation","heading":"3.6.2 Summary","text":"Create level 1 heading titled \"Overview\". Underneath heading, write short summary data set contains variables means (can use information Section 3.4.1 like).","code":""},{"path":"viz.html","id":"presenting-plots","chapter":"3 Basic Data Visualisation","heading":"3.6.3 Presenting plots","text":"Pick two favourites plots examples made chapter. plot:Create level 2 heading R Markdown document give informative title.Write short summary interprets data shown plots - enough just present visualisations, effective reports also help reader understand conclusions draw plots presented.Look different themes available ggtheme choose one apply plots.Make sure plot figure caption (either adding ggplot() code adding code chunk options).Organise Markdown plots shown text summary.","code":""},{"path":"viz.html","id":"combining-plots-1","chapter":"3 Basic Data Visualisation","heading":"3.6.4 Combining plots","text":"Now, pick two least favourite plots:Adjust visual aesthetics make look bad difficult read possible.Combine plots using patchwork functions.Write short summary explains think plots bad.Organise Markdown plots shown text summary.","code":""},{"path":"viz.html","id":"editing-your-markdown-display","chapter":"3 Basic Data Visualisation","heading":"3.6.5 Editing your Markdown display","text":"Adjust set-Markdown knitted report show code, messages, warnings, figures 8 x 5 (see Chapter 2.6.1).","code":""},{"path":"viz.html","id":"change-the-output","chapter":"3 Basic Data Visualisation","heading":"3.6.6 Change the output","text":"far just knitted html. generate PDF reports, need install tinytex (Xie, 2021) run following code console (add Rmd file):done , update YAML heading include following:knit PDF document. likely encounter errors - knitting pdf really seventh circle hell. happens, ask Teams help.alternative, can also knit Word document.","code":"\n# run this in the console\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()---\ntitle: \"Customer Satisfaction Report\"\nauthor: \"Your name\"\noutput:\n  pdf_document:\n------\ntitle: \"Customer Satisfaction Report\"\nauthor: \"Your name\"\noutput:\n  word_document:\n---"},{"path":"viz.html","id":"share-your-work","chapter":"3 Basic Data Visualisation","heading":"3.6.7 Share your work","text":"completed activity, post Week 3 channel Teams can compare plots chose visual style learners course.","code":""},{"path":"viz.html","id":"glossary-viz","chapter":"3 Basic Data Visualisation","heading":"3.7 Glossary","text":"","code":""},{"path":"viz.html","id":"resources-viz","chapter":"3 Basic Data Visualisation","heading":"3.8 Further Resources","text":"Data visualisation using R, researchers use R (Nordmann et al., 2021)Chapter 3: Data Visualisation R Data Scienceggplot2 cheat sheetggplot2 FAQsggplot2 documentationHack Data Beautiful workshop University Glasgow postgraduate studentsChapter 28: Graphics communication R Data Science","code":""},{"path":"data.html","id":"data","chapter":"4 Data Import","heading":"4 Data Import","text":"","code":""},{"path":"data.html","id":"ilo-data","chapter":"4 Data Import","heading":"4.1 Intended Learning Outcomes","text":"able inspect dataBe able import data range sourcesBe able identify handle common problems data importIn chapter use following packages:","code":"\nlibrary(tidyverse)     # includes readr & tibble\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\nlibrary(googlesheets4) # for Google Sheets"},{"path":"data.html","id":"set-up-1","chapter":"4 Data Import","heading":"4.2 Set-up","text":"Create new project work chapter named 04-data. , create save new R Markdown document named data.Rmd, get rid default template text, load packages set-code chunk. packages installed already get message Error library(x) : package called ‘x’, please refer Chapter 1.6.1.recommend making new code chunk different activity, using white space make notes errors make, things find interesting, questions like ask course team.","code":""},{"path":"data.html","id":"builtin","chapter":"4 Data Import","heading":"4.3 Built-in data","text":"likely want import data work , however, Base R also comes built-datasets can useful learning new functions packages. Additionally, packages, like tidyr, also contain data. data() function lists datasets available.Type name dataset console see data. example, type ?table1 console see dataset description table1, dataset included tidyr.can also use data() function load dataset global environment.","code":"\n# list datasets built in to base R\ndata()\n\n# lists datasets in a specific package\ndata(package = \"tidyr\")\n?table1\n# loads table1 into the environment\ndata(\"table1\")"},{"path":"data.html","id":"looking-at-data","chapter":"4 Data Import","heading":"4.4 Looking at data","text":"Now loaded data, look upper right hand window RStudio, Environment tab. see object table1 listed, along number observations (rows) variables (columns). first check everything went OK.Always, always, always, look data created loaded table. Also look step transforms table. three main ways look table: View(), print(), tibble::glimpse().","code":""},{"path":"data.html","id":"view","chapter":"4 Data Import","heading":"4.4.1 View()","text":"familiar way look table given View() (uppercase 'V'), opens data table console pane using viewer looks bit like Excel. command can useful console, ever put one script create annoying pop-window user runs . can also click object environment pane open interface. can close tab done looking ; remove object.","code":"\nView(table1)"},{"path":"data.html","id":"print","chapter":"4 Data Import","heading":"4.4.2 print()","text":"print() method can run explicitly, commonly called just typing variable name blank line. default print entire table, just first 10 rows.look table1 table loaded . Depending wide screen , might need click arrow right table see last column.","code":"\n# call print explicitly\nprint(table1)\n\n# more common method of just calling object name\ntable1"},{"path":"data.html","id":"glimpse","chapter":"4 Data Import","heading":"4.4.3 glimpse()","text":"function tibble::glimpse() gives sideways version table. useful table wide easily see columns. also tells data type column angled brackets column name.","code":"\nglimpse(table1)## Rows: 6\n## Columns: 4\n## $ country    <chr> \"Afghanistan\", \"Afghanistan\", \"Brazil\", \"Brazil\", \"China\", ~\n## $ year       <int> 1999, 2000, 1999, 2000, 1999, 2000\n## $ cases      <int> 745, 2666, 37737, 80488, 212258, 213766\n## $ population <int> 19987071, 20595360, 172006362, 174504898, 1272915272, 12804~"},{"path":"data.html","id":"summary-function","chapter":"4 Data Import","heading":"4.4.4 summary()","text":"can get quick summary dataset summary() function, can useful spotting things like minimum maximum values clearly wrong, R thinks nominal variable numeric. example, labelled gender 1, 2, 3 rather male, female, non-binary, summary() calculate mean median even though appropriate data. can useful flag need take steps correct data.Note population , large number, R use scientific notation.","code":"\nsummary(table1)##    country               year          cases          population       \n##  Length:6           Min.   :1999   Min.   :   745   Min.   :1.999e+07  \n##  Class :character   1st Qu.:1999   1st Qu.: 11434   1st Qu.:5.845e+07  \n##  Mode  :character   Median :2000   Median : 59113   Median :1.733e+08  \n##                     Mean   :2000   Mean   : 91277   Mean   :4.901e+08  \n##                     3rd Qu.:2000   3rd Qu.:179316   3rd Qu.:9.983e+08  \n##                     Max.   :2000   Max.   :213766   Max.   :1.280e+09"},{"path":"data.html","id":"import_data","chapter":"4 Data Import","heading":"4.5 Importing data","text":"Built-data nice examples, probably interested data. many different types files might work data analysis. different file types usually distinguished three-letter extension following period end file name (e.g., .xls).Download directory data files, unzip folder, save data directory 04-data project directory.","code":""},{"path":"data.html","id":"rioimport","chapter":"4 Data Import","heading":"4.5.1 rio::import()","text":"type data files work likely depend software typically use workflow. rio package straightforward functions reading saving data common formats: rio::import() rio::export().","code":"\ndemo_tsv  <- import(\"data/demo.tsv\")  # tab-separated values\ndemo_csv  <- import(\"data/demo.csv\")  # comma-separated values\ndemo_xls  <- import(\"data/demo.xlsx\") # Excel format\ndemo_sav  <- import(\"data/demo.sav\")  # SPSS format"},{"path":"data.html","id":"file-type-specific-import","chapter":"4 Data Import","heading":"4.5.2 File type specific import","text":"However, also useful know specific functions used import different file types easier discover features deal complicated cases, need skip rows, rename columns, choose Excel sheet use.Look help function read Arguments section see can customise import.keep data Google Sheets, can access directly R using googlesheets4. code imports data public sheet. can set ss argument entire URL target sheet, just section \"https://docs.google.com/spreadsheets/d/\".","code":"\ndemo_tsv <- readr::read_tsv(\"data/demo.tsv\")\ndemo_csv <- readr::read_csv(\"data/demo.csv\")\ndemo_xls <- readxl::read_excel(\"data/demo.xlsx\")\ndemo_sav <- haven::read_sav(\"data/demo.sav\")\ngs4_deauth() # skip authorisation for public data\n\ndemo_gs4  <- googlesheets4::read_sheet(\n  ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\"\n)"},{"path":"data.html","id":"col_types","chapter":"4 Data Import","heading":"4.5.3 Column data types","text":"Use glimpse() see different functions imported data slightly different data types. different file types store data slightly differently. example, SPSS stores factors numbers, factor column contains values 1, 2, 3 rather low, med, high. also stores logical values 0 1 instead TRUE FALSE.readr functions display message import data explaining data type column .\"Column specification\" tells data type column . can review data types Appendix E. Options :chr: characterdbl: doublelgl: logicalint: integerdate: datedttm: date/timeread_csv() guess type data variable normally pretty good . However, makes mistake, reading \"date\" column character, can manually set column data types.First, run spec() dataset give full column specification can copy paste:, create object using code just copied lists correct column types. Factor columns always import character data types, set data type manually col_factor() set order levels levels argument. Otherwise, order defaults order appear dataset. demo dataset, tell R factor variable factor using col_factor() can also specify order levels just appear alphabetically. Additionally, can also specify exactly format date variable using %Y-%m-%d.save column specification object, add col_types argument call read_csv().dates, might need set format dates . See ?strptime list codes used represent different date formats. example, \"%d-%b-%y\" means dates formatted like 31-Jan-21.functions readxl loading .xlsx sheets different, limited way specify column types. convert factor columns dates using mutate(), learn Chapter 8, people let read_excel() guess data types set col_types argument.SPSS data, whilst rio::import() just read numeric values factors labels, function read_sav() haven reads . However, convert factors haven-specific \"labelled double\" factor (idea haven ).way specify column types googlesheets4 little different readr, although can also use shortcodes described help read_sheet() readr functions. currently column specification factors.","code":"\nglimpse(demo_csv)## Rows: 6\n## Columns: 6\n## $ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n## $ factor    <chr> \"high\", \"low\", \"med\", \"high\", \"low\", \"med\"\n## $ integer   <dbl> 1, 2, 3, 4, 5, 6\n## $ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n## $ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n## $ date      <date> 2022-01-21, 2022-01-20, 2022-01-19, 2022-01-18, 2022-01-17, ~\nglimpse(demo_xls)## Rows: 6\n## Columns: 6\n## $ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n## $ factor    <chr> \"high\", \"low\", \"med\", \"high\", \"low\", \"med\"\n## $ integer   <dbl> 1, 2, 3, 4, 5, 6\n## $ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n## $ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n## $ date      <dttm> 2022-01-21, 2022-01-20, 2022-01-19, 2022-01-18, 2022-01-17, ~\nglimpse(demo_sav)## Rows: 6\n## Columns: 6\n## $ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n## $ factor    <dbl+lbl> 3, 1, 2, 3, 1, 2\n## $ integer   <dbl> 1, 2, 3, 4, 5, 6\n## $ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n## $ logical   <dbl> 1, 1, 0, 0, NA, 1\n## $ date      <date> 2022-01-21, 2022-01-20, 2022-01-19, 2022-01-18, 2022-01-17, ~\nglimpse(demo_gs4)## Rows: 6\n## Columns: 6\n## $ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n## $ factor    <chr> \"high\", \"low\", \"med\", \"high\", \"low\", \"med\"\n## $ integer   <dbl> 1, 2, 3, 4, 5, 6\n## $ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n## $ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n## $ date      <dttm> 2021-11-22, 2021-11-21, 2021-11-20, 2021-11-19, 2021-11-18, ~\ndemo <- readr::read_csv(\"data/demo.csv\")## Rows: 6 Columns: 6## -- Column specification --------------------------------------------------------\n## Delimiter: \",\"\n## chr  (2): character, factor\n## dbl  (2): integer, double\n## lgl  (1): logical\n## date (1): date## \n## i Use `spec()` to retrieve the full column specification for this data.\n## i Specify the column types or set `show_col_types = FALSE` to quiet this message.\nspec(demo)## cols(\n##   character = col_character(),\n##   factor = col_character(),\n##   integer = col_double(),\n##   double = col_double(),\n##   logical = col_logical(),\n##   date = col_date(format = \"\")\n## )\ncorrected_cols <- cols(\n  character = col_character(),\n  factor = col_factor(levels = c(\"low\", \"med\", \"high\")),\n  integer = col_integer(),\n  double = col_double(),\n  logical = col_logical(),\n  date = col_date(format = \"%Y-%m-%d\")\n)\n\ndemo <- readr::read_csv(\"data/demo.csv\", col_types = corrected_cols)\ndemo_sav$factor <- haven::as_factor(demo_sav$factor)\n\nglimpse(demo_sav)## Rows: 6\n## Columns: 6\n## $ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n## $ factor    <fct> high, low, med, high, low, med\n## $ integer   <dbl> 1, 2, 3, 4, 5, 6\n## $ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n## $ logical   <dbl> 1, 1, 0, 0, NA, 1\n## $ date      <date> 2022-01-21, 2022-01-20, 2022-01-19, 2022-01-18, 2022-01-17, ~"},{"path":"data.html","id":"creating-data","chapter":"4 Data Import","heading":"4.6 Creating data","text":"need create small data table scratch R, use tibble::tibble() function, type data right . tibble package part tidyverse package loaded start chapter.create small table names three Avatar characters bending type. tibble() function takes arguments names want columns . values vectors list column values order.know value one cells, can enter NA, Sokka bending ability. values column , can just enter one value copied row.can also use tibble::tribble() function create table row, rather column. start listing column names, preceded tilde (~), list values column, row row, separated commas (forget comma end row).line columns tribble, can make easier spot errors.may need often primarily working data import spreadsheets, useful know anyway.","code":"\navatar <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE\n)\n\n# print it\navatar\navatar_by_row <- tribble(\n  ~name,    ~bends,  ~friendly,\n  \"Katara\", \"water\", TRUE,\n  \"Toph\",   \"earth\", TRUE,\n  \"Sokka\",  NA,      TRUE\n)"},{"path":"data.html","id":"writing-data","chapter":"4 Data Import","heading":"4.7 Writing data","text":"data want save, use rio::export(), follows.save data CSV format working directory.Writing Google Sheets little trickier (never use Google Sheets feel free skip section). Even Google Sheet publicly editable, add data without authorising account.can authorise interactively using following code (email), prompt authorise \"Tidyverse API Packages\" first time . tick checkbox authorising \"See, edit, create, delete Google Sheets spreadsheets\", next steps fail.Create new table called family first name, last name, age family members (biological, adopted, chosen).Save CSV file called \"family.csv\".Clear object environment restarting R code remove(family).Load data back view .working tabular data lot class, tabular data made vectors, groups together data basic data type. Appendix E explains terminology help understand functions learning process analyse data.","code":"\nexport(avatar, \"data/avatar.csv\")\n# authorise your account \n# this only needs to be done once per script\ngs4_auth(email = \"myemail@gmail.com\")\n\n# create a new sheet\nsheet_id <- gs4_create(name = \"demo-file\", \n                       sheets = \"letters\")\n\n# define the data table to save\nletter_data <- tibble(\n  character = LETTERS[1:5],\n  integer = 1:5,\n  double = c(1.1, 2.2, 3.3, 4.4, 5.5),\n  logical = c(T, F, T, F, T),\n  date = lubridate::today()\n)\n\nwrite_sheet(data = letter_data, \n            ss = sheet_id, \n            sheet = \"letters\")\n\n## append some data\nnew_data <- tibble(\n  character = \"F\",\n  integer = 6L,\n  double = 6.6,\n  logical = FALSE,\n  date = lubridate::today()\n)\nsheet_append(data = new_data,\n             ss = sheet_id,\n             sheet = \"letters\")\n\n# read the data\ndemo <- read_sheet(ss = sheet_id, sheet = \"letters\")\n# create the table\nfamily <- tribble(\n  ~first_name, ~last_name, ~age,\n  \"Lisa\", \"DeBruine\", 45,\n  \"Robbie\", \"Jones\", 14\n)\n\n# save the data to CSV\nexport(family, \"data/family.csv\")\n\n# remove the object from the environment\nremove(family)\n\n# load the data\nfamily <- import(\"data/family.csv\")"},{"path":"data.html","id":"troubleshooting","chapter":"4 Data Import","heading":"4.8 Troubleshooting","text":"import data guesses wrong column type? common reason numeric column non-numbers somewhere. Maybe someone wrote note otherwise numeric column. Columns one data type, characters, whole column converted character strings, numbers like 1.2 get represented \"1.2\", cause weird errors like \"100\" < \"9\" == TRUE. can catch using glimpse() check data.data directory downloaded contains file called \"mess.csv\". try loading dataset.importing goes wrong, often easier fix using specific importing function file type (e.g., use read_csv() rather rio::import(). problems tend specific file format can look help functions easily. CSV files, import function readr::read_csv.get warning parsing issues data table just single column. View file data/mess.csv clicking File pane, choosing \"View File\". first 10 lines. went wrong?First, file starts note: \"messy dataset\" blank line. first line data column headings, want skip first two lines. can argument skip read_csv().OK, little better, table still serious mess several ways:junk column needorder integer columngood logical columngood uses kinds different ways record TRUE FALSE valuesmin_max contains two pieces numeric information, character columndate date columnWe'll learn deal mess Chapters 7 8, can fix things setting col_types argument read_csv() specify column types two columns guessed wrong skip \"junk\" column. argument col_types takes list name item list column name value table . can use function, like col_double() abbreviation, like \"d\"; consistency earlier chapter use function names. Omitted column names guessed.get message parsing issues run tells run problems() function see table problems. Warnings look scary first, always start reading message.output problems() tells row (3) column (2) error found , kind data expected (integer), actual value (missing). specifically tell read_csv() import column integer, characters (.e., numbers) column produce warning like recorded NA. can manually set missing values recorded na argument.Now order integer variable empty cells contain NA. variable good logical value, 0 F converted FALSE 1 T converted TRUE. variable date date type (adding leading zeros day). learn later chapters fix problems, min_max column containing two different types data.","code":"\nmess <- rio::import(\"data/mess.csv\")## Warning in (function (input = \"\", file = NULL, text = NULL, cmd = NULL, :\n## Stopped early on line 5. Expected 7 fields but found 0. Consider fill=TRUE\n## and comment.char=. First discarded non-empty line: <<junk,missing,0.72,b,1,2 -\n## 3,2020-01-2>>\n# lazy = FALSE loads the data right away so you can see error messages\n# this default changed in late 2021 and might change back soon\nmess <- read_csv(\"data/mess.csv\", lazy = FALSE)## Warning: One or more parsing issues, see `problems()` for details## Rows: 27 Columns: 1## -- Column specification --------------------------------------------------------\n## Delimiter: \",\"\n## chr (1): This is my messy dataset## \n## i Use `spec()` to retrieve the full column specification for this data.\n## i Specify the column types or set `show_col_types = FALSE` to quiet this message.This is my messy dataset\n\njunk,order,score,letter,good,min_max,date\njunk,1,-1,a,1,1 - 2,2020-01-1\n\njunk,missing,0.72,b,1,2 - 3,2020-01-2\n\njunk,3,-0.62,c,FALSE,3 - 4,2020-01-3\n\njunk,4,2.03,d,T,4 - 5,2020-01-4\nmess <- read_csv(\"data/mess.csv\", \n                 skip = 2,\n                 lazy = FALSE)## Rows: 26 Columns: 7## -- Column specification --------------------------------------------------------\n## Delimiter: \",\"\n## chr (6): junk, order, letter, good, min_max, date\n## dbl (1): score## \n## i Use `spec()` to retrieve the full column specification for this data.\n## i Specify the column types or set `show_col_types = FALSE` to quiet this message.\nglimpse(mess)## Rows: 26\n## Columns: 7\n## $ junk    <chr> \"junk\", \"junk\", \"junk\", \"junk\", \"junk\", \"junk\", \"junk\", \"junk\"~\n## $ order   <chr> \"1\", \"missing\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\",~\n## $ score   <dbl> -1.00, 0.72, -0.62, 2.03, NA, 0.99, 0.03, 0.67, 0.57, 0.90, -1~\n## $ letter  <chr> \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m~\n## $ good    <chr> \"1\", \"1\", \"FALSE\", \"T\", \"1\", \"0\", \"T\", \"TRUE\", \"1\", \"T\", \"F\", ~\n## $ min_max <chr> \"1 - 2\", \"2 - 3\", \"3 - 4\", \"4 - 5\", \"5 - 6\", \"6 - 7\", \"7 - 8\",~\n## $ date    <chr> \"2020-01-1\", \"2020-01-2\", \"2020-01-3\", \"2020-01-4\", \"2020-01-5~\n# omitted values are guessed\n# ?col_date for format options\nct <- cols(\n  junk = col_skip(), # skip this column\n  order = col_integer(),\n  good = col_logical(),\n  date = col_date(format = \"%Y-%m-%d\")\n)\n\ntidier <- read_csv(\"data/mess.csv\", \n                   skip = 2,\n                   col_types = ct,\n                   lazy = FALSE)## Warning: One or more parsing issues, see `problems()` for details\nproblems()\ntidiest <- read_csv(\"data/mess.csv\", \n                   skip = 2,\n                   na = \"missing\",\n                   col_types = ct,\n                   lazy = FALSE)"},{"path":"data.html","id":"working-with-real-data","chapter":"4 Data Import","heading":"4.9 Working with real data","text":"worth highlighting point working real data can difficult dataset can messy way. Throughout course show common errors fix , prepared start working data, likely come across problems cover course just part joy learning programming. also get better looking solutions using sites like Stack Overflow fantastic #rstats community Twitter can ask help.may also tempted fix messy datasets , example, opening Excel editing . Whilst might seem easier short term, two serious issues . First, likely work datasets recurring messy problems. taking time solve problems code, can apply solutions large number future datasets efficient long run. Second, edit spreadsheet, record . solving problems code, reproducibly edit original data file. means make error, lost original data can recover.","code":""},{"path":"data.html","id":"exercises-1","chapter":"4 Data Import","heading":"4.10 Exercises","text":"final step chapter, create report using one -built datasets practice skills used far. may need refer back previous chapters help complete exercises may also want take break work section. also recommend knit every step can see output changes.","code":""},{"path":"data.html","id":"exercises-new-rmd-4","chapter":"4 Data Import","heading":"4.10.1 New Markdown","text":"Create save new R Markdown document named starwars_report.Rmd. set-code chunk load packages tidyverse rio.going use built-starwars dataset contains data Star Wars characters. can learn dataset using ?help function.","code":""},{"path":"data.html","id":"exercises-load","chapter":"4 Data Import","heading":"4.10.2 Import and export the dataset","text":"First, load -built dataset environment. Type run code console; save Markdown., export dataset .csv file save data directory. , console.Finally, import version dataset using read_csv() object named starwars - can put code Markdown.","code":"\ndata(starwars)\nexport(starwars, \"data/starwars.csv\")\nstarwars <- read_csv(\"data/starwars.csv\")"},{"path":"data.html","id":"convert-column-types","chapter":"4 Data Import","heading":"4.10.3 Convert column types","text":"Check column specification starwars.Create new column specification lists following columns factors: hair_color, skin_color, eye_color, sex, gender, homeworld, species skips following columns: films, vehicles, starships (columns contain multiple values stored lists, covered work ). set factor orders (although can wish).Re-import dataset, time corrected column types.","code":"\nspec(starwars)\ncorrected_cols <- cols(\n  name = col_character(),\n  height = col_double(),\n  mass = col_double(),\n  hair_color = col_factor(),\n  skin_color = col_factor(),\n  eye_color = col_factor(),\n  birth_year = col_double(),\n  sex = col_factor(),\n  gender = col_factor(),\n  homeworld = col_factor(),\n  species = col_factor(),\n  films = col_skip(),\n  vehicles = col_skip(),\n  starships = col_skip()\n)\n\nstarwars <- read_csv(\"data/starwars.csv\", col_types = corrected_cols)"},{"path":"data.html","id":"exercises-plots","chapter":"4 Data Import","heading":"4.10.4 Plots","text":"Produce following plots one plot choosing. Write brief summary plot shows conclusions might reach data.","code":"\nggplot(starwars, aes(height)) +\n  geom_density(colour = \"black\", alpha = .3) +\n  scale_x_continuous(breaks = seq(from = 50, to = 300, by = 25)) +\n  labs(title = \"Height (cm) distribution of Star Wars Characters\") +\n  theme_classic()\nggplot(starwars, aes(mass)) +\n  geom_histogram(colour = \"black\", binwidth = 10) +\n  scale_x_continuous(breaks = seq(from = 0, to = 2000, by = 100)) +\n  labs(title = \"Weight (kg) distribution of Star Wars Characters\") +\n  theme_classic()\nggplot(starwars, aes(x = gender, fill = gender)) +\n  geom_bar(show.legend = FALSE, colour = \"black\") +\n  scale_x_discrete(name = \"Gender of character\", labels = (c(\"Masculine\", \"Feminine\", \"Missing\"))) +\n  scale_fill_brewer(palette = 2) +\n  labs(title = \"Number of Star Wars characters of each gender\") +\n  theme_bw()"},{"path":"data.html","id":"make-it-look-nice","chapter":"4 Data Import","heading":"4.10.5 Make it look nice","text":"Add least one Star Wars related image online sourceHide code messages knitted outputResize images see fit\nFigure 4.1: Adaptation Star Wars logo created Weweje; original logo Suzy Rice, 1976. CC--3.0\n","code":"```{r, echo = FALSE, out.width = \"50%\", fig.cap=\"Adaptation of Star Wars logo created by Weweje; original logo by Suzy Rice, 1976. CC-BY-3.0\"}\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Star_wars2.svg/2880px-Star_wars2.svg.png\")```"},{"path":"data.html","id":"share-your-work-1","chapter":"4 Data Import","heading":"4.10.6 Share your work","text":"done, share knitted html file Week 4 Teams channel learners course can see approached task.","code":""},{"path":"data.html","id":"glossary-data","chapter":"4 Data Import","heading":"4.11 Glossary","text":"","code":""},{"path":"data.html","id":"resources-data","chapter":"4 Data Import","heading":"4.12 Further resources","text":"Data import cheatsheetChapter 11: Data Import R Data ScienceMulti-row headers","code":""},{"path":"summary.html","id":"summary","chapter":"5 Data Summaries","heading":"5 Data Summaries","text":"","code":""},{"path":"summary.html","id":"ilo-summary","chapter":"5 Data Summaries","heading":"5.1 Intended Learning Outcomes","text":"able summarise data groupsBe able produce well-formatted tablesIn chapter use following packages:","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(rtweet) # for searching tweets\nlibrary(kableExtra)  # for nice tables"},{"path":"summary.html","id":"set-up-2","chapter":"5 Data Summaries","heading":"5.2 Set-up","text":"First, create new project work chapter named 05-summary. Second, download data chapter (ncod_tweets.rds) save project data folder. Finally, open save new R Markdown document named summary.Rmd, delete welcome text load required packages chapter.","code":""},{"path":"summary.html","id":"social-media-data","chapter":"5 Data Summaries","heading":"5.3 Social media data","text":"chapter going analyse social media data, specifically data Twitter. two broad types data can obtain Twitter; data scraped Twitter using purpose-built packages rtweet, data provided via Twitter Analytics accounts access.chapter, use data scraped Twitter using rtweet. order use functions, need Twitter account. worry one; provide data examples .rtweet lot flexibility, example, can search tweets contain certain hashtag word, tweets specific user, tweets meet certain conditions like location whether user verified.dataset chapter, used search_tweets() function find last 30K tweets hashtag #NationalComingOutDay. mainly interesting around October 11th (date National Coming Day), provided relevant data scraped time.Twitter account, can complete chapter using data hashtag interests . run search_tweets() function, asked sign Twitter account.","code":"\ntweets <- search_tweets(q = \"#NationalComingOutDay\", \n                        n = 30000, \n                        include_rts = FALSE)"},{"path":"summary.html","id":"r-objects","chapter":"5 Data Summaries","heading":"5.3.1 R objects","text":"working live social media data, every time run query highly likely get different set data new tweets added. Additionally, Twitter API places limits much data can download searches limited data last 6-9 days. Consequently, can useful save results initial search. saveRDS useful function allows save object environment disk.run search_tweets() save results, set code chunk eval = FALSE comment code script run search overwrite saved data every time knit .load .rds file, can use readRDS() function. access Twitter account, ensure get output rest chapter, can download ncod_tweets.rds load using function.First, run glimpse(tweets) click object environment find information downloaded data (lot!). Now create series summary tables plots data.","code":"\nsaveRDS(tweets, file = \"data/ncod_tweets.rds\")\ntweets <- readRDS(\"data/ncod_tweets.rds\")"},{"path":"summary.html","id":"summarise","chapter":"5 Data Summaries","heading":"5.4 Summarise","text":"summarise() function dplyr package loaded part tidyverse creates summary statistics. creates new table columns summarise data larger table using summary functions. Check Data Transformation Cheat Sheet various summary functions. common ones : n(), min(), max(), sum(), mean(), quantile().function can used answer questions like: many tweets ? date range represented data? mean median number favourites per tweet? start simple example calculate mean, median, min, max number favourites (Twitter's version \"like\"):first argument summarise() takes data table wish summarise, case object tweets.summarise() create new table. column names new table left hand-side arguments, .e., mean_favs, median_favs, min_favs max_favs.values columns result summary operation right hand-side.mean number favourites substantially higher median range huge, suggesting r glossary(\"outlier\", \"outliers\"). quick histogram confirms - tweets favourites lot likes skew mean.Plotting logarithm skewed value can often give better idea going . Use scale_x_continuous(trans = \"pseudo_log\") include zeros plot (just \"log\" converts 0 negative infinity removes plot).can add multiple operations single call summarise() try different operations. n() function counts number rows data. created_at column gives us date tweet created, can use min() max() functions get range dates.Quantiles like percentiles. Use quantile(x, .50) find median (number 50% values x 50% ). can useful need value like \"90% tweets get X favourites fewer\".find largest number retweets?\n\ntweets %>% summarise(max = retweets)tweets %>% summarise(max_retweets)tweets %>% summarise(max_retweets = max(retweets))tweets %>% max(retweets)\ncalculate mean display_text_width?\n\nsummarise(display_text_width = mean)summarise(width = mean(display_text_width))width(mean(display_text_width))group_by(display_text_width)\n","code":"\nfavourite_summary <- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count))\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(),\n            min_date = min(created_at),\n            max_date = max(created_at))\n\nglimpse(tweet_summary)## Rows: 1\n## Columns: 5\n## $ mean_favs   <dbl> 29.71732\n## $ median_favs <dbl> 3\n## $ n           <int> 28626\n## $ min_date    <dttm> 2021-10-10 00:10:02\n## $ max_date    <dttm> 2021-10-12 20:12:27\nquantile(tweets$favorite_count, 0.90)## 90% \n##  31"},{"path":"summary.html","id":"the-operator","chapter":"5 Data Summaries","heading":"5.4.1 The $ operator","text":"need take couple brief detours introduce additional coding conventions. First, clear $ notation . dollar sign allows select items object, columns table. left-hand side object, right-hand side item. call column like , R print observations column.item multiple observations, can specify ones return using square brackets [] row number vector row numbers.","code":"\ntweet_summary$mean_favs## [1] 29.71732\ntweets$source[1] # select one observation\ntweets$display_text_width[c(20,30,40)] # select multiple with c()## [1] \"Twitter for Android\"\n## [1]  78 287 107"},{"path":"summary.html","id":"pipes-first","chapter":"5 Data Summaries","heading":"5.4.2 Pipes","text":"second detour, formally introduce pipe, weird %>% symbol used occasionally. Pipes allow send output one function straight another function. Specifically, send result function %>% first argument function %>%. can useful translate pipe \"\". easier show tell, look example.write code using pipe follows:Notice summarise() longer needs first argument data table, pulled pipe. power pipe may obvious now, soon prove worth.","code":"\ntweet_summary <- tweets %>% # start with the object tweets and then\n  summarise(mean_favs = mean(favorite_count), #summarise it\n            median_favs = median(favorite_count))"},{"path":"summary.html","id":"inline-coding","chapter":"5 Data Summaries","heading":"5.4.3 Inline coding","text":"insert values text report can use inline coding. First. create another set objects contain first last date tweets dataset. format() formats dates day/month/year.can insert values objects tables created summarise() using inline R (note dollar sign notation get value n column table tweet_summary).Knit Markdown see variables inside inline code get replaced values.28626 tweets 10 October, 2021 12 October, 2021.Ok, get back track.","code":"\ndate_from <- tweet_summary$min_date %>% \n  format(\"%d %B, %Y\")\ndate_to <- tweet_summary$max_date %>% \n  format(\"%d %B, %Y\")There were `r tweet_summary$n` tweets between `r date_from` and `r date_to`."},{"path":"summary.html","id":"counting","chapter":"5 Data Summaries","heading":"5.5 Counting","text":"many different accounts tweeted using hashtag? tweeted ?can count categorical data count() function. Since row tweet, can count number rows per different screen_name get number tweets per user. give new table combination counted columns column called n containing number observations group.argument sort = TRUE sort table n descending order, whilst head() returns first six lines data table useful function call large dataset just want see top values.create table counts ?","code":"\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)"},{"path":"summary.html","id":"inline-coding-2","chapter":"5 Data Summaries","heading":"5.5.1 Inline coding 2","text":"another example inline coding writes summary prolific tweeters demonstrate additional functions. First, need create additional objects use inline R:nrow() simply counts number rows dataset one user/participant/customer per row, easy way head count.slice() chooses particular row data, case first row. sorted data, therefore user tweets.pull() pulls single variable.combination slice() pull() allows choose single observation single variable.add inline code report......knit Markdown see output:25189 unique accounts tweeting #NationalComingOutDay. interest_outfit prolific tweeter, 35 tweets.","code":"\nunique_users <- nrow(tweets_per_user)\nmost_prolific <- slice(tweets_per_user, 1) %>% \n  pull(screen_name)\nmost_prolific_n <- slice(tweets_per_user, 1) %>% \n  pull(n)There were `r unique_users` unique accounts tweeting about #NationalComingOutDay. `r most_prolific` was the most prolific tweeter, with `r most_prolific_n` tweets."},{"path":"summary.html","id":"grouping","chapter":"5 Data Summaries","heading":"5.6 Grouping","text":"can also create summary values group. combination group_by() summarise() incredibly powerful, also good demonstration pipes useful.function group_by() takes existing data table converts grouped table, operations performed done \"group\".first line code creates object named tweets_grouped, groups dataset according whether user verified user. surface, tweets_grouped look different original tweets. However, underlying structure changed run summarise(), now get requested summaries group (case verified ).Make sure call ungroup() function done grouped functions. Failing can cause sorts mysterious problems use data table later assuming grouped.Whilst code functional, adds unnecessary object environment - tweets_grouped taking space increases risk use grouped object mistake. Enter... pipe.Rather creating intermediate object, can use pipe string code together.change calculate mean favourites retweets screen_name instead verified?\n\nsummarise(screen_name)count(screen_name)group_by(screen_name)mean(screen_name)\n","code":"\ntweets_grouped <- tweets %>%\n  group_by(verified)\n\nverified <- tweets_grouped %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nverified\nverified <- \n  tweets_grouped %>% # Start with the original dataset; and then\n  group_by(verified) %>% # group it; and then\n  summarise(count = n(), # summarise it by those groups\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()"},{"path":"summary.html","id":"multiple-groupings","chapter":"5 Data Summaries","heading":"5.6.1 Multiple groupings","text":"can add multiple variables group_by() break data. example, gives us number likes retweets broken verified status device person tweeting (source).Reverse order verified source group_by() see changed output.may get following message using summarise() group_by().summarise() grouped output 'verified'. can override using .groups argument.Tidyverse recently added message remind whether summarise() function automatically ungroups grouped data (may different things depending used). can set argument .groups \"drop\", \"drop_last\", \"keep\", \"rowwise\" (see help ?summarise), good practice explicitly use ungroup() done working groups, regardless.","code":"\nverified_source <- tweets %>%\n  group_by(verified, source) %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup() %>%\n  arrange(desc(count))\n\nhead(verified_source)"},{"path":"summary.html","id":"filter-and-mutate","chapter":"5 Data Summaries","heading":"5.6.2 Filter and mutate","text":"can also use additional functions like filter() mutate() group_by. learn Chapter  8 briefly:filter() keeps observations (rows) according specified criteria, e.g., values 5, verified users.mutate() creates new variables (columns), overwrites existing ones.can combine functions like get detailed insights data. example, favourited original quoted tweets?variable is_quote tells us whether tweet question original tweet quote tweet. want output treat separately, pass variable group_by().want favourited tweets, .e., maximum value favourite_count, can use filter() return rows favourite_count equal maximum value variable favourite_count. Note use == rather single =.Just case tie, choose random one sample_n(size = 1).limit results sources 10 rows?\n\ntweets %>% group_by(source) %>% select(n() >= 10)tweets %>% group_by(source) %>% filter(n() >= 10)tweets %>% group_by(source) %>% select(count() >= 10)tweets %>% group_by(source) %>% filter(count() >= 10)\n","code":"\nmost_fav <- tweets %>%\n  group_by(is_quote) %>%\n  filter(favorite_count == max(favorite_count)) %>%\n  sample_n(size = 1) %>%\n  ungroup()"},{"path":"summary.html","id":"inline-coding-3","chapter":"5 Data Summaries","heading":"5.6.3 Inline coding 3","text":"huge amount data reported tweet, including things like URLs tweets media attached . means can produce output like reproducibly using inline coding.favourited 22935 original tweet jackrooke:’s #nationalcomingoutday 🎉 ’s pic came back 2003 xx https://t.co/spBmHhF6p4To produce , first split most_fav, one object contains data original tweet one object contains data quote tweet.inline code follows:quite complicated break .first bit inline coding fairly standard used .second bit inline coding inserts URL. content [] text displayed. content () underlying URL. cases, content pulled dataset. case, text screen_name status_url links tweet.line dashes creates solid line knitted output.> symbol changes format block quote.image included using format ![](url), alternative method including images Markdown.","code":"\norig <- filter(most_fav,is_quote == FALSE)\nquote <- filter(most_fav,is_quote == TRUE)The most favourited `r orig$favorite_count` original tweet was by [`r orig$screen_name`](`r orig$status_url`):\n\n--------------------------------------------------\n  \n> `r orig$text`\n\n![](orig$ext_media_url)\n\n--------------------------------------------------"},{"path":"summary.html","id":"exercises-2","chapter":"5 Data Summaries","heading":"5.7 Exercises","text":"intensive chapter! Take break try one () following post knitted HTML files Teams learners course can see .Work examples Appendix G.Twitter account, conduct similar analysis different hashtag.Look rest variables tweets; insights can generate data?Read kableExtra vignettes apply preferred table style.Work first chapters Tidy Text see can work analyse text. particular, see can conduct sentiment analysis tweet data.","code":""},{"path":"summary.html","id":"glossary-summary","chapter":"5 Data Summaries","heading":"5.8 Glossary","text":"","code":""},{"path":"summary.html","id":"resources-summary","chapter":"5 Data Summaries","heading":"5.9 Further resources","text":"Data transformation cheat sheetChapter 5: Data Transformation R Data ScienceIntro rtweetTidy TextkableExtra vignettes","code":""},{"path":"joins.html","id":"joins","chapter":"6 Data Relations","heading":"6 Data Relations","text":"","code":""},{"path":"joins.html","id":"ilo-joins","chapter":"6 Data Relations","heading":"6.1 Intended Learning Outcomes","text":"able match related data across multiple tablesBe able combine data multiple filesThe data want report visualise often one file (one tab excel file googlesheet). might need join table customer information table orders, combine monthly social media reports across several months.demo, first create two small data tables.customer id, city postcode customers 1-5. City postcode missing customer 3.orders customer id number items ordered. customers orders, one order, customer table.","code":"\nlibrary(tidyverse)     # includes readr & tibble\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\nlibrary(googlesheets4) # for Google Sheets\ncustomers <- tibble(\n  id = 1:5,\n  city = c(\"Port Ellen\", \"Dufftown\", NA, \"Aberlour\", \"Tobermory\"),\n  postcode = c(\"PA42 7DU\", \"AB55 4DH\", NA, \"AB38 7RY\", \"PA75 6NR\")\n)\norders <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)"},{"path":"joins.html","id":"mutating-joins","chapter":"6 Data Relations","heading":"6.2 Mutating Joins","text":"Mutating joins act like dplyr::mutate() function add new columns one table based values another table. (learn mutate() function Chapter 7.)mutating joins basic syntax:****_join(x, y, = NULL, suffix = c(\".x\", \".y\")x = first (left) tabley = second (right) tableby = columns match . leave blank, match columns names two tables.suffix = columns name two tables, joining , get suffix make unambiguous. defaults \".x\" \".y\", can change something meaningful.can leave argument matching columns name, good practice always specify code robust changes loaded data.","code":""},{"path":"joins.html","id":"left_join","chapter":"6 Data Relations","heading":"6.2.1 left_join()","text":"left_join keeps data first (left) table joins anything matches second (right) table. right table one match row right table, one row joined table (see ids 4 5).order tables swapped , result rows orders table joined matching rows customers table.","code":"\nleft_join(customers, orders, by = \"id\")\nleft_join(orders, customers, by = \"id\")"},{"path":"joins.html","id":"right_join","chapter":"6 Data Relations","heading":"6.2.2 right_join()","text":"right_join keeps data second (right) table joins anything matches first (left) table.table information left_join(orders, customers, = \"id\"), columns different order (left table, right table).","code":"\nright_join(customers, orders, by = \"id\")"},{"path":"joins.html","id":"inner_join","chapter":"6 Data Relations","heading":"6.2.3 inner_join()","text":"inner_join returns rows match table.","code":"\ninner_join(customers, orders, by = \"id\")"},{"path":"joins.html","id":"full_join","chapter":"6 Data Relations","heading":"6.2.4 full_join()","text":"full_join lets join rows two tables keeping information tables. row match table, table's column values set NA.","code":"\nfull_join(customers, orders, by = \"id\")"},{"path":"joins.html","id":"filtering-joins","chapter":"6 Data Relations","heading":"6.3 Filtering Joins","text":"Filtering joins act like filter() function remove rows data one table based values another table. result filtering join contain rows left table number fewer rows left table. (learn filter() function Chapter 8.)","code":""},{"path":"joins.html","id":"semi_join","chapter":"6 Data Relations","heading":"6.3.1 semi_join()","text":"semi_join returns rows left table matching values right table, keeping just columns left table.Unlike inner join, semi join never duplicate rows left table one matching row right table.Order matters semi join.","code":"\nsemi_join(customers, orders, by = \"id\")\nsemi_join(orders, customers, by = \"id\")"},{"path":"joins.html","id":"anti_join","chapter":"6 Data Relations","heading":"6.3.2 anti_join()","text":"anti_join return rows left table matching values right table, keeping just columns left table.Order matters anti join.","code":"\nanti_join(customers, orders, by = \"id\")\nanti_join(orders, customers, by = \"id\")"},{"path":"joins.html","id":"binding-joins","chapter":"6 Data Relations","heading":"6.4 Binding Joins","text":"Binding joins bind one table another adding rows columns together.","code":""},{"path":"joins.html","id":"bind_rows","chapter":"6 Data Relations","heading":"6.4.1 bind_rows()","text":"can combine rows two tables bind_rows.add customer data customers 6-9 bind original customer table.columns just names, order. columns differ two tables just NA values entries table.row duplicated two tables (like id 5 ), row also duplicated resulting table. tables exact columns, can use union() (see ) avoid duplicates.","code":"\nnew_customers <- tibble(\n  id = 6:9,\n  city = c(\"Falkirk\", \"Ardbeg\", \"Doogal\", \"Kirkwall\"),\n  postcode = c(\"FK1 4RS\", \"PA42 7EA\", \"G81 4SJ\", \"KW15 1SE\")\n)\n\nbind_rows(customers, new_customers)\nnew_customers <- tibble(\n  id = 5:9,\n  postcode = c(\"PA75 6NR\", \"FK1 4RS\", \"PA42 7EA\", \"G81 4SJ\", \"KW15 1SE\"),\n  city = c(\"Tobermory\", \"Falkirk\", \"Ardbeg\", \"Doogal\", \"Kirkwall\"),\n  new = c(1,2,3,4,5)\n)\n\nbind_rows(customers, new_customers)"},{"path":"joins.html","id":"bind_cols","chapter":"6 Data Relations","heading":"6.4.2 bind_cols()","text":"can merge two tables number rows using bind_cols. useful two tables rows exact order. advantage left join tables IDs join rely solely order.","code":"\nnew_info <- tibble(\n  colour = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\")\n)\n\nbind_cols(customers, new_info)"},{"path":"joins.html","id":"importing-folders","chapter":"6 Data Relations","heading":"6.4.3 Importing folders","text":"need import bind whole folder full files structure, get list files want combine. easiest directory, although can use pattern select files want systematic naming structure.Now can use purrr::map_df() map list file paths, open read_csv(), return table combined data.","code":"\n# write our data to a new folder for the demo\nwrite_csv(x = customers, file = \"data/customers1.csv\")\nwrite_csv(x = new_customers, file = \"data/customers2.csv\")\n\nfiles <- list.files(\n  path = \"data\", \n  pattern = \"customers\",\n  full.names = TRUE\n)\n\nfiles## [1] \"data/customers1.csv\" \"data/customers2.csv\"\npurrr::map_df(files, read_csv)\n# clean up temporary files\nfile.remove(\"data/customers1.csv\")\nfile.remove(\"data/customers2.csv\")## [1] TRUE\n## [1] TRUE"},{"path":"joins.html","id":"set-operations","chapter":"6 Data Relations","heading":"6.5 Set Operations","text":"Set operations compare two tables return rows match (intersect), either table (union), one table (setdiff).","code":""},{"path":"joins.html","id":"intersect","chapter":"6 Data Relations","heading":"6.5.1 intersect()","text":"intersect() returns rows two tables match exactly. columns order.forgotten load dplyr tidyverse, base R also intersect() function. error message can confusing looks something like :","code":"\nnew_customers <- tibble(\n  id = 5:9,\n  postcode = c(\"PA75 6NR\", \"FK1 4RS\", \"PA42 7EA\", \"G81 4SJ\", \"KW15 1SE\"),\n  city = c(\"Tobermory\", \"Falkirk\", \"Ardbeg\", \"Doogal\", \"Kirkwall\")\n)\n\nintersect(customers, new_customers)\nbase::intersect(customers, new_customers)## Error: Must subset rows with a valid subscript vector.\n## i Logical subscripts must match the size of the indexed input.\n## x Input has size 5 but subscript `!duplicated(x, fromLast = fromLast, ...)` has size 0."},{"path":"joins.html","id":"union","chapter":"6 Data Relations","heading":"6.5.2 union()","text":"union() returns rows tables, removing duplicate rows.forgotten load dplyr tidyverse, base R also union() function. usually get error message, output expect.","code":"\nunion(customers, new_customers)\nbase::union(customers, new_customers)## [[1]]\n## [1] 1 2 3 4 5\n## \n## [[2]]\n## [1] \"Port Ellen\" \"Dufftown\"   NA           \"Aberlour\"   \"Tobermory\" \n## \n## [[3]]\n## [1] \"PA42 7DU\" \"AB55 4DH\" NA         \"AB38 7RY\" \"PA75 6NR\"\n## \n## [[4]]\n## [1] 5 6 7 8 9\n## \n## [[5]]\n## [1] \"PA75 6NR\" \"FK1 4RS\"  \"PA42 7EA\" \"G81 4SJ\"  \"KW15 1SE\"\n## \n## [[6]]\n## [1] \"Tobermory\" \"Falkirk\"   \"Ardbeg\"    \"Doogal\"    \"Kirkwall\""},{"path":"joins.html","id":"setdiff","chapter":"6 Data Relations","heading":"6.5.3 setdiff()","text":"setdiff returns rows first table, second table.Order matters setdiff.forgotten load dplyr tidyverse, base R also setdiff() function. usually get error message, output might expect base R setdiff() expects columns order, id 5 registers different two tables.","code":"\nsetdiff(customers, new_customers)\nsetdiff(new_customers, customers)\nbase::setdiff(customers, new_customers)"},{"path":"joins.html","id":"glossary-joins","chapter":"6 Data Relations","heading":"6.6 Glossary","text":"","code":""},{"path":"joins.html","id":"resources-joins","chapter":"6 Data Relations","heading":"6.7 Further resources","text":"Data transformation cheatsheetData transformation cheatsheetChapter 13: Relational Data R Data ScienceChapter 13: Relational Data R Data Science","code":""},{"path":"tidy.html","id":"tidy","chapter":"7 Data Tidying","heading":"7 Data Tidying","text":"","code":""},{"path":"tidy.html","id":"ilo-tidy","chapter":"7 Data Tidying","heading":"7.1 Intended Learning Outcomes","text":"able reshape data long wide formatsSeparate, change, reorder, rename columnsUse pipes chain together functions","code":"\nlibrary(tidyverse) # for data wrangling"},{"path":"tidy.html","id":"data-structure","chapter":"7 Data Tidying","heading":"7.2 Data Structure","text":"observation information single \"thing\" single point time. things can customers, sales, orders, feedback questionnaires, tweets, really anything. Observations way identify , unique ID combination variable values.variable one type information observation. example, observation sale, variables might sale sale ID, customer's ID, date sale, price paid, method payment.value data one variable one observation. example, value date variable observation sale might 2021-08-20.three rules \"tidy data\", data format makes easier combine data different tables, create summary tables, visualise data.observation must rowEach variable must columnEach value must cell","code":""},{"path":"tidy.html","id":"untidy-data","chapter":"7 Data Tidying","heading":"7.2.1 Untidy data","text":"table three observations per row (one customer's orders 2018, 2019, 2020) itemsprice_{year} columns contain two values (number items price per item).\nTable 7.1: Untidy table\nsay wanted calculate total price per customer three years total number items bought per customer. perform mathematical operations itemsprice_{year} columns character data types.probably normally use Excel tosplit itemsprice_2018 column item_2018 price_2018 columnssplit itemsprice_2019 column item_2019 price_2019 columnssplit itemsprice_2020 column item_2018 price_2020 columnsadd item_2018 + item_2019 + item_2020 get total number items bought per customeradd totalprice_2018 + totalprice_2019 + totalprice_2020 get total price per customerThink many steps Excel 10 years table, different number years time encountered data like .","code":""},{"path":"tidy.html","id":"tidy-data","chapter":"7 Data Tidying","heading":"7.2.2 Tidy data","text":"tidy version, row customer's orders particular year. number items (items) price per item (price_per_item) separate columns, now can perform mathematical operations .\nTable 7.1: Tidy table\ncalculate total price per customer three years total number items bought per customer R, need :group table customer_idsum items column get total number items bought per customersum totalprice column get total price per customerIf 10 years table, different number years time encountered data like , code producing table never changes.control data recorded, make life easier record tidy format start. However, always control, class also teach convert untidy tables tidy tables.","code":"\ntidy_data <- read_csv(\"data/tidy_data.csv\")\n\n# we'll learn about these functions later\ntidy_data %>%\n  group_by(customer_id) %>%\n  summarise(\n    total_items = sum(items),\n    total_price = sum(totalprice)\n  )"},{"path":"tidy.html","id":"reshaping-data","chapter":"7 Data Tidying","heading":"7.3 Reshaping Data","text":"Data tables can wide format long format (mix two). Wide data observations one thing row, long data observation separate row. often need convert formats different types summaries visualisation. may done something similar using pivot tables Excel.\nFigure 7.1: Converting wide long formats using pivot tables Excel.\nlook just totalprice data untidy table . can select just columns want using dplyr::select() function. function's first argument data table want select , argument either name column table, new_name = old_name. useful function changing column names order columns, well selecting subset columns.\nTable 7.2: Wide data\nwide format, row customer, represents data several years. really intuitive way humans read table, easy computer process .data can represented long format creating new column specifies year observation new column specifies totalprice observation. easier use make summaries plots.\nTable 7.3: Long data\nCreate long version following table many million followers band different social media platforms. need use code, just sketch notebook make table spreadsheet.answer need column headers order.pivot functions allow transform data table wide long long wide.","code":"\n# select just the customer ID and 3 total price columns\nuntidy_price <- select(\n  .data = untidy_data,\n  customer_id, \n  `2018` = totalprice_2018,\n  `2019` = totalprice_2019,\n  `2020` = totalprice_2020\n)"},{"path":"tidy.html","id":"wide-to-long","chapter":"7 Data Tidying","heading":"7.3.0.1 Wide to long","text":"function pivot_longer() converts wide data table longer format converting headers specified columns values new columns, combining values columns new condensed column.function several arguments:cols: columns want make long; can refer names, like c(`2018`, `2019`, `2020`) `2018`:`2020` numbers, like c(2, 3, 4) 2:4names_to: want call new columns cols column header names go intovalues_to: want call new column contains values cols\nTable 7.4: Data made longer pivot_longer()\n","code":"\nuntidy_price_long <- pivot_longer(\n  data = untidy_price, \n  cols = `2018`:`2020`, # columns to make long \n  names_to = \"year\", # new column name for headers\n  values_to = \"totalprice\" # new column name for values\n)"},{"path":"tidy.html","id":"long-to-wide","chapter":"7 Data Tidying","heading":"7.3.0.2 Long to wide","text":"can also go long wide format using pivot_wider() function.names_from: columns contain new column headers.values_from: column contains values new columns.names_sep:character string used join names names_from one column.\nTable 7.5: Data made wider pivot_wider()\n","code":"\nuntidy_price_wide <- pivot_wider(\n  data = untidy_price_long,\n  names_from = year,\n  values_from = totalprice\n)"},{"path":"tidy.html","id":"multistep","chapter":"7 Data Tidying","heading":"7.4 Multi-step tidying","text":"often need go wide, long, intermediate shape order get data format useful plotting, column variable want represent aesthetic.full untidy_data table seven columns: customer ID, three columns itemsprice 3 columns totalprice.want get tidy format row observation one customer per year, columns customer_id, year, item, price_per_item totalprice.","code":""},{"path":"tidy.html","id":"one-observation-per-row","chapter":"7 Data Tidying","heading":"7.4.1 One observation per row","text":"original table observations customer three years. many observations per row, first start making table long. need make 6 rows customer, one variable-year combo, columns customer ID, year, variable, value.combining columns numeric character data type, need make new value column character data type using values_transform, since numbers can represented characters (like \"3.5\"), character strings represented numbers.\nTable 7.6: Untidy data converted wide long.\n","code":"\nlonger_data <- pivot_longer(\n  data = untidy_data, \n  cols = itemsprice_2018:totalprice_2020, # columns to make long \n  names_to = c(\"category\", \"year\"),       # new column names for cols\n  names_sep = \"_\",                        # how to split cols into new columns\n  # names_pattern = \"(.*)_(.*)\", # alternative to names_sep\n  values_to = \"value\", # new column name for values\n  \n  # make sure new columns are the right data type\n  names_transform = list(year = as.integer),\n  values_transform = list(value = as.character) \n)"},{"path":"tidy.html","id":"one-variable-per-column","chapter":"7 Data Tidying","heading":"7.4.2 One variable per column","text":"Now value column contains data two different variables. need make table wider, wide . want keep year column make new columns called itemsprice totalprice relevant customer's value variable year.\nTable 7.7: Data converted long intermediate shape.\n","code":"\nwider_data <- pivot_wider(\n  data = longer_data,\n  id_cols = c(customer_id, year),\n  names_from = category,\n  values_from = value\n)"},{"path":"tidy.html","id":"one-value-per-cell","chapter":"7 Data Tidying","heading":"7.4.3 One value per cell","text":"cells itemsprice column actually contain two different values. need split two columns variables items, price_per_item. can split column parts function tidyr::separate().\nTable 7.8: itemsprice column split items price_per_item using separate()\nnew columns different data type old column, set convert = TRUE automatically fix . common columns contain multiple numbers, separated commas semicolons. character types separated, numeric types can mathematical operations like sum .","code":"\nsplit_data <- separate(\n  data = wider_data, \n  col = itemsprice, # the column to split\n  into = c(\"items\", \"price_per_item\"), # the new columns to create\n  sep = \" \", # how to split col\n  remove = TRUE, # whether to remove to old col\n  convert = TRUE # whether to fix the data type of the new columns\n)"},{"path":"tidy.html","id":"altering-data","chapter":"7 Data Tidying","heading":"7.4.4 Altering data","text":"column price_per_item still character column parentheses. ways fix . can use dplyr::mutate() function change column add new one., use stringr::str_replace_all() replace \"(\" \")\" \"\".\nTable 7.9: Mutating data remove parentheses price_per_item.\n","code":"\nmutated_data <- mutate(\n  .data = split_data,\n  price_per_item = stringr::str_replace_all(\n    string = price_per_item, \n    pattern = \"[()]\", \n    replacement = \"\"\n  )\n)"},{"path":"tidy.html","id":"fixing-data-types","chapter":"7 Data Tidying","heading":"7.4.5 Fixing data types","text":"price_per_item totalprice columns still characters, things like calculate sum totalprice.data clean tidy, can fix column data types one step using readr::type_convert(). good practice finished cleaning data set. automatic type detection work expected, usually means still non-numeric characters column supposed numbers. can also manually set column types way readr::read_csv() (see Chapter 4).","code":"\n# check the data types\nglimpse(mutated_data)## Rows: 15\n## Columns: 5\n## $ customer_id    <int> 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5\n## $ year           <int> 2018, 2019, 2020, 2018, 2019, 2020, 2018, 2019, 2020, 2~\n## $ items          <int> 2, 8, 10, 1, 6, 1, 4, 5, 5, 10, 1, 3, 3, 9, 8\n## $ price_per_item <chr> \"3.91\", \"4.72\", \"5.59\", \"3.91\", \"4.72\", \"5.59\", \"3.91\",~\n## $ totalprice     <chr> \"7.82\", \"37.76\", \"55.9\", \"3.91\", \"28.32\", \"5.59\", \"15.6~\ntidy_data <- type_convert(\n  df = mutated_data,\n  trim_ws = TRUE # removes spaces before and after values\n)\n\n# check the data types\nglimpse(tidy_data)## Rows: 15\n## Columns: 5\n## $ customer_id    <int> 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5\n## $ year           <int> 2018, 2019, 2020, 2018, 2019, 2020, 2018, 2019, 2020, 2~\n## $ items          <int> 2, 8, 10, 1, 6, 1, 4, 5, 5, 10, 1, 3, 3, 9, 8\n## $ price_per_item <dbl> 3.91, 4.72, 5.59, 3.91, 4.72, 5.59, 3.91, 4.72, 5.59, 3~\n## $ totalprice     <dbl> 7.82, 37.76, 55.90, 3.91, 28.32, 5.59, 15.64, 23.60, 27~"},{"path":"tidy.html","id":"pipes","chapter":"7 Data Tidying","heading":"7.5 Pipes","text":"Pipes way order code readable format.pipe takes result previous function sends next function first argument. example, instead first calculating sum using paste() function......instead can pipe result sum(1:5) next function. Remember remove my_sum paste() function, since piped .result previous function first argument next function, can use . \"pronoun\" represent .seem useful simple example , method useful cleaning reshaping data tables","code":"\nmy_sum <- sum(1:5)\npaste(my_sum, \"is the sum of 1:5.\")## [1] \"15 is the sum of 1:5.\"\nsum(1:5) %>%\n  paste(\"is the sum of 1:5.\")## [1] \"15 is the sum of 1:5.\"\nsum(1:5) %>%\n  paste(\"The sum of 1:5 is\", .)## [1] \"The sum of 1:5 is 15\""},{"path":"tidy.html","id":"multi-step-pipes","chapter":"7 Data Tidying","heading":"7.5.1 Multi-step pipes","text":"can always create new object every step use object next step, like Section 7.4. pretty clear, created several unnecessary data objects environment. can get confusing longer scripts.can give object name keep replacing old data object new one step. keep environment clean, makes debugging code much harder.One way avoid extra objects nest functions, literally replacing data object code generated previous step. can fine short chains.gets extremely confusing long chains:pipe lets \"pipe\" result function next function, allowing put code logical order without creating many extra objects. default, result previous function becomes first argument next function. tidyverse functions take data table first argument, pipe together easily.example, instead making table called untidy_data reading csv file, making new table called totalprice_data selecting customer_id totalprice_{year} columns untidy_data...... can just make one table called totalprice_data reading csv file piping resulting table select() function.Notice longer need specify .data argument. Add back see happens. common error converting code using separate variables using pipeline, learn identify quickly.longer series steps like one , using pipes can eliminate many intermediate objects. also makes easier add intermediate step process without think new table name edit table input next step.can read code like :Read data (read_csv())\nfile: file r path(\"data/untidy_data.csv\")`; \nfile: file r path(\"data/untidy_data.csv\")`; thenReshape data longer (pivot_longer())\ncols: take columns itemsprice_2018 totalprice_2020,\nnames_to: create new columns called \"category\" \"year\" cols header names,\nnames_sep: separate column names using \"_\"\nvalues_to: create new column called \"value\" cols values,\nnames_transform = transform year column integers,\nvalues_transform = transform value column characters; \ncols: take columns itemsprice_2018 totalprice_2020,names_to: create new columns called \"category\" \"year\" cols header names,names_sep: separate column names using \"_\"values_to: create new column called \"value\" cols values,names_transform = transform year column integers,values_transform = transform value column characters; thenReshape data wider (pivot_wider())\nid_cols: row observation unique customer_id year,\nnames_from: get new column names values category column,\nvalues_from: get new column values values value column; \nid_cols: row observation unique customer_id year,names_from: get new column names values category column,values_from: get new column values values value column; thenSplit multiple values column (separate())\ncol: separate column itemsprice,\n: new columns called \"items\" \"price_per_item\",\nsep: separate values \" \",\nremove: remove old column,\nconvert: convert new columns right data types; \ncol: separate column itemsprice,: new columns called \"items\" \"price_per_item\",sep: separate values \" \",remove: remove old column,convert: convert new columns right data types; thenChange column (mutate())\nprice_per_item: replace existing column price_per_item result search replace:\nstring: strings modify come price_per_item columns,\npattern: search left right parentheses,\nreplacement: replace \"\"; ,\n\nprice_per_item: replace existing column price_per_item result search replace:\nstring: strings modify come price_per_item columns,\npattern: search left right parentheses,\nreplacement: replace \"\"; ,\nstring: strings modify come price_per_item columns,pattern: search left right parentheses,replacement: replace \"\"; ,Fix data types (type_convert())\ntrim_ws: remove spaces, tabs, line breaks start end value\ntrim_ws: remove spaces, tabs, line breaks start end valueDon't feel like always need get data wrangling code single pipeline. make intermediate objects whenever need break code getting complicated need debug something.can debug pipe highlighting beginning just pipe want stop . Try highlighting data <- end separate function typing cmd-return. data look like now?","code":"\nuntidy_data <- read_csv(file = \"data/untidy_data.csv\")\n\nlonger_data <- pivot_longer(\n  data = untidy_data,\n  cols = itemsprice_2018:totalprice_2020,\n  names_to = c(\"category\", \"year\"),\n  names_sep = \"_\", \n  values_to = \"value\", \n  names_transform = list(year = as.integer),\n  values_transform = list(value = as.character) \n) \n\nwider_data <- pivot_wider(\n  data = longer_data,\n  id_cols = c(customer_id, year),\n  names_from = category,\n  values_from = value\n)\n\nsplit_data <- separate(\n  data = wider_data,\n  col = itemsprice,\n  into = c(\"items\", \"price_per_item\"),\n  sep = \" \", \n  remove = TRUE, \n  convert = TRUE\n) \n\nmutated_data <- mutate(\n  .data = split_data,\n  price_per_item = stringr::str_replace_all(\n    string = price_per_item, \n    pattern = \"[()]\", \n    replacement = \"\"\n  )\n) \n\ntidy_data <- type_convert(\n  df = mutated_data,\n  trim_ws = TRUE\n)\npaste(\"The sum of 1:5 is\", sum(1:5))## [1] \"The sum of 1:5 is 15\"\n# do not ever do this!!!!!!\n\ntidy_data <- type_convert(\n  df = mutate(\n    .data = separate(\n      data = pivot_wider(\n        data = pivot_longer(\n          data = read_csv(file = \"data/untidy_data.csv\"),\n          cols = itemsprice_2018:totalprice_2020,\n          names_to = c(\"category\", \"year\"),\n          names_sep = \"_\",\n          values_to = \"value\",\n          names_transform = list(year = as.integer),\n          values_transform = list(value = as.character)\n        ) ,\n        id_cols = c(customer_id, year),\n        names_from = category,\n        values_from = value\n      ),\n      col = itemsprice,\n      into = c(\"items\", \"price_per_item\"),\n      sep = \" \",\n      remove = TRUE,\n      convert = TRUE\n    ) ,\n    price_per_item = stringr::str_replace_all(\n      string = price_per_item,\n      pattern = \"[()]\",\n      replacement = \"\"\n    )\n  ),\n  trim_ws = TRUE\n)\nuntidy_data <- read_csv(file = \"data/untidy_data.csv\")\n\ntotalprice_data <- select(\n  .data = untidy_data,\n  customer_id, \n  starts_with(\"totalprice\") # selects all columns that start with a string\n)\ntotalprice_data <- read_csv(file = \"data/untidy_data.csv\") %>%\n  select(\n    customer_id, \n    starts_with(\"totalprice\") \n  )\ntidy_data <- read_csv(file = \"data/untidy_data.csv\") %>%\n  pivot_longer(\n    cols = itemsprice_2018:totalprice_2020,\n    names_to = c(\"category\", \"year\"),\n    names_sep = \"_\", \n    values_to = \"value\", \n    names_transform = list(year = as.integer),\n    values_transform = list(value = as.character) \n  ) %>%\n  pivot_wider(\n    id_cols = c(customer_id, year),\n    names_from = category,\n    values_from = value\n  ) %>%\n  separate(\n    col = itemsprice,\n    into = c(\"items\", \"price_per_item\"),\n    sep = \" \", \n    remove = TRUE, \n    convert = TRUE\n  ) %>%\n  mutate(\n    price_per_item = stringr::str_replace_all(\n      string = price_per_item, \n      pattern = \"[()]\", \n      replacement = \"\"\n    )\n  ) %>%\n  type_convert(\n    trim_ws = TRUE\n  )"},{"path":"tidy.html","id":"glossary-tidy","chapter":"7 Data Tidying","heading":"7.6 Glossary","text":"","code":""},{"path":"tidy.html","id":"resources-tidy","chapter":"7 Data Tidying","heading":"7.7 Further resources","text":"Data tidying cheat sheetTidy DataChapter 12: Tidy Data R Data ScienceChapter 18: Pipes R Data Science","code":""},{"path":"wrangle.html","id":"wrangle","chapter":"8 Data Wrangling","heading":"8 Data Wrangling","text":"","code":""},{"path":"wrangle.html","id":"ilo-wrangle","chapter":"8 Data Wrangling","heading":"8.1 Intended Learning Outcomes","text":"able select filter data relevanceBe able create new columns edit existing ones","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(lubridate)   # for handling dates and times"},{"path":"wrangle.html","id":"wrangling-functions","chapter":"8 Data Wrangling","heading":"8.2 Wrangling functions","text":"data wrangling involves reshaping functions learned Chapter 7 six functions: select, filter, arrange, mutate, summarise, group_by. cover first four chapter, last two Chapter 2.6.5.use small example table sales expenses two years four regions two products.","code":"\nbudget <- read_csv(\"data/budget.csv\", show_col_types = FALSE)"},{"path":"wrangle.html","id":"select","chapter":"8 Data Wrangling","heading":"8.2.1 Select","text":"Select columns name number.can select column individually, separated commas (e.g., region, sales_2019). can also select columns two columns separating colon (e.g., sales_2019:expenses_2020).can select columns number, useful column names long complicated.can use minus symbol unselect columns, leaving columns. want exclude span columns, put parentheses around span first, e.g., -(sales_2019:expenses_2020), -sales_2019:expenses_2020.can select columns based criteria column names.Use width set number digits leading\nzeros. example, num_range('var_', 8:10, width=2) selects columns var_08, var_09, var_10.resulting columns four examples?budget %>% select(starts_with(\"sales\"))\nsales_2019, sales_2020, expenses_2019, expenses_2020expenses_2019, expenses_2020sales_2020, expenses_2020sales_2019, sales_2020budget %>% select(ends_with(\"2020\"))\nsales_2019, sales_2020sales_2020, expenses_2020expenses_2019, expenses_2020sales_2019, sales_2020, expenses_2019, expenses_2020budget %>% select(contains(\"_\"))\nexpenses_2019, expenses_2020sales_2020, expenses_2020sales_2019, sales_2020sales_2019, sales_2020, expenses_2019, expenses_2020budget %>% select(num_range(\"expenses_\", 2019:2020))\nexpenses_2019, expenses_2020sales_2019, sales_2020sales_2020, expenses_2020sales_2019, sales_2020, expenses_2019, expenses_2020","code":"\nbudget2020 <- budget %>% select(region, sales_2020, expenses_2020)\nnames(budget2020)## [1] \"region\"        \"sales_2020\"    \"expenses_2020\"\nregions <- budget %>% select(1, 3:6)\nnames(regions)## [1] \"region\"        \"sales_2019\"    \"sales_2020\"    \"expenses_2019\"\n## [5] \"expenses_2020\"\nsales <- budget %>% select(-(expenses_2019:expenses_2020))\nnames(sales)## [1] \"region\"     \"product\"    \"sales_2019\" \"sales_2020\""},{"path":"wrangle.html","id":"filter","chapter":"8 Data Wrangling","heading":"8.2.2 Filter","text":"Select rows matching column criteria.Remember use == = check two things equivalent. single = assigns righthand value lefthand variable (usually) evaluates TRUE.can select multiple criteria separating commas.can use symbols &, |, ! mean \"\", \"\", \"\". can also use operators make equations. equation checked row, result FALSE, row removed.match operator (%%) useful testing column value list.","code":"\n# select all rows from the North region\nbudget %>% filter(region == \"North\")\nbudget %>% filter(\n  region == \"North\",\n  product == \"widgets\"\n)\n# regions and products with profit in both 2019 and 2020\nprofit_both <- budget %>% \n  filter(\n    sales_2019 > expenses_2019 &\n    sales_2020 > expenses_2020\n  )\n\n# regions and products with profit in 2019 or 2020\nprofit_either <- budget %>% \n  filter(\n    sales_2019 > expenses_2019 |\n    sales_2020 > expenses_2020\n  )\n\n# everything but the North\nnot_north <- budget %>%\n  filter(region != \"North\")\n\n# 2020 profit greater than 1000\nprofit_1000 <- budget %>%\n  filter(sales_2020 - expenses_2020 > 1000)\nbudget %>%\n  filter(region %in% c(\"North\", \"South\") &\n           product == \"widgets\")"},{"path":"wrangle.html","id":"arrange","chapter":"8 Data Wrangling","heading":"8.2.3 Arrange","text":"Sort dataset using arrange(). find needing sort data R much less Excel, since need rows next order , example, calculate group means. arrange() can useful preparing data display tables. Reverse order using desc().want sort categories specific order, turn column factor set levels desired order.","code":"\nbudget %>%\n  arrange(product, desc(region))\nbudget %>%\n  mutate(region = factor(region, levels = c(\"North\", \"South\", \"East\", \"West\"))) %>%\n  filter(product == \"gadgets\") %>%\n  arrange(region)"},{"path":"wrangle.html","id":"mutate","chapter":"8 Data Wrangling","heading":"8.2.4 Mutate","text":"Add new columns change existing ones. Refer columns names (unquoted). can add one column mutate function, just separate columns comma. make new column, can use column definitions e.g., profit ).can overwrite column giving new column name old column (see region) . Make sure mean trying use old column value redefine .Load data population Scottish counties.Transform population value nearest thousands (e.g., 3433 \"3K\"), order least populous, put columns order population (K) county, show counties populations greater 200K.several different ways make table . functions different order . See can move filter() arrange() functions.","code":"\nbudget2 <- budget %>%\n  mutate(\n    sales = sales_2019 + sales_2020,\n    expenses = expenses_2019 + expenses_2020,\n    profit = sales - expenses,\n    region = paste(region, \"Office\")\n  )\nscotpop <- read_csv(\"data/scottish_population.csv\",\n                    show_col_types = FALSE)\nscotpop %>%\n  arrange(desc(population)) %>%\n  filter(population > 200000) %>%\n  mutate(kpop = round(population/1000) %>% paste0(\"K\")) %>%\n  select(population = kpop, \n         county = name)"},{"path":"wrangle.html","id":"together-wrangle","chapter":"8 Data Wrangling","heading":"8.3 Putting it together","text":"Load demo data first used Chapter 4. Use glimpse() another method get familiar data set.Double check SALES column equal QUANTITYORDERED column times PRICEEACH. can select just columns need rename selecting make code readable.Make table rows value total equal SALES.check errors table, see 1697 original 2823 rows \"errors\", even though many values SALES sales_check columns look identical. can fix rounding value total 2 decimal places.due way values decimal places represented computer. use base 10 count, represent numbers repeating decimal, like 1/3 .0333 repeating, computer uses binary count, represent different numbers using repeats. can lead small differences divide multiply numbers.still 1304 errors! Lets look 10 smallest. can calculating difference, arranging smallest largest, filtering first 10 rows.Alternatively, can use slice function.plot data, looks like errors one direction.look data separately products price exactly 100 versus products.looks like problem dataset: PRICEEACH column go 100. fix dividing total sale price quantity ordered.Now can re-run code find errors.5 instances quantity ordered divide total price way produces prices round nearest cent. might require investigation.","code":"\n# from https://www.kaggle.com/kyanyoga/sample-sales-data\nsales <- read_csv(\"data/sales_data_sample.csv\",\n                  show_col_types = FALSE)\nsales_check <- sales %>%\n  select(SALES, n = QUANTITYORDERED, price = PRICEEACH) %>%\n  mutate(total = n * price)\nerrors <- sales_check %>%\n  filter(SALES != total)\n\nhead(errors)\noptions(scipen = 20) # avoids scientific notation\nx = (1/49 * 49)\nx # prints as 1\n1-x # but is actually very slightly smaller## [1] 1\n## [1] 0.0000000000000001110223\nerrors <- sales_check %>%\n  filter(SALES != round(total, 2))\nerrors %>%\n  mutate(diff = SALES - total) %>%\n  arrange(diff) %>%\n  filter(row_number() <= 10)\nerrors %>%\n  mutate(diff = SALES - total) %>%\n  slice_min(order_by = diff, n = 10)\nggplot(errors, aes(x = SALES, y = total)) + \n  geom_point(alpha = 0.5) +\n  geom_abline(slope = 1, intercept = 0) +\n  coord_cartesian(xlim = c(0, 15000), ylim = c(0, 8000))\nsales_check %>%\n  mutate(price100 = price == 100) %>%\n  ggplot(aes(x = SALES, y = total, color = price100)) + \n  geom_point(alpha = 0.5) +\n  geom_abline(slope = 1, intercept = 0) +\n  coord_cartesian(xlim = c(0, 15000), ylim = c(0, 8000))\nfixed_sales <- sales %>%\n  mutate(PRICEEACH = round(SALES / QUANTITYORDERED, 2))\nsales_check <- fixed_sales %>%\n  select(SALES, n = QUANTITYORDERED, price = PRICEEACH) %>%\n  mutate(total = n * price)\n\nerrors <- sales_check %>%\n  filter(SALES != round(total, 2))\n\nhead(errors)"},{"path":"wrangle.html","id":"glossary-wrangle","chapter":"8 Data Wrangling","heading":"8.4 Glossary","text":"","code":""},{"path":"wrangle.html","id":"resources-wrangle","chapter":"8 Data Wrangling","heading":"8.5 Further resources","text":"Data transformation cheat sheetChapter 5: Data Transformation R Data Science","code":""},{"path":"custom.html","id":"custom","chapter":"9 Customising Visualisations","heading":"9 Customising Visualisations","text":"","code":""},{"path":"custom.html","id":"ilo-custom","chapter":"9 Customising Visualisations","heading":"9.1 Intended Learning Outcomes","text":"Customise plots consistent styleCreate high quality plots like BBC, NYT, 538","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(ggwordcloud) # for word clouds\nlibrary(tidytext)    # for manipulating text for word clouds\nlibrary(patchwork)   # for combining plots\nlibrary(plotly)      # for interactive plots\n# devtools::install_github(\"hrbrmstr/waffle\")\nlibrary(waffle)      # for waffle plots\nlibrary(treemap)     # for treemap plots\nlibrary(ggthemes)    # for themes\nlibrary(sf)          # for mapping geoms\nlibrary(rnaturalearth) # for map data\nlibrary(rnaturalearthdata) # extra mapping data\n\ntheme_set(theme_light())"},{"path":"custom.html","id":"defaults","chapter":"9 Customising Visualisations","heading":"9.2 Defaults","text":"code creates two familiar plots Chapter 3, using default (light) theme palettes\nFigure 9.1: Default plot styles.\n","code":"\nsurvey_data <- read_csv(file = \"data/survey_data.csv\")\n\nbar <- ggplot(data = survey_data, \n              mapping = aes(x = issue_category,\n                            fill = issue_category)) +\n  geom_bar(show.legend = FALSE) +\n  labs(x = \"Issue Category\", \n       y = \"Count\",\n       title = \"Calls by Issue Category\")\n\npoint <- lm_plot <- ggplot(data = survey_data, \n                           mapping = aes(x = wait_time, \n                                         y = call_time,\n                                         color = issue_category)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = lm, formula = y~x) +\n  labs(x = \"Wait Time\",\n       y = \"Call Time\",\n       color = \"Issue Category\",\n       title = \"Wait Time by Call Time\")\nbar + point"},{"path":"custom.html","id":"r-markdown-options","chapter":"9 Customising Visualisations","heading":"9.3 R Markdown Options","text":"","code":""},{"path":"custom.html","id":"image-size","chapter":"9 Customising Visualisations","heading":"9.3.1 Image Size","text":"can set image size chunk headers.\nFigure 9.2: Image size altered fig.width = 10, fig.height = 5\nusing MacBook Retina display, may notice figures see RStudio editing interactively different see render file. annoying known bug RStudio. fixed, can set fig.width fig.height value/2 checking plot, set back knit.","code":"```{r, fig.width = 10, fig.height = 5}\nbar + point\n```"},{"path":"custom.html","id":"output","chapter":"9 Customising Visualisations","heading":"9.3.2 Output","text":"option .width controls much space figure takes relative width output. default value \"100%\". can also set alignment fig.align.\nFigure 9.3: Output display altered .width = \"75%\"\n","code":"```{r, out.width = \"75%\", fig.align = \"center\"}\nbar\n```"},{"path":"custom.html","id":"captions","chapter":"9 Customising Visualisations","heading":"9.3.3 Captions","text":"Figures usually get caption fig.cap alt text describe figure people impaired vision using fig.alt. can use pattern spread chunk options multiple lines way makes easier read.\nFigure 9.4: wait time increases, call time.\n","code":"```{r}\n#| reference-name, \n#| echo = FALSE, \n#| fig.width = 8, fig.height = 5, out.width = \"100%\", \n#| fig.cap = \"As wait time increases, so does call time.\", \n#| fig.alt = \"Wait time on the x-axis and Call time on the y-axis. Shows scatterplots and regression lines for each of 4 issue categories: other, returns, sales, and tech. All 4 wait times increase with call time. At 50 seconds wait time, call time is about 25 seconds. At 250 seconds wait time, call time is about 60 seconds.\"\n\npoint\n```"},{"path":"custom.html","id":"setup-chunk","chapter":"9 Customising Visualisations","heading":"9.3.4 Setup Chunk","text":"can also set default values setup chunk like .set default figure width height setup chunk, images make interactively setting script right aspect ratio, able see .width, fig.align, fig.cap knit file.","code":"\nknitr::opts_chunk$set(\n  fig.width = 10,\n  fig.height = 5,\n  out.width = \"75%\",\n  fig.align = \"center\"\n)"},{"path":"custom.html","id":"themes-and-colours","chapter":"9 Customising Visualisations","heading":"9.4 Themes and Colours","text":"Use scale functions customise fill colour. Appendix F extensive detail .\nFigure 9.5: Plots classic theme Dark2 palette.\ncan download extra themes packages like ggthemes.\nFigure 9.6: Plots economist styles ggthemes.\n","code":"\nbar2 <- bar + \n  theme_classic() + \n  scale_fill_brewer(palette = \"Dark2\")\n\npoint2 <- point + \n  theme_classic() + \n  scale_color_brewer(palette = \"Dark2\")\n\nbar2 + point2\nbar_econ <- bar + \n  theme_economist() +\n  scale_fill_economist()\n\npoint_econ <- point + \n  theme_economist() +\n  scale_color_economist() +\n  guides(color = \"none\")\n\nbar_econ + point_econ"},{"path":"custom.html","id":"other-plots","chapter":"9 Customising Visualisations","heading":"9.5 Other Plots","text":"","code":""},{"path":"custom.html","id":"interactive-plots","chapter":"9 Customising Visualisations","heading":"9.5.1 Interactive Plots","text":"Use plotly package make interactive graphs. Assign ggplot variable use function ggplotly(). Interactive plots work HTML files, PDFs Word files.\nFigure 9.7: Interactive graph using plotly\nHover data points click legend items.","code":"\nggplotly(point_econ)"},{"path":"custom.html","id":"waffle-plots","chapter":"9 Customising Visualisations","heading":"9.5.2 Waffle Plots","text":"Chapter 3, mentioned pie charts poor way visualise proportions refused even show make one. Waffle plots delicious alternative.Use waffle hrbrmstr GitHub, one CRAN.\nFigure 9.8: Waffle plot.\ncan also make boxes icons using geom_pictogram(). Use fa_list() browse available icons.\nFigure 9.9: Waffle plot pictograms.\n","code":"\ndevtools::install_github(\"hrbrmstr/waffle\")\nsurvey_data %>% \n  count(issue_category) %>%\n  ggplot(aes(fill = issue_category, values = n)) +\n  geom_waffle(\n    n_rows = 23,\n    size = 0.33,       # line size\n    colour = \"white\",  # line colour\n    flip = FALSE,      # bottom-top or left-right\n    radius = grid::unit(0.1, \"npc\") # set to 0.5 for circles\n  ) +\n  theme_enhance_waffle() + # gets rid of axes\n  scale_fill_colorblind(name = \"Issue Category\")\nsurvey_data %>% \n  count(issue_category) %>%\n  ggplot(aes(label = issue_category, \n             values = n, \n             color = issue_category)) +\n  geom_pictogram(n_rows = 23,\n                 size = 3) +\n  scale_label_pictogram(\n    name = NULL,\n    values = c(\"asterisk\", \n               \"recycle\", \n               \"pound-sign\", \n               \"calculator\")\n  ) +\n  scale_color_manual(\n    name = NULL,\n    values = c(\"darkorchid3\", \n               \"dodgerblue2\", \n               \"springgreen4\", \n               \"darkred\")\n  ) +\n  theme_enhance_waffle() # gets rid of axes## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## font family not found in Windows font database"},{"path":"custom.html","id":"lollipop-plots","chapter":"9 Customising Visualisations","heading":"9.5.3 Lollipop Plots","text":"Lollipop plots another sweet alternative pie charts representing relative counts. just combination geom_linerange() geom_point(). Use coord_flip() make horizontal.\nFigure 9.10: Lollipop plot.\nexample uses geom_text() put labels plot removes default axis labels scale_x_discrete(labels = NULL) (remember labels x-axis coordinates flipped).","code":"\nsurvey_data %>% \n  count(issue_category) %>%\n  ggplot(aes(x = issue_category)) +\n  geom_linerange(mapping = aes(ymin = 0, ymax = n),\n                 size = 2) +\n  geom_point(mapping = aes(y = n, colour = issue_category),\n             shape = 21,\n             size = 8,\n             stroke = 4,\n             fill = \"white\",\n             show.legend = FALSE) +\n  geom_text(aes(label = issue_category), \n            y = 1, hjust = 0, size = 6, \n            position = position_nudge(x = 0.2)) +\n  scale_x_discrete(labels = NULL) +\n  scale_color_colorblind() +\n  labs(x = \"\", y = \"\") +\n  coord_flip(ylim = c(0, 400))"},{"path":"custom.html","id":"treemap","chapter":"9 Customising Visualisations","heading":"9.5.4 Treemap","text":"Treemap plots another way visualise proportions. Like waffle plots, need count data category first. can use brewer palette fill.\nFigure 9.11: Treemap plot.\n","code":"\nsurvey_data %>% \n  count(issue_category) %>%\n  treemap(\n    index=\"issue_category\",\n    vSize=\"n\",\n    title = \"\",\n    palette = \"BuPu\",\n    inflate.labels = TRUE\n  )"},{"path":"custom.html","id":"word-clouds","chapter":"9 Customising Visualisations","heading":"9.5.5 Word Clouds","text":"Word clouds interesting way summarise qualitative data. First, load data Amazon Alexa reviews.Next, make table number times individual word appears per rating function tidytext::unnest_tokens() splitting words input column individual words new output column.get rid common \"stop words\" integers filtering words omitted list.get top 25 words, group rating use dplyr::slice_max(), ordered column n.Now make two word clouds paste together (word clouds play well facets). Filter words table get one rating, set ggplot aesthetics label, colour, size. label come word column, colour different word size word proportional n, number times word appeared.visualisation geom ggwordcloud::geom_text_wordcloud_area(). Control big cloud ggwordcloud::scale_size_area() (usually takes trial--error). add title minimal theme get rid axes grid lines.Make another plot different rating paste together +.\nFigure 9.12: Word cloud.\n","code":"\n# https://www.kaggle.com/sid321axn/amazon-alexa-reviews\n# extracted from Amazon by Manu Siddhartha & Anurag Bhatt\nalexa <- rio::import(\"data/amazon_alexa.csv\")\nomitted <- c(stop_words$word, 0:9)\n\nwords <- alexa %>%\n  unnest_tokens(output = \"word\", input = \"verified_reviews\") %>%\n  count(word, rating) %>%\n  filter(!word %in% omitted) %>%\n  group_by(rating) %>%\n  slice_max(order_by = n, n = 25, with_ties = FALSE)\nrating1 <- filter(words, rating == 1) %>%\n  ggplot(aes(label = word, colour = word, size = n)) +\n  geom_text_wordcloud_area() +\n  scale_size_area(max_size = 10) +\n  ggtitle(\"Rating = 1\") +\n  theme_minimal(base_size = 14)\nrating5 <- filter(words, rating == 5) %>%\n  ggplot(aes(label = word, colour = word, size = n)) +\n  geom_text_wordcloud_area() +\n  scale_size_area(max_size = 10) +\n  ggtitle(\"Rating = 5\") +\n  theme_minimal(base_size = 14)\n\nrating1 + rating5"},{"path":"custom.html","id":"maps","chapter":"9 Customising Visualisations","heading":"9.5.6 Maps","text":"Working maps can tricky. sf package provides functions work ggplot2, geom_sf(). rnaturalearth package (associated data packages may prompted download) provide high-quality mapping coordinates.can combine multiple countries using bind_rows() visualise different colours country.\nFigure 9.13: Map coloured country.\ncan join data map table visualise data map using colours labels.typo data rnaturalearth, need change \"North Ayshire\" \"North Ayrshire\" join population data.Set fill population geom_sf(). Customise colours scale_fill_viridis_c(), setting breaks every 100K (1e5 scientific notation) making scale span 0 600K. Set labels \"000 K\" \"600 K\" make legend easier read. Finally, move position legend sea.\nFigure 9.14: Map coloured population.\n","code":"\n# get the world map coordinates\nworld_sf <- ne_countries(returnclass = \"sf\", scale = \"medium\")\n\n# plot them on a light blue background\nggplot() + \n  geom_sf(data = world_sf, size = 0.2) +\n  theme(panel.background = element_rect(fill = \"lightskyblue2\"))\n# get and bind country data\nuk_sf <- ne_states(country = \"united kingdom\", returnclass = \"sf\")\nireland_sf <- ne_states(country = \"ireland\", returnclass = \"sf\")\nislands <- bind_rows(uk_sf, ireland_sf) %>%\n  filter(!is.na(geonunit))\n\n# set colours\ncountry_colours <- c(\"Scotland\" = \"#0962BA\",\n                     \"Wales\" = \"#00AC48\",\n                     \"England\" = \"#FF0000\",\n                     \"Northern Ireland\" = \"#FFCD2C\",\n                     \"Ireland\" = \"#F77613\")\n\nggplot() + \n  geom_sf(data = islands,\n          mapping = aes(fill = geonunit),\n          colour = NA,\n          alpha = 0.75) +\n  coord_sf(crs = sf::st_crs(4326),\n           xlim = c(-10.7, 2.1), \n           ylim = c(49.7, 61)) +\n  scale_fill_manual(name = \"Country\", \n                    values = country_colours)\n# load map data\nscotland_sf <- ne_states(geounit = \"Scotland\", \n                         returnclass = \"sf\")\n\n# load population data from\n# https://www.indexmundi.com/facts/united-kingdom/quick-facts/scotland/population\nscotpop <- read_csv(\"data/scottish_population.csv\", \n                    show_col_types = FALSE)\n\n# join data and fix typo in the map\nscotmap_pop <- scotland_sf %>%\n  mutate(name = ifelse(name == \"North Ayshire\", \n                       yes = \"North Ayrshire\", \n                       no = name)) %>%\n  left_join(scotpop, by = \"name\") %>%\n  select(name, population, geometry)\n# plot\nggplot() + \n  geom_sf(data = scotmap_pop,\n          mapping = aes(fill = population),\n          color = \"white\", \n          size = .1) +\n  coord_sf(xlim = c(-8, 0), ylim = c(54, 61)) +\n  scale_fill_viridis_c(name = \"Population\",\n                       breaks = seq(0, 6e5, 1e5), \n                       limits = c(0, 6e5),\n                       labels = paste0(0:6, \"00 K\")) +\n  theme(legend.position = c(0.16, 0.84))"},{"path":"custom.html","id":"resources-custom","chapter":"9 Customising Visualisations","heading":"9.6 Further Resources","text":"many options data visualisation R time cover . following resources get started journey informative, intuitive visualisations.R Graph Gallery (really useful)Look Data Data Vizualization Social ScienceGraphs Cookbook RTop 50 ggplot2 VisualizationsR Graphics Cookbook Winston Changggplot extensionsplotly creating interactive graphsDrawing Beautiful Maps Programmatically","code":""},{"path":"present.html","id":"present","chapter":"10 Advanced Reports","heading":"10 Advanced Reports","text":"","code":""},{"path":"present.html","id":"ilo-present","chapter":"10 Advanced Reports","heading":"10.1 Intended Learning Outcomes","text":"Structure data report, presentation, dashboard formatsInclude linked figures, tables, referencesUntil now, used default html_document output format R markdown report, several output formats can try.","code":"\nlibrary(tidyverse)     # data wrangling functions\nlibrary(bookdown)      # for chaptered reports## Warning: package 'bookdown' was built under R version 4.1.2\nlibrary(flexdashboard) # for dashboards\nlibrary(DT)            # for interactive tables"},{"path":"present.html","id":"reports-1","chapter":"10 Advanced Reports","heading":"10.2 Reports","text":"","code":""},{"path":"present.html","id":"word-documents","chapter":"10 Advanced Reports","heading":"10.2.1 Word documents","text":"YAML header R Markdown document, can change output word_document create Microsoft Word file. Make sure carefully check file; images tables can often look odd page breaks can happen strange ways.can add page breaks adding \\newpage line blank lines .","code":""},{"path":"present.html","id":"pdf-documents","chapter":"10 Advanced Reports","heading":"10.2.2 PDF documents","text":"latex installation (see Appendix ), can create PDF setting output pdf_document.Note can sometimes cause problems kableExtra tables use elements like interactive plots. Additionally, figures tables likely shift position text top bottom pages.See PDF section R Markdown: Definitive Guide (Xie et al., 2018) advanced customisation options.","code":""},{"path":"present.html","id":"linked-documents","chapter":"10 Advanced Reports","heading":"10.2.3 Linked documents","text":"need create longer reports links sections, can use one bookdown formats. bookdown::html_document2 useful one adds figure table numbers automatically figures tables caption allows link reference.Refer figures tables like code . Figures start \"fig:\" tables \"tab:\", code chunk name created figure table.code chunk names can contain letters, numbers dashes. contain characters like spaces underscores, referencing work.code shows link text figures tables. can see HTML output .{r setup, include=FALSE} knitr::opts_chunk$set(echo = FALSE,                       message = FALSE,                       warning = FALSE) library(tidyverse) library(kableExtra) theme_set(theme_minimal())Diamond price depends many features, :cut (See Table ??)colour (See Table ??)clarity (See Figure ??)carats (See Figure ??){r -cut} diamonds %>%   group_by(cut) %>%   summarise(avg = mean(price),             .groups = \"drop\") %>%   kable(digits = 0,          col.names = c(\"Cut\", \"Average Price\"),         caption = \"Mean diamond price cut.\") %>%   kable_material(){r -colour} diamonds %>%   group_by(color) %>%   summarise(avg = mean(price),             .groups = \"drop\") %>%   kable(digits = 0,          col.names = c(\"Cut\", \"Average Price\"),         caption = \"Mean diamond price colour.\") %>%   kable_material(){r -clarity, fig.cap = \"Diamond price clarity\"} ggplot(diamonds, aes(x = clarity, y = price)) +   geom_boxplot(){r -carat, fig.cap = \"Diamond price carat\"} ggplot(diamonds, aes(x = carat, y = price)) +   stat_smooth()format defaults numbered sections, set number_sections: false YAML header want .","code":"See Table\\ \\@ref(tab:table-name) or Figure\\ \\@ref(fig:fig-name)."},{"path":"present.html","id":"tables","chapter":"10 Advanced Reports","heading":"10.3 Tables","text":"","code":""},{"path":"present.html","id":"cut","chapter":"10 Advanced Reports","heading":"10.3.1 Cut","text":"{r -cut} diamonds %>%   group_by(cut) %>%   summarise(avg = mean(price),             .groups = \"drop\") %>%   kable(digits = 0,          col.names = c(\"Cut\", \"Average Price\"),         caption = \"Mean diamond price cut.\") %>%   kable_material()","code":""},{"path":"present.html","id":"colour","chapter":"10 Advanced Reports","heading":"10.3.2 Colour","text":"{r -colour} diamonds %>%   group_by(color) %>%   summarise(avg = mean(price),             .groups = \"drop\") %>%   kable(digits = 0,          col.names = c(\"Cut\", \"Average Price\"),         caption = \"Mean diamond price colour.\") %>%   kable_material()","code":""},{"path":"present.html","id":"plots","chapter":"10 Advanced Reports","heading":"10.4 Plots","text":"","code":""},{"path":"present.html","id":"clarity","chapter":"10 Advanced Reports","heading":"10.4.1 Clarity","text":"{r -clarity, fig.cap = \"Diamond price clarity\"} ggplot(diamonds, aes(x = clarity, y = price)) +   geom_boxplot()","code":""},{"path":"present.html","id":"carats","chapter":"10 Advanced Reports","heading":"10.4.2 Carats","text":"{r -carat, fig.cap = \"Diamond price carat\"} ggplot(diamonds, aes(x = carat, y = price)) +   stat_smooth()","code":""},{"path":"present.html","id":"references","chapter":"10 Advanced Reports","heading":"10.4.3 References","text":"several ways -text references automatically generate bibliography R Markdown. Markdown files need link BibTex file (plain text file references specific format) contains references need cite. specify name file YAML header, like bibliography: filename.bib cite references text using symbol shortname, like [@tidyverse].","code":""},{"path":"present.html","id":"creating-a-bibtex-file","chapter":"10 Advanced Reports","heading":"10.4.3.1 Creating a BibTeX file","text":"reference software like EndNote, Zotero Mendeley exporting options can export BibTeX format. just need check shortnames resulting file.can also make BibTeX file add references manually. RStudio, go File > New File... > Text File save file \"bibliography.bib\".Next, add line bibliography: bibliography.bib YAML header.","code":""},{"path":"present.html","id":"adding-references","chapter":"10 Advanced Reports","heading":"10.4.3.2 Adding references","text":"can add references journal article following format:See complete guide BibTeX format instructions citing books, techincal reports, .can get reference R package using functions citation() toBibtex(). can paste bibtex entry bibliography.bib file. Make sure add short name (e.g., \"ggplot2\") first comma refer reference.Google Scholar entries BibTeX citation option. usually easiest way get relevant values, although add DOI . can keep suggested shortname change something makes sense .","code":"@article{shortname,\n  author = {Author One and Author Two and Author Three},\n  title = {Paper Title},\n  journal = {Journal Title},\n  volume = {vol},\n  number = {issue},\n  pages = {startpage--endpage},\n  year = {year},\n  doi = {doi}\n}\ncitation(package=\"ggplot2\") %>% toBibtex()## @Book{,\n##   author = {Hadley Wickham},\n##   title = {ggplot2: Elegant Graphics for Data Analysis},\n##   publisher = {Springer-Verlag New York},\n##   year = {2016},\n##   isbn = {978-3-319-24277-4},\n##   url = {https://ggplot2.tidyverse.org},\n## }"},{"path":"present.html","id":"citing-references","chapter":"10 Advanced Reports","heading":"10.4.3.3 Citing references","text":"can cite references text like :tutorial uses several R packages (Allaire et al., 2018; Wickham, 2017).Put minus front @ just want year:Franconeri colleagues (2021) review research-backed guidelines creating effective intuitive visualizations.want add item reference section without citing , add YAML header like :add items .bib file like :","code":"This tutorial uses several R packages [@tidyverse;@rmarkdown].Franconeri and colleagues [-@franconeri2021science] review research-backed guidelines for creating effective and intuitive visualizations.nocite: |\n  @ref1, @ref2, @ref3nocite: '@*'"},{"path":"present.html","id":"citation-styles","chapter":"10 Advanced Reports","heading":"10.4.3.4 Citation styles","text":"can search list style files (e.g., APA, MLA, Harvard) download file format bibliography. need add line csl: filename.csl YAML header.","code":""},{"path":"present.html","id":"reference-section","chapter":"10 Advanced Reports","heading":"10.4.3.5 Reference section","text":"default, reference section added end document. want change position (e.g., add figures tables references), include <div id=\"refs\"><\/div> want references.","code":""},{"path":"present.html","id":"interactive-tables","chapter":"10 Advanced Reports","heading":"10.4.4 Interactive tables","text":"One way make reports exciting use interactive tables. DT::datatable() function displays table extra interactive elements allow readers search reorder data, well controlling number rows shown . can especially helpful. works HTML output types. DT website extensive tutorials, cover basics .can customise display, changing column names, adding caption, moving location filter boxes, removing row names, applying classes change table appearance, applying advanced options.","code":"\nlibrary(DT)\n\nscotpop <- read_csv(\"data/scottish_population.csv\", \n                    show_col_types = FALSE)\n\ndatatable(data = scotpop)\n# https://datatables.net/reference/option/\nmy_options <- list(\n  pageLength = 5, # how many rows are displayed\n  lengthChange = FALSE, # whether pageLength can change\n  info = TRUE, # text with the total number of rows\n  paging = TRUE, # if FALSE, the whole table displays\n  ordering = FALSE, # whether you can reorder columns\n  searching = FALSE # whether you can search the table\n)\n\ndatatable(\n  data = scotpop,\n  colnames = c(\"County\", \"Population\"),\n  caption = \"The population of Scottish counties.\",\n  filter = \"none\", # \"none\", \"bottom\" or \"top\"\n  rownames = FALSE, # removes the number at the left\n  class = \"cell-border hover stripe\", # default is \"display\"\n  options = my_options\n)"},{"path":"present.html","id":"other-formats","chapter":"10 Advanced Reports","heading":"10.5 Other formats","text":"can create just reports R Markdown. can also create presentations, interactive dashboards, books, websites, web applications.","code":""},{"path":"present.html","id":"presentations","chapter":"10 Advanced Reports","heading":"10.5.1 Presentations","text":"can choose presentation template create new R Markdown document. use ioslides example, formats work similarly.\nFigure 10.1: Ioslides RMarkdown template.\nmain differences Rmd files working now output type YAML header ioslides_presentation instead html_document format requires specific title structure. slide starts level-2 header.template provides examples text, bullet point, code, plot slides. can knit template create HTML document presentation. often looks odd RStudio built-browser, click button open web browser. can use space bar arrow keys advance slides.code shows load packages display text, table, plot. can see HTML output .{r setup, include=FALSE} knitr::opts_chunk$set(echo = FALSE) library(tidyverse) library(kableExtra)following slides present data diamonds dataset ggplot2.Diamond price depends many features, :cutcolourclaritycarats{r pressure} ggplot(diamonds, aes(x = cut, y = price, color = color)) +   stat_summary(fun = mean, geom = \"point\") +   stat_summary(aes(x = .integer(cut)),                 fun = mean, geom = \"line\") +   scale_x_discrete(position = \"top\") +   scale_color_viridis_d(guide = guide_legend(reverse = TRUE)) +   theme_minimal()","code":"diamonds %>%\n  group_by(cut, color) %>%\n  summarise(avg_price = mean(price),\n            .groups = \"drop\") %>%\n  pivot_wider(names_from = cut, values_from = avg_price) %>%\n  kable(digits = 0, caption = \"Mean diamond price by cut and colour.\") %>%\n  kable_material()"},{"path":"present.html","id":"slide-with-markdown","chapter":"10 Advanced Reports","heading":"10.6 Slide with Markdown","text":"following slides present data diamonds dataset ggplot2.Diamond price depends many features, :cutcolourclaritycarats","code":""},{"path":"present.html","id":"slide-with-a-table","chapter":"10 Advanced Reports","heading":"10.7 Slide with a Table","text":"","code":"diamonds %>%\n  group_by(cut, color) %>%\n  summarise(avg_price = mean(price),\n            .groups = \"drop\") %>%\n  pivot_wider(names_from = cut, values_from = avg_price) %>%\n  kable(digits = 0, caption = \"Mean diamond price by cut and colour.\") %>%\n  kable_material()"},{"path":"present.html","id":"slide-with-a-plot","chapter":"10 Advanced Reports","heading":"10.8 Slide with a Plot","text":"{r pressure} ggplot(diamonds, aes(x = cut, y = price, color = color)) +   stat_summary(fun = mean, geom = \"point\") +   stat_summary(aes(x = .integer(cut)),                 fun = mean, geom = \"line\") +   scale_x_discrete(position = \"top\") +   scale_color_viridis_d(guide = guide_legend(reverse = TRUE)) +   theme_minimal()","code":""},{"path":"present.html","id":"dashboards","chapter":"10 Advanced Reports","heading":"10.8.1 Dashboards","text":"Dashboards way display text, tables, plots dynamic formatting. install flexdashboard, can choose flexdashboard template create new R Markdown document.\nFigure 10.2: Flexdashboard RMarkdown template.\ncode shows load packages, display two tables tabset, display two plots column. can see HTML output .{r setup, include=FALSE} library(flexdashboard) library(tidyverse) library(kableExtra) library(DT) # interactive tables theme_set(theme_minimal())table uses kableExtra render table specific theme.table uses DT::datatable() render table searchable interface.{r -clarity, fig.cap = \"Diamond price clarity\"} ggplot(diamonds, aes(x = clarity, y = price)) +   geom_boxplot(){r -carat, fig.cap = \"Diamond price carat\"} ggplot(diamonds, aes(x = carat, y = price)) +   stat_smooth()Change size web browser see boxes, tables figures change.best way figure format dashboard trial error, can also look sample layouts.","code":"diamonds %>%\n  group_by(cut) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by cut.\") %>%\n  kable_classic()diamonds %>%\n  group_by(color) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  DT::datatable(colnames = c(\"Colour\", \"Average Price\"), \n                caption = \"Mean diamond price by colour\",\n                options = list(pageLength = 5),\n                rownames = FALSE) %>%\n  DT::formatRound(columns=2, digits=0)"},{"path":"present.html","id":"column","chapter":"10 Advanced Reports","heading":"10.9 Column","text":"","code":""},{"path":"present.html","id":"by-cut","chapter":"10 Advanced Reports","heading":"10.9.1 By Cut","text":"table uses kableExtra render table specific theme.","code":"diamonds %>%\n  group_by(cut) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by cut.\") %>%\n  kable_classic()"},{"path":"present.html","id":"by-colour","chapter":"10 Advanced Reports","heading":"10.9.2 By Colour","text":"table uses DT::datatable() render table searchable interface.","code":"diamonds %>%\n  group_by(color) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  DT::datatable(colnames = c(\"Colour\", \"Average Price\"), \n                caption = \"Mean diamond price by colour\",\n                options = list(pageLength = 5),\n                rownames = FALSE) %>%\n  DT::formatRound(columns=2, digits=0)"},{"path":"present.html","id":"column-1","chapter":"10 Advanced Reports","heading":"10.10 Column","text":"","code":""},{"path":"present.html","id":"by-clarity","chapter":"10 Advanced Reports","heading":"10.10.1 By Clarity","text":"{r -clarity, fig.cap = \"Diamond price clarity\"} ggplot(diamonds, aes(x = clarity, y = price)) +   geom_boxplot()","code":""},{"path":"present.html","id":"by-carats","chapter":"10 Advanced Reports","heading":"10.10.2 By Carats","text":"{r -carat, fig.cap = \"Diamond price carat\"} ggplot(diamonds, aes(x = carat, y = price)) +   stat_smooth()","code":""},{"path":"present.html","id":"books","chapter":"10 Advanced Reports","heading":"10.10.3 Books","text":"can create online books bookdown. fact, book reading created using bookdown. download package, start new project choose \"Book project using bookdown\" list project templates.\nFigure 10.3: Bookdown project template.\nchapter written separate .Rmd file general book settings can changed _bookdown.yml _output.yml files.","code":""},{"path":"present.html","id":"websites","chapter":"10 Advanced Reports","heading":"10.10.4 Websites","text":"can create simple website way create R Markdown document. Choose \"Simple R Markdown Website\" project templates get started. See Appendix step--step tutorial.complex, blog-style websites, can investigate blogdown. install package, also able crate template blogdown projects get started.","code":""},{"path":"present.html","id":"shiny","chapter":"10 Advanced Reports","heading":"10.10.5 Shiny","text":"get truly interactive, can take R coding next level learn Shiny. Shiny apps let R code react user input. can things like make word cloud, search google spreadsheet, conduct survey.well outside scope class, skills learned provide good start. free book Building Web Apps R Shiny one authors book can get started creating shiny apps.","code":""},{"path":"present.html","id":"resources-present","chapter":"10 Advanced Reports","heading":"10.11 Further resources","text":"RStudio FormatsR Markdown CookbookDTFlexdashboardBookdownBlogdownShinyBuilding Web Apps R Shiny","code":""},{"path":"installing-r.html","id":"installing-r","chapter":"A Installing R","heading":"A Installing R","text":"Installing R RStudio usually straightforward. sections explain helpful YouTube video .","code":""},{"path":"installing-r.html","id":"installing-base-r","chapter":"A Installing R","heading":"A.1 Installing Base R","text":"Install base R. Choose download link operating system (Linux, Mac OS X, Windows).Mac, install latest release newest R-x.x.x.pkg link (legacy version older operating system). may also need install XQuartz able use visualisation packages.installing Windows version, choose \"base\" subdirectory click download link top page. install R, also install RTools; use \"recommended\" version highlighted near top list.using Linux, choose specific operating system follow installation instructions.","code":""},{"path":"installing-r.html","id":"installing-rstudio","chapter":"A Installing R","heading":"A.2 Installing RStudio","text":"Go rstudio.com download RStudio Desktop (Open Source License) version operating system list titled Installers Supported Platforms.","code":""},{"path":"installing-r.html","id":"rstudio-settings","chapter":"A Installing R","heading":"A.3 RStudio Settings","text":"settings fix immediately updating RStudio. Go Global Options... Tools menu (⌘,), General tab, uncheck box says Restore .RData workspace startup. keep things around workspace, things get messy, unexpected things happen. always start clear workspace. also means never want save workspace exit, set Never. thing want save scripts.may also want change appearance code. Different fonts themes can sometimes help visual difficulties dyslexia.\nFigure .1: RStudio General Appearance settings\nmay also want change settings Code tab. example, Lisa prefers two spaces instead tabs code likes able see whitespace characters. matter personal preference.\nFigure .2: RStudio Code settings\n","code":""},{"path":"installing-r.html","id":"installing-latex","chapter":"A Installing R","heading":"A.4 Installing LaTeX","text":"can install LaTeX typesetting system produce PDF reports RStudio. Without additional installation, able produce reports HTML PDF. generate PDF reports, additionally need install tinytex (Xie, 2021) run following code:","code":"\n# run this in the console\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()"},{"path":"appendix-updating-r.html","id":"appendix-updating-r","chapter":"B Updating R, RStudio, and packages","heading":"B Updating R, RStudio, and packages","text":"time--time, updated version R, RStudio, packages use (e.g., ggplot) become available. Remember separate, different process come different considerations. recommend updating latest version three start academic year.","code":""},{"path":"appendix-updating-r.html","id":"updating-rstudio","chapter":"B Updating R, RStudio, and packages","heading":"B.1 Updating RStudio","text":"RStudio easiest component update. Typically, updates RStudio affect code, instead add new features, like spell-check upgrades RStudio can . usually little downside updating RStudio easy .Click Help - Check updates\nFigure B.1: Updating RStudio\nupdate available, prompt download can install usual.","code":""},{"path":"appendix-updating-r.html","id":"updating-packages","chapter":"B Updating R, RStudio, and packages","heading":"B.2 Updating packages","text":"Package developers occasionally release updates packages. typically add new functions package, fix amend existing functions. aware package updates may cause previous code stop working. tend happen minor updates packages, occasionally major updates, can serious issues developer made fundamental changes code works. reason, recommend updating packages beginning academic year (semester) - assessment deadline just case!update individual package, easiest way use install.packages() function, always installs recent version package.update multiple packages, indeed packages, RStudio provides helpful tools. Click Tools - Check Package Updates. dialogue box appear can select packages wish update. aware select packages, may take time unable use R whilst process completes.\nFigure B.2: Updating packages RStudio\nOccasionally, might problem packages seemingly refuse update, , rlang vctrs cause end trouble. packages likely every explicitly load, required beneath surface R things like knit Markdown files etc.try update package get error message says something like Warning install.packages : installation package ‘vctrs’ non-zero exit status perhaps Error loadNamespace(, c(lib.loc, .libPaths()), versionCheck = vI[[]]) :  namespace 'rlang' 0.4.9 loaded, >= 0.4.10 required one solution found manually uninstall package, restart R, install package new, rather trying update existing version. installr package also useful function uninstalling packages.","code":"\ninstall.packages(\"tidyverse\")\n# Load installr\nlibrary(installr)\n\n# Uninstall the problem package\nuninstall.packages(\"package_name\")\n\n# Then restart R using session - restart R\n# Then install the package fresh\n\ninstall.packages(\"package\")"},{"path":"appendix-updating-r.html","id":"updating-r","chapter":"B Updating R, RStudio, and packages","heading":"B.3 Updating R","text":"Finally, may also wish update R . key thing aware update R, just download latest version website, lose packages. easiest way update R cause huge headache use installr package. use updateR() function, series dialogue boxes appear. fairly self-explanatory full step--step guide available use installr, important bit select \"Yes\" asked like copy packages older version R.always, issues, please ask Teams come office hours.","code":"\n# Install the installr package\ninstall.packages(\"installr\")\n\n# Load installr\nlibrary(installr)\n\n# Run the update function\nupdateR()"},{"path":"symbols.html","id":"symbols","chapter":"C Symbols","heading":"C Symbols","text":"\nFigure C.1: Image James Chapman/Soundimals\n","code":""},{"path":"conventions.html","id":"conventions","chapter":"D Conventions","heading":"D Conventions","text":"book use following conventions:Generic code: list(number = 1, letter = \"\")Generic code: list(number = 1, letter = \"\")Highlighted code: list(number = 1, letter = \"\")Highlighted code: list(number = 1, letter = \"\")File paths: data/sales.csvFile paths: data/sales.csvR Packages: tidyverseR Packages: tidyverseFunctions: paste()Functions: paste()Strings: \"Lisa\", \"Emily\"Strings: \"Lisa\", \"Emily\"Numbers: 100, 3.14Numbers: 100, 3.14Logical values: TRUE, FALSELogical values: TRUE, FALSEGlossary items: ordinalGlossary items: ordinalCitations: Wickham (2021)Citations: Wickham (2021)Internal links: Chapter 3Internal links: Chapter 3External links: Mastering ShinyExternal links: Mastering ShinyMenu/interface options: New File...Menu/interface options: New File...Quiz question: going learn lot: TRUEFALSEQuiz question: going learn lot: TRUEFALSEWhat p-value?\n\nprobability null hypothesis truethe probability observed, extreme, data, assumption null-hypothesis truethe probability making error conclusion\np-value?found !Informational asides.Notes warn something.Notes things cause serious errors.Try .","code":"\n# code chunks\npaste(\"Code\", \"Output\", 1, sep = \" \")## [1] \"Code Output 1\"```{r, fig.width = 2, fig.height = 2}\n# code chunks with headers\nhist(rnorm(100000))```## Markdown Example\n\n* Inline code: `r nrow(iris)`\n* *Italics*\n* **Bold**"},{"path":"data-types.html","id":"data-types","chapter":"E Data Types","heading":"E Data Types","text":"","code":""},{"path":"data-types.html","id":"basic-data-types","chapter":"E Data Types","heading":"E.1 Basic data types","text":"Data can numbers, words, true/false values combinations . basic data types R : numeric, character, logical, well special classes factor date/times.\nFigure E.1: Data types like categories format cells Excel.\n","code":""},{"path":"data-types.html","id":"numeric-data","chapter":"E Data Types","heading":"E.1.1 Numeric data","text":"numbers numeric data types. two types numeric data, integer double. Integers whole numbers, like -1, 0 1. Doubles numbers can fractional amounts. just type plain number 10, stored double, even decimal point. want exact integer, can use L suffix (10L), distinction make much difference practice.ever want know data type something, use typeof function.want know something numeric (double integer), can use function .numeric() tell numeric (TRUE) (FALSE).","code":"\ntypeof(10)   # double\ntypeof(10.0) # double\ntypeof(10L)  # integer## [1] \"double\"\n## [1] \"double\"\n## [1] \"integer\"\nis.numeric(10L)\nis.numeric(10.0)\nis.numeric(\"Not a number\")## [1] TRUE\n## [1] TRUE\n## [1] FALSE"},{"path":"data-types.html","id":"character-data","chapter":"E Data Types","heading":"E.1.2 Character data","text":"Characters (also called \"strings\") text quotation marks.can include quotes, escape quotes using backslash signal quote meant end string.","code":"\ntypeof(\"This is a character string\")\ntypeof('You can use double or single quotes')## [1] \"character\"\n## [1] \"character\"\nmy_string <- \"The instructor said, \\\"R is cool,\\\" and the class agreed.\"\ncat(my_string) # cat() prints the arguments## The instructor said, \"R is cool,\" and the class agreed."},{"path":"data-types.html","id":"logical-data","chapter":"E Data Types","heading":"E.1.3 Logical Data","text":"Logical data (also sometimes called \"boolean\" values) one two values: true false. R, always write uppercase: TRUE FALSE.compare two values operator, checking see 10 greater 5, resulting value logical.might also see logical values abbreviated T F, 0 1. can cause problems road, always spell whole thing.","code":"\nclass(TRUE)\nclass(FALSE)## [1] \"logical\"\n## [1] \"logical\"\nis.logical(10 > 5)## [1] TRUE"},{"path":"data-types.html","id":"factors","chapter":"E Data Types","heading":"E.1.4 Factors","text":"factor specific type integer lets specify categories order. useful data tables make plots display categories correct order.Factors type integer, can tell factors checking class().","code":"\nmyfactor <- factor(\"B\", levels = c(\"A\", \"B\",\"C\"))\nmyfactor## [1] B\n## Levels: A B C\ntypeof(myfactor)\nclass(myfactor)## [1] \"integer\"\n## [1] \"factor\""},{"path":"data-types.html","id":"dates-and-times-1","chapter":"E Data Types","heading":"E.1.5 Dates and Times","text":"Dates times represented doubles special classes. Dates times hard work , lubridate package provides functions help .Date datetimes type double, can tell dates checking class(). Datetimes can one classes start POSIX.data types :100 integerdoublecharacterlogicalfactor100L integerdoublecharacterlogicalfactor\"100\" integerdoublecharacterlogicalfactor100.0 integerdoublecharacterlogicalfactor-100L integerdoublecharacterlogicalfactorfactor(100) integerdoublecharacterlogicalfactorTRUE integerdoublecharacterlogicalfactor\"TRUE\" integerdoublecharacterlogicalfactorFALSE integerdoublecharacterlogicalfactor1 == 2 integerdoublecharacterlogicalfactor","code":"\ntoday <- lubridate::today()\nnow <- lubridate::now(tzone = \"GMT\")\ntypeof(today)\ntypeof(now)\nclass(today)\nclass(now)## [1] \"double\"\n## [1] \"double\"\n## [1] \"Date\"\n## [1] \"POSIXct\" \"POSIXt\""},{"path":"data-types.html","id":"containers","chapter":"E Data Types","heading":"E.2 Basic container types","text":"Individual data values can grouped together containers. main types containers work vectors, lists, data tables.","code":""},{"path":"data-types.html","id":"vectors","chapter":"E Data Types","heading":"E.2.1 Vectors","text":"vector R set items ('elements') specific order. elements vector must data type (numeric, character, logical). can create vector enclosing elements function c().happens mix types? class variable mixed?mix data types vector; elements vector must data type. mix , R coerce . mix doubles integers, integers changed doubles. mix characters numeric types, numbers coerced characters, rhl(10)` turn \"10\".","code":"\n## put information into a vector using c(...)\nc(1, 2, 3, 4)\nc(\"this\", \"is\", \"cool\")\n1:6 # shortcut to make a vector of all integers x:y## [1] 1 2 3 4\n## [1] \"this\" \"is\"   \"cool\"\n## [1] 1 2 3 4 5 6\nmixed <- c(2, \"good\", 2L, \"b\", TRUE)\ntypeof(mixed)## [1] \"character\""},{"path":"data-types.html","id":"selecting-values-from-a-vector","chapter":"E Data Types","heading":"E.2.1.1 Selecting values from a vector","text":"wanted pick specific values vector position, can use square brackets (extract operator, []) vector.can select one value vector putting vector numbers inside square brackets. example, can select 18th, 19th, 20th, 21st, 4th, 9th 15th letter built-vector LETTERS (gives uppercase letters Latin alphabet).Can decode secret message?can also create 'named' vectors, element name. example:can access elements name using character vector within square brackets. can put order want, can repeat elements:can get vector names using names() function, can set change using something like names(vec2) <- c(\"n1\", \"n2\", \"n3\").Another way access elements using logical vector within square brackets. pull elements vector corresponding element logical vector TRUE. logical vector length original, repeat. can find long vector using length() function.","code":"\nvalues <- c(10, 20, 30, 40, 50)\nvalues[2] # selects the second value## [1] 20\nword <- c(18, 19, 20, 21, 4, 9, 15)\nLETTERS[word]## [1] \"R\" \"S\" \"T\" \"U\" \"D\" \"I\" \"O\"\nsecret <- c(14, 5, 22, 5, 18, 7, 15, 14, 14, 1, 7, 9, 22, 5, 25, 15, 21, 21, 16)\nLETTERS[secret]##  [1] \"N\" \"E\" \"V\" \"E\" \"R\" \"G\" \"O\" \"N\" \"N\" \"A\" \"G\" \"I\" \"V\" \"E\" \"Y\" \"O\" \"U\" \"U\" \"P\"\nvec <- c(first = 77.9, second = -13.2, third = 100.1)\nvec##  first second  third \n##   77.9  -13.2  100.1\nvec[c(\"third\", \"second\", \"second\")]##  third second second \n##  100.1  -13.2  -13.2\nlength(LETTERS)\nLETTERS[c(TRUE, FALSE)]## [1] 26\n##  [1] \"A\" \"C\" \"E\" \"G\" \"I\" \"K\" \"M\" \"O\" \"Q\" \"S\" \"U\" \"W\" \"Y\""},{"path":"data-types.html","id":"rep_seq","chapter":"E Data Types","heading":"E.2.1.2 Repeating Sequences","text":"useful tricks save typing creating vectors.command x:y : operator give sequence number starting x, going y increments 1.want create sequence something integer steps? can use seq() function. Look examples work arguments .want repeat vector many times? either type (painful) use rep() function, can repeat vectors different ways.rep() function useful create vector logical values (TRUE/FALSE 1/0) select values another vector.","code":"\n1:10\n15.3:20.5\n0:-10##  [1]  1  2  3  4  5  6  7  8  9 10\n## [1] 15.3 16.3 17.3 18.3 19.3 20.3\n##  [1]   0  -1  -2  -3  -4  -5  -6  -7  -8  -9 -10\nseq(from = -1, to = 1, by = 0.2)\nseq(0, 100, length.out = 11)\nseq(0, 10, along.with = LETTERS)##  [1] -1.0 -0.8 -0.6 -0.4 -0.2  0.0  0.2  0.4  0.6  0.8  1.0\n##  [1]   0  10  20  30  40  50  60  70  80  90 100\n##  [1]  0.0  0.4  0.8  1.2  1.6  2.0  2.4  2.8  3.2  3.6  4.0  4.4  4.8  5.2  5.6\n## [16]  6.0  6.4  6.8  7.2  7.6  8.0  8.4  8.8  9.2  9.6 10.0\nrep(0, 10)                      # ten zeroes\nrep(c(1L, 3L), times = 7)       # alternating 1 and 3, 7 times\nrep(c(\"A\", \"B\", \"C\"), each = 2) # A to C, 2 times each##  [1] 0 0 0 0 0 0 0 0 0 0\n##  [1] 1 3 1 3 1 3 1 3 1 3 1 3 1 3\n## [1] \"A\" \"A\" \"B\" \"B\" \"C\" \"C\"\n# Get IDs in the pattern Y Y N N ...\nids <- 1:40\nyynn <- rep(c(TRUE, FALSE), each = 2, \n            length.out = length(ids))\nids[yynn]##  [1]  1  2  5  6  9 10 13 14 17 18 21 22 25 26 29 30 33 34 37 38"},{"path":"data-types.html","id":"lists","chapter":"E Data Types","heading":"E.2.2 Lists","text":"Recall vectors can contain data one type. want store collection data different data types? purpose use list. Define list using list() function.can refer elements list using square brackets like vector, can also use dollar sign notation ($) list items names.Explore 5 ways shown extract value list. data type object? difference single double brackets? one dollar sign?single brackets (bracket1 name1) return list subset items inside brackets. case, just one item, can (try data_types[1:2]). items keep names , returned value rhl(list(double = 10))`.double brackets (bracket2 name2 return single item vector. select one item; data_types[[1:2]] give \"subscript bounds\" error.dollar-sign notation double-brackets. name spaces characters letters, numbers, underscores, full stops, need surround name backticks (e.g., sales$`Customer ID`).","code":"\ndata_types <- list(\n  double = 10.0,\n  integer = 10L,\n  character = \"10\",\n  logical = TRUE\n)\n\nstr(data_types) # str() prints lists in a condensed format## List of 4\n##  $ double   : num 10\n##  $ integer  : int 10\n##  $ character: chr \"10\"\n##  $ logical  : logi TRUE\ndata_types$logical## [1] TRUE\nbracket1 <- data_types[1]\nbracket2 <- data_types[[1]]\nname1    <- data_types[\"double\"]\nname2    <- data_types[[\"double\"]]\ndollar   <- data_types$double"},{"path":"data-types.html","id":"tables-data","chapter":"E Data Types","heading":"E.2.3 Tables","text":"Tabular data structures allow collection data different types (characters, integers, logical, etc.) subject constraint \"column\" table (element list) must number elements. base R version table called data.frame, 'tidyverse' version called tibble. Tibbles far easier work , using . learn differences two data structures, see vignette(\"tibble\").Tabular data becomes especially important talk tidy data Chapter 7, consists set simple principles structuring data.","code":"\n# construct a table by column with tibble\navatar <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE\n)\n\n# or by row with tribble\navatar <- tribble(\n  ~name,    ~bends,  ~friendly,\n  \"Katara\", \"water\", TRUE,\n  \"Toph\",   \"earth\", TRUE,\n  \"Sokka\",  NA,      TRUE\n)\n# export the data to a file\nrio::export(avatar, \"data/avatar.csv\")\n\n# or by importing data from a file\navatar <- rio::import(\"data/avatar.csv\")"},{"path":"data-types.html","id":"table-info","chapter":"E Data Types","heading":"E.2.3.1 Table info","text":"can get information table using following functions.ncol(): number columnsnrow(): number rowsdim(): number rows number columnsname(): column namesglimpse(): column types","code":"\nnrow(avatar)\nncol(avatar)\ndim(avatar)\nnames(avatar)\nglimpse(avatar)## [1] 3\n## [1] 3\n## [1] 3 3\n## [1] \"name\"     \"bends\"    \"friendly\"\n## Rows: 3\n## Columns: 3\n## $ name     <chr> \"Katara\", \"Toph\", \"Sokka\"\n## $ bends    <chr> \"water\", \"earth\", NA\n## $ friendly <lgl> TRUE, TRUE, TRUE"},{"path":"data-types.html","id":"row-col-access","chapter":"E Data Types","heading":"E.2.3.2 Accessing rows and columns","text":"various ways accessing specific columns rows table. ones base R useful know , learning easier (readable) ways Chapters 7 8. Examples base R accessing functions provided reference, since might see people's scripts.","code":"\nkatara     <- avatar[1, ] # first row\ntype       <- avatar[, 2] # second column (bends)\nbenders    <- avatar[c(1, 2), ] # selected rows (by number)\nbends_name <- avatar[, c(\"bends\", \"name\")] # selected columns (by name)\nfriendly   <- avatar$friendly  # by column name"},{"path":"data-types.html","id":"glossary-datatypes","chapter":"E Data Types","heading":"E.3 Glossary","text":"","code":""},{"path":"plotstyle.html","id":"plotstyle","chapter":"F Styling Plots","heading":"F Styling Plots","text":"","code":""},{"path":"plotstyle.html","id":"aesthetics","chapter":"F Styling Plots","heading":"F.1 Aesthetics","text":"","code":""},{"path":"plotstyle.html","id":"colourfill","chapter":"F Styling Plots","heading":"F.1.1 Colour/Fill","text":"colour argument changes point line colour, fill argument changes interior colour shapes. Type colours() console see list named colours R. Alternatively, can use hexadecimal colours like \"#FF8000\" rgb() function set red, green, blue values scale 0 1.Hover colour see R name.\nblack\n\ngray1\n\ngray2\n\ngray3\n\ngray4\n\ngray5\n\ngray6\n\ngray7\n\ngray8\n\ngray9\n\ngray10\n\ngray11\n\ngray12\n\ngray13\n\ngray14\n\ngray15\n\ngray16\n\ngray17\n\ngray18\n\ngray19\n\ngray20\n\ngray21\n\ngray22\n\ngray23\n\ngray24\n\ngray25\n\ngray26\n\ngray27\n\ngray28\n\ngray29\n\ngray30\n\ngray31\n\ngray32\n\ngray33\n\ngray34\n\ngray35\n\ngray36\n\ngray37\n\ngray38\n\ngray39\n\ngray40\n\ndimgray\n\ngray42\n\ngray43\n\ngray44\n\ngray45\n\ngray46\n\ngray47\n\ngray48\n\ngray49\n\ngray50\n\ngray51\n\ngray52\n\ngray53\n\ngray54\n\ngray55\n\ngray56\n\ngray57\n\ngray58\n\ngray59\n\ngray60\n\ngray61\n\ngray62\n\ngray63\n\ngray64\n\ngray65\n\ndarkgray\n\ngray66\n\ngray67\n\ngray68\n\ngray69\n\ngray70\n\ngray71\n\ngray72\n\ngray73\n\ngray74\n\ngray\n\ngray75\n\ngray76\n\ngray77\n\ngray78\n\ngray79\n\ngray80\n\ngray81\n\ngray82\n\ngray83\n\nlightgray\n\ngray84\n\ngray85\n\ngainsboro\n\ngray86\n\ngray87\n\ngray88\n\ngray89\n\ngray90\n\ngray91\n\ngray92\n\ngray93\n\ngray94\n\ngray95\n\ngray96\n\ngray97\n\ngray98\n\ngray99\n\nwhite\n\nsnow4\n\nsnow3\n\nsnow2\n\nsnow\n\nrosybrown4\n\nrosybrown\n\nrosybrown3\n\nrosybrown2\n\nrosybrown1\n\nlightcoral\n\nindianred\n\nindianred4\n\nindianred2\n\nindianred1\n\nindianred3\n\nbrown4\n\nbrown\n\nbrown3\n\nbrown2\n\nbrown1\n\nfirebrick4\n\nfirebrick\n\nfirebrick3\n\nfirebrick1\n\nfirebrick2\n\ndarkred\n\nred3\n\nred2\n\nred\n\nmistyrose3\n\nmistyrose4\n\nmistyrose2\n\nmistyrose\n\nsalmon\n\ntomato3\n\ncoral4\n\ncoral3\n\ncoral2\n\ncoral1\n\ntomato2\n\ntomato\n\ntomato4\n\ndarksalmon\n\nsalmon4\n\nsalmon3\n\nsalmon2\n\nsalmon1\n\ncoral\n\norangered4\n\norangered3\n\norangered2\n\nlightsalmon3\n\nlightsalmon2\n\nlightsalmon\n\nlightsalmon4\n\nsienna\n\nsienna3\n\nsienna2\n\nsienna1\n\nsienna4\n\norangered\n\nseashell4\n\nseashell3\n\nseashell2\n\nseashell\n\nchocolate4\n\nchocolate3\n\nchocolate\n\nchocolate2\n\nchocolate1\n\nlinen\n\npeachpuff4\n\npeachpuff3\n\npeachpuff2\n\npeachpuff\n\nsandybrown\n\ntan4\n\nperu\n\ntan2\n\ntan1\n\ndarkorange4\n\ndarkorange3\n\ndarkorange2\n\ndarkorange1\n\nantiquewhite3\n\nantiquewhite2\n\nantiquewhite1\n\nbisque4\n\nbisque3\n\nbisque2\n\nbisque\n\nburlywood4\n\nburlywood3\n\nburlywood\n\nburlywood2\n\nburlywood1\n\ndarkorange\n\nantiquewhite4\n\nantiquewhite\n\npapayawhip\n\nblanchedalmond\n\nnavajowhite4\n\nnavajowhite3\n\nnavajowhite2\n\nnavajowhite\n\ntan\n\nfloralwhite\n\noldlace\n\nwheat4\n\nwheat3\n\nwheat2\n\nwheat\n\nwheat1\n\nmoccasin\n\norange4\n\norange3\n\norange2\n\norange\n\ngoldenrod\n\ngoldenrod1\n\ngoldenrod4\n\ngoldenrod3\n\ngoldenrod2\n\ndarkgoldenrod4\n\ndarkgoldenrod\n\ndarkgoldenrod3\n\ndarkgoldenrod2\n\ndarkgoldenrod1\n\ncornsilk\n\ncornsilk4\n\ncornsilk3\n\ncornsilk2\n\nlightgoldenrod4\n\nlightgoldenrod3\n\nlightgoldenrod\n\nlightgoldenrod2\n\nlightgoldenrod1\n\ngold4\n\ngold3\n\ngold2\n\ngold\n\nlemonchiffon4\n\nlemonchiffon3\n\nlemonchiffon2\n\nlemonchiffon\n\npalegoldenrod\n\nkhaki\n\ndarkkhaki\n\nkhaki4\n\nkhaki3\n\nkhaki2\n\nkhaki1\n\nivory4\n\nivory3\n\nivory2\n\nivory\n\nbeige\n\nlightyellow4\n\nlightyellow3\n\nlightyellow2\n\nlightyellow\n\nlightgoldenrodyellow\n\nyellow4\n\nyellow3\n\nyellow2\n\nyellow\n\nolivedrab\n\nolivedrab4\n\nolivedrab3\n\nolivedrab2\n\nolivedrab1\n\ndarkolivegreen\n\ndarkolivegreen4\n\ndarkolivegreen3\n\ndarkolivegreen2\n\ndarkolivegreen1\n\ngreenyellow\n\nchartreuse4\n\nchartreuse3\n\nchartreuse2\n\nlawngreen\n\nchartreuse\n\nhoneydew4\n\nhoneydew3\n\nhoneydew2\n\nhoneydew\n\ndarkseagreen4\n\ndarkseagreen\n\ndarkseagreen3\n\ndarkseagreen2\n\ndarkseagreen1\n\nlightgreen\n\npalegreen\n\npalegreen4\n\npalegreen3\n\npalegreen1\n\nforestgreen\n\nlimegreen\n\ndarkgreen\n\ngreen4\n\ngreen3\n\ngreen2\n\ngreen\n\nmediumseagreen\n\nseagreen\n\nseagreen3\n\nseagreen2\n\nseagreen1\n\nmintcream\n\nspringgreen4\n\nspringgreen3\n\nspringgreen2\n\nspringgreen\n\naquamarine3\n\naquamarine2\n\naquamarine\n\nmediumspringgreen\n\naquamarine4\n\nturquoise\n\nmediumturquoise\n\nlightseagreen\n\nazure4\n\nazure3\n\nazure2\n\nazure\n\nlightcyan4\n\nlightcyan3\n\nlightcyan2\n\nlightcyan\n\npaleturquoise\n\npaleturquoise4\n\npaleturquoise3\n\npaleturquoise2\n\npaleturquoise1\n\ndarkslategray\n\ndarkslategray4\n\ndarkslategray3\n\ndarkslategray2\n\ndarkslategray1\n\ncyan4\n\ncyan3\n\ndarkturquoise\n\ncyan2\n\ncyan\n\ncadetblue4\n\ncadetblue\n\nturquoise4\n\nturquoise3\n\nturquoise2\n\nturquoise1\n\npowderblue\n\ncadetblue3\n\ncadetblue2\n\ncadetblue1\n\nlightblue4\n\nlightblue3\n\nlightblue\n\nlightblue2\n\nlightblue1\n\ndeepskyblue4\n\ndeepskyblue3\n\ndeepskyblue2\n\ndeepskyblue\n\nskyblue\n\nlightskyblue4\n\nlightskyblue3\n\nlightskyblue2\n\nlightskyblue1\n\nlightskyblue\n\nskyblue4\n\nskyblue3\n\nskyblue2\n\nskyblue1\n\naliceblue\n\nslategray\n\nlightslategray\n\nslategray3\n\nslategray2\n\nslategray1\n\nsteelblue4\n\nsteelblue\n\nsteelblue3\n\nsteelblue2\n\nsteelblue1\n\ndodgerblue4\n\ndodgerblue3\n\ndodgerblue2\n\ndodgerblue\n\nlightsteelblue4\n\nlightsteelblue3\n\nlightsteelblue\n\nlightsteelblue2\n\nlightsteelblue1\n\nslategray4\n\ncornflowerblue\n\nroyalblue\n\nroyalblue4\n\nroyalblue3\n\nroyalblue2\n\nroyalblue1\n\nghostwhite\n\nlavender\n\nmidnightblue\n\nnavy\n\nblue4\n\nblue3\n\nblue2\n\nblue\n\ndarkslateblue\n\nslateblue\n\nmediumslateblue\n\nlightslateblue\n\nslateblue1\n\nslateblue4\n\nslateblue3\n\nslateblue2\n\nmediumpurple4\n\nmediumpurple3\n\nmediumpurple\n\nmediumpurple2\n\nmediumpurple1\n\npurple4\n\npurple3\n\nblueviolet\n\npurple1\n\npurple2\n\npurple\n\ndarkorchid\n\ndarkorchid4\n\ndarkorchid3\n\ndarkorchid2\n\ndarkorchid1\n\ndarkviolet\n\nmediumorchid4\n\nmediumorchid3\n\nmediumorchid\n\nmediumorchid2\n\nmediumorchid1\n\nthistle4\n\nthistle3\n\nthistle\n\nthistle2\n\nthistle1\n\nplum4\n\nplum3\n\nplum2\n\nplum1\n\nplum\n\nviolet\n\ndarkmagenta\n\nmagenta3\n\nmagenta2\n\nmagenta\n\norchid4\n\norchid3\n\norchid\n\norchid2\n\norchid1\n\nmaroon4\n\nvioletred\n\nmaroon3\n\nmaroon2\n\nmaroon1\n\nmediumvioletred\n\ndeeppink3\n\ndeeppink2\n\ndeeppink\n\ndeeppink4\n\nhotpink2\n\nhotpink1\n\nhotpink4\n\nhotpink\n\nvioletred4\n\nvioletred3\n\nvioletred2\n\nvioletred1\n\nhotpink3\n\nlavenderblush4\n\nlavenderblush3\n\nlavenderblush2\n\nlavenderblush\n\nmaroon\n\npalevioletred4\n\npalevioletred3\n\npalevioletred\n\npalevioletred2\n\npalevioletred1\n\npink4\n\npink3\n\npink2\n\npink1\n\npink\n\nlightpink\n\nlightpink4\n\nlightpink3\n\nlightpink2\n\nlightpink1\n","code":""},{"path":"plotstyle.html","id":"alpha","chapter":"F Styling Plots","heading":"F.1.2 Alpha","text":"alpha argument changes transparency (0 = totally transparent, 1 = totally opaque).\nFigure F.1: Varying alpha values.\n","code":""},{"path":"plotstyle.html","id":"shape","chapter":"F Styling Plots","heading":"F.1.3 Shape","text":"shape argument changes shape points.\nFigure F.2: 25 shape values\n","code":""},{"path":"plotstyle.html","id":"linetype","chapter":"F Styling Plots","heading":"F.1.4 Linetype","text":"can probably guess linetype argument .\nFigure F.3: 6 linetype values different sizes.\n","code":""},{"path":"plotstyle.html","id":"palettes","chapter":"F Styling Plots","heading":"F.2 Palettes","text":"Discrete palettes change depending number categories.\nFigure F.4: Default discrete palette different numbers levels.\n","code":""},{"path":"plotstyle.html","id":"viridis-palettes","chapter":"F Styling Plots","heading":"F.2.1 Viridis Palettes","text":"Viridis palettes good colourblind-safe greyscale-safe plots. work number categories, best larger numbers categories continuous colours.","code":""},{"path":"plotstyle.html","id":"discrete-viridis-palettes","chapter":"F Styling Plots","heading":"F.2.1.1 Discrete Viridis Palettes","text":"Set discrete viridis colours scale_colour_viridis_d() scale_fill_viridis_d() set option argument one options . Set direction = -1 reverse order colours.\nFigure F.5: Discrete viridis palettes.\nend colour light plot start colour dark, can set begin end arguments values 0 1, scale_colour_viridis_c(begin = 0.1, end = 0.9).","code":""},{"path":"plotstyle.html","id":"continuous-viridis-palettes","chapter":"F Styling Plots","heading":"F.2.1.2 Continuous Viridis Palettes","text":"Set continuous viridis colours scale_colour_viridis_c() scale_fill_viridis_c() set option argument one options . Set direction = -1 reverse order colours.\nFigure F.6: Continuous viridis palettes.\n","code":""},{"path":"plotstyle.html","id":"brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2 Brewer Palettes","text":"Brewer palettes give lot control plot colour fill. set scale_color_brewer() scale_fill_brewer() set palette argument one palettes . Set direction = -1 reverse order colours.","code":""},{"path":"plotstyle.html","id":"qualitative-brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2.1 Qualitative Brewer Palettes","text":"palettes good categorical data 8 categories (palettes can handle 12). \"Paired\" palette useful categories arranged pairs.\nFigure F.7: Qualitative brewer palettes.\n","code":""},{"path":"plotstyle.html","id":"sequential-brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2.2 Sequential Brewer Palettes","text":"palettes good 9 ordinal categories lot categories.\nFigure F.8: Sequential brewer palettes.\n","code":""},{"path":"plotstyle.html","id":"diverging-brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2.3 Diverging Brewer Palettes","text":"palettes good ordinal categories 11 levels centre level neutral baseline category levels differ important way, agree versus disagree options.\nFigure F.9: Diverging brewer palettes.\n","code":""},{"path":"plotstyle.html","id":"themes-appendix","chapter":"F Styling Plots","heading":"F.3 Themes","text":"ggplot2 8 built-themes can add plot like plot + theme_bw() set default theme top script like theme_set(theme_bw()).\nFigure F.10: {ggplot2} themes.\n","code":""},{"path":"plotstyle.html","id":"ggthemes","chapter":"F Styling Plots","heading":"F.3.1 ggthemes","text":"can get themes add-packages, like ggthemes. themes also custom scale_ functions like scale_colour_economist(). website extensive examples instructions alternate dark versions themes.\nFigure 9.5: {ggthemes} themes.\n","code":""},{"path":"plotstyle.html","id":"fonts","chapter":"F Styling Plots","heading":"F.3.2 Fonts","text":"can customise fonts used themes. computers able recognise families \"sans\", \"serif\", \"mono\", computers able access installed fonts name.\nFigure F.11: Different fonts.\nworking Windows machine get error \"font family found Windows font database\", may need explicitly map fonts. setup code chunk, add following code, fix error. may need fonts specify.showtext package flexible way add fonts..ttf file font site, like Font Squirrel, can load file directly using font_add(). Set regular path file regular version font, optionally add versions. Set family name want use font. need include local font files sharing script others.download fonts directly Google fonts, use function font_add_google(), set name exact name site, family name want use font.added fonts local files Google, need make available R using showtext_auto(). steps script want use custom fonts.change fonts used overall plot, use theme() function set text element_text(family = \"new_font_family\").\nFigure F.12: Custom Fonts.\nset fonts individual elements plot, need find specific argument element. can use argument face choose \"bold\", \"italic\", \"bolditalic\" versions, available.\nFigure F.13: Multiple custom fonts plot.\n","code":"\nsans <- g + theme_bw(base_family = \"sans\") + \n  ggtitle(\"Sans\")\nserif <- g + theme_bw(base_family = \"serif\") + \n  ggtitle(\"Serif\")\nmono <- g + theme_bw(base_family = \"mono\") + \n  ggtitle(\"Mono\")\nfont <- g + theme_bw(base_family = \"Comic Sans MS\") + \n  ggtitle(\"Comic Sans MS\")\n\nsans + serif + mono + font + plot_layout(nrow = 1)\nlibrary(showtext)\n\n# font from https://www.fontsquirrel.com/fonts/SF-Cartoonist-Hand\n\nfont_add(\n  regular = \"fonts/cartoonist/SF_Cartoonist_Hand.ttf\",\n  bold = \"fonts/cartoonist/SF_Cartoonist_Hand_Bold.ttf\",\n  italic = \"fonts/cartoonist/SF_Cartoonist_Hand_Italic.ttf\",\n  bolditalic = \"fonts/cartoonist/SF_Cartoonist_Hand_Bold_Italic.ttf\",\n  family = \"cartoonist\" \n)\n# download fonts from Google\nfont_add_google(name = \"Courgette\", family = \"courgette\")\nfont_add_google(name = \"Poiret One\", family = \"poiret\")\nshowtext_auto() # load the fonts\na <- g + theme(text = element_text(family = \"courgette\")) +\n  ggtitle(\"Courgette\")\nb <- g + theme(text = element_text(family = \"cartoonist\")) +\n  ggtitle(\"Cartoonist Hand\")\nc <- g + theme(text = element_text(family = \"poiret\")) +\n  ggtitle(\"Poiret One\")\n\na + b + c\ng + ggtitle(\"Cartoonist Hand\") +\n  theme(\n    title = element_text(family = \"cartoonist\", face = \"bold\"),\n    strip.text = element_text(family = \"cartoonist\", face = \"italic\"),\n    axis.text = element_text(family = \"sans\")\n  )"},{"path":"twitter-hashtags.html","id":"twitter-hashtags","chapter":"G Twitter Hashtags","heading":"G Twitter Hashtags","text":"appendix, create table top five hashtags used conjunction #NationalComingOutDay, total number tweets hashtag, total number likes, top tweet hashtag.example uses data Chapter 2.6.5 (can download), encourage try hashtag interests .","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(rtweet)      # for searching tweets\nlibrary(glue)        # for pasting strings\nlibrary(kableExtra)  # for nice tables\n# load tweets\ntweets <- search_tweets(q = \"#NationalComingOutDay\", \n                        n = 30000, \n                        include_rts = FALSE)\n\n# save them to a file so you can skip this step in the future\nsaveRDS(tweets, file = \"data/ncod_tweets.rds\")\n# load tweets from the file\ntweets <- readRDS(\"data/ncod_tweets.rds\")"},{"path":"twitter-hashtags.html","id":"select-relevant-data","chapter":"G Twitter Hashtags","heading":"G.1 Select relevant data","text":"function select() useful just keeping variables (columns) need work , can make working large datasets easier. arguments select() simply names variables resulting table present order specify.","code":"\ntweets_with_hashtags <- tweets %>%\n  select(hashtags, text, favorite_count, media_url)"},{"path":"twitter-hashtags.html","id":"unnest-columns","chapter":"G Twitter Hashtags","heading":"G.2 Unnest columns","text":"Look dataset using View(tweets_with_hashtags) clicking Environment tab. notice variable hashtags multiple values cell (.e., users used one hashtag single tweet). order work information, need separate hashtag row data represents single hashtag. can using function unnest() adding pipeline code.Look tweets_with_hashtags see different table tweets. rows?","code":"\ntweets_with_hashtags <- tweets %>%\n  select(hashtags, text, favorite_count, media_url)%>%\n  unnest(cols = hashtags)"},{"path":"twitter-hashtags.html","id":"top-5-hashtags","chapter":"G Twitter Hashtags","heading":"G.3 Top 5 hashtags","text":"get top 5 hashtags need know tweets used one. code uses pipes build analysis. encounter multi-pipe code, can useful run line pipeline see builds check output step. code:Starts object tweets_with_hashtags ;Counts number tweets hashtag using count() ;Filters blank cells using !.na() (can read \"keep row value true (!) hashtags missing\") ;Returns top five values using slice_max() orders n column.Two hashtags , different case. can fix adding extra line code uses mutate() overwrite variable hashtag data transformed lower case using tolower(). Since going use table tweets_with_hashtags times, change table first rather fix every time use table.","code":"\ntop5_hashtags <- tweets_with_hashtags %>%\n  count(hashtags) %>%\n  filter(!is.na(hashtags)) %>%  # get rid of the blank value\n  slice_max(order_by = n, n = 5)\n\ntop5_hashtags\ntweets_with_hashtags <- tweets_with_hashtags %>%\n  mutate(hashtags = tolower(hashtags))\n\ntop5_hashtags <- tweets_with_hashtags %>%\n  count(hashtags) %>%\n  filter(!is.na(hashtags)) %>%  # get rid of the blank value\n  slice_max(order_by = n, n = 5)\n\ntop5_hashtags"},{"path":"twitter-hashtags.html","id":"top-tweet-per-hashtag","chapter":"G Twitter Hashtags","heading":"G.4 Top tweet per hashtag","text":"Next, get top tweet hashtag using filter(). Use group_by() filter select -liked tweet hashtag, rather one likes overall. getting used writing running kind multi-step code, can useful take individual lines see changes output strengthen understanding step .function slice_max() accomplishes thing filter() sample_n() functions . Look help function see can figure use .","code":"\ntop_tweet_per_hashtag <- tweets_with_hashtags %>%\n  group_by(hashtags) %>%\n  filter(favorite_count == max(favorite_count)) %>%\n  sample_n(size = 1) %>%\n  ungroup()\ntop_tweet_per_hashtag <- tweets_with_hashtags %>%\n  group_by(hashtags) %>%\n  slice_max(\n    order_by = favorite_count, \n    n = 1, # select the 1 top value\n    with_ties = FALSE # don't include ties\n  ) %>%\n  ungroup()"},{"path":"twitter-hashtags.html","id":"total-likes-per-hashtag","chapter":"G Twitter Hashtags","heading":"G.5 Total likes per hashtag","text":"Get total number likes per hashtag grouping summarising sum().","code":"\nlikes_per_hashtag <- tweets_with_hashtags %>%\n  group_by(hashtags) %>%\n  summarise(total_likes = sum(favorite_count)) %>%\n  ungroup()"},{"path":"twitter-hashtags.html","id":"put-it-together","chapter":"G Twitter Hashtags","heading":"G.6 Put it together","text":"can put everything together using left_join() (see Chapter @ref(left_join)). keep everything first table specified add relevant data second table specified. case, add data top_tweet_per_hashtag like_per_hashtag tweets included top5_hashtags","code":"\ntop5 <- top5_hashtags %>%\n  left_join(top_tweet_per_hashtag, by = \"hashtags\") %>%\n  left_join(likes_per_hashtag, by = \"hashtags\") "},{"path":"twitter-hashtags.html","id":"twitter-data-idiosyncrasies","chapter":"G Twitter Hashtags","heading":"G.7 Twitter data idiosyncrasies","text":"can finish though, couple extra steps need add account idiosyncrasies Twitter data.First, @ symbol used R Markdown referencing (see Chapter  10.4.3). likely tweets contain symbol, can use mutate find instances @ add backslashes. Backslashes create literal version characters special meaning R, adding means print @ symbol without trying create reference. course \\ also special meaning R, means also need backslash backslash. programming fun? can use code tidy ampersands (&), sometimes display \"&\".Second, multiple images associated single tweet, media_url list, use unlist(). might necessary different set tweets; use glimpse() check data types.Finally, use select() tidy table just keep columns need.K—’m . Bi <U+0001F44B><U+0001F3FC>HAPPY NATIONAL COMING DAY!!<U+0001F3F3><U+FE0F><U+200D><U+0001F308><U+2764><U+FE0F><U+0001F9E1><U+0001F49B><U+0001F49A><U+0001F499><U+0001F49C><U+0001F3F3><U+FE0F><U+200D><U+0001F308>","code":"\ntop5 <- top5_hashtags %>%\n  left_join(top_tweet_per_hashtag, by = \"hashtags\") %>%\n  left_join(likes_per_hashtag, by = \"hashtags\") %>%\n  # replace @ with \\@ so @ doesn't trigger referencing\n  mutate(text = gsub(\"@\", \"\\\\\\\\@\", text),\n         text = gsub(\"&amp;\", \"&\", text)) %>%\n  # media_url can be a list if there is more than one image\n  mutate(image = unlist(media_url)) %>%\n  # put the columns you want to display in order\n  select(hashtags, n, total_likes, text, image)\n\ntop5"},{"path":"twitter-hashtags.html","id":"make-it-prettier","chapter":"G Twitter Hashtags","heading":"G.8 Make it prettier","text":"Whilst table now information want, great aesthetically. kableExtra package functions improve presentation tables. going show two examples format table.first (relatively) simple stays within R programming language using functionality kableExtra. main aesthetic feature table incorporation pride flag colours row. row set different colour pride flag text set black bold improve contrast. also removed image column, just contains URL.\nTable G.1: Stats top tweet top five hashtags.\nK—’m . Bi <U+0001F44B><U+0001F3FC>HAPPY NATIONAL COMING DAY!!<U+0001F3F3><U+FE0F><U+200D><U+0001F308><U+2764><U+FE0F><U+0001F9E1><U+0001F49B><U+0001F49A><U+0001F499><U+0001F49C><U+0001F3F3><U+FE0F><U+200D><U+0001F308>","code":"\n# the hex codes of the pride flag colours, obtained from https://www.schemecolor.com/lgbt-flag-colors.php\n\n# the last two characters (80) make the colours semi-transparent.\n# omitting them or setting to FF make them 100% opaque\n\npride_colours <- c(\"#FF001880\", \n                   \"#FFA52C80\", \n                   \"#FFFF4180\", \n                   \"#00801880\", \n                   \"#0000F980\", \n                   \"#86007D80\")\n\ntop5 %>%\n  select(-image) %>%\n  kable(col.names = c(\"Hashtags\", \"No. tweets\", \"Likes\", \"Tweet\"),\n        caption = \"Stats and the top tweet for the top five hashtags.\",\n        \n        ) %>%\n  kable_paper() %>%\n  row_spec(row = 0:5, bold = T, color = \"black\") %>%\n  row_spec(row = 0, font_size = 18,\n           background = pride_colours[1]) %>%\n  row_spec(row = 1, background = pride_colours[2])%>%\n  row_spec(row = 2, background = pride_colours[3])%>%\n  row_spec(row = 3, background = pride_colours[4])%>%\n  row_spec(row = 4, background = pride_colours[5])%>%\n  row_spec(row = 5, background = pride_colours[6])"},{"path":"twitter-hashtags.html","id":"customise-with-html","chapter":"G Twitter Hashtags","heading":"G.9 Customise with HTML","text":"alternative approach incorporates HTML also uses package glue combine information multiple columns.First, use mutate() create new column col1 combines first three columns single column adds formatting make hashtag bold (<strong>) insert line breaks (<br>). also change image column display image using html image.familiar HTML, worry understand code; point show full extent flexibility available.\nTable 2.1: Stats top tweet top five hashtags.\nK—’m . Bi HAPPY NATIONAL COMING DAY!!","code":"\ntop5 %>%\n  mutate(col1 = glue(\"<strong>#{hashtags}<\/strong>\n                     <br>\n                     tweets: {n}\n                     <br>\n                     likes: {total_likes}\"),\n         img = ifelse(!is.na(image),\n                      glue(\"<img src='{image}' width='200px' />\"),\n                      \"\")) %>%\n  select(col1, text, img) %>%\n  kable(\n    escape = FALSE, # allows HTML in the table\n    col.names = c(\"Hashtag\", \"Top Tweet\", \"\"),\n    caption = \"Stats and the top tweet for the top five hashtags.\") %>%\n  column_spec(1:2, extra_css = \"vertical-align: top;\") %>%\n  row_spec(0, extra_css = \"vertical-align: bottom;\") %>%\n  kable_paper()"},{"path":"twitter-data.html","id":"twitter-data","chapter":"H Twitter Data","heading":"H Twitter Data","text":"appendix takes problem-based approach demonstrate use tidyverse functions summarise visualise twitter data.","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(lubridate)   # for handling dates and times"},{"path":"twitter-data.html","id":"single-data-file","chapter":"H Twitter Data","heading":"H.1 Single Data File","text":"","code":""},{"path":"twitter-data.html","id":"export-data","chapter":"H Twitter Data","heading":"H.1.1 Export Data","text":"can export organisations' twitter data https://analytics.twitter.com/. Go Tweets tab, choose time period, export last month's data day (use files class data).","code":""},{"path":"twitter-data.html","id":"import-data","chapter":"H Twitter Data","heading":"H.1.2 Import Data","text":"","code":"\nfile <- \"data/tweets/daily_tweet_activity_metrics_LisaDeBruine_20210801_20210901_en.csv\"\n\ndaily_tweets <- read_csv(file, show_col_types = FALSE)"},{"path":"twitter-data.html","id":"select-relevant-data-1","chapter":"H Twitter Data","heading":"H.1.3 Select Relevant Data","text":"file contains bunch columns \"promoted\" tweets blank unless organisation pays . get rid . can use select helper starts_with() get columns start \"promoted\" remove prefacing function !. Now 20 columns, can inspect glimpse().","code":"\ndaily_tweets <- read_csv(file) %>%\n  select(!starts_with(\"promoted\")) %>%\n  glimpse()## Rows: 31\n## Columns: 20\n## $ Date                  <date> 2021-08-01, 2021-08-02, 2021-08-03, 2021-08-04,~\n## $ `Tweets published`    <dbl> 0, 2, 4, 15, 12, 11, 14, 17, 26, 17, 3, 9, 5, 17~\n## $ impressions           <dbl> 1088, 1244, 3974, 22394, 23340, 316989, 694114, ~\n## $ engagements           <dbl> 13, 19, 76, 1290, 2051, 26249, 51494, 5988, 2964~\n## $ `engagement rate`     <dbl> 0.01194853, 0.01527331, 0.01912431, 0.05760472, ~\n## $ retweets              <dbl> 0, 0, 0, 5, 15, 124, 130, 18, 13, 4, 2, 25, 1, 7~\n## $ replies               <dbl> 0, 2, 5, 15, 16, 122, 123, 21, 52, 21, 4, 11, 9,~\n## $ likes                 <dbl> 2, 3, 25, 96, 108, 628, 847, 93, 116, 68, 10, 10~\n## $ `user profile clicks` <dbl> 1, 9, 10, 56, 36, 379, 550, 98, 78, 31, 17, 104,~\n## $ `url clicks`          <dbl> 2, 0, 0, 45, 97, 10136, 19467, 1937, 681, 324, 1~\n## $ `hashtag clicks`      <dbl> 0, 0, 0, 0, 0, 0, 1, 5, 1, 0, 0, 12, 1, 2, 3, 1,~\n## $ `detail expands`      <dbl> 7, 5, 36, 412, 606, 10348, 21021, 2642, 1441, 79~\n## $ `permalink clicks`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n## $ `app opens`           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n## $ `app installs`        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n## $ follows               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n## $ `email tweet`         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n## $ `dial phone`          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n## $ `media views`         <dbl> 2, 2, 25, 710, 1187, 4474, 9356, 1176, 582, 334,~\n## $ `media engagements`   <dbl> 1, 0, 0, 661, 1173, 4464, 9353, 1174, 582, 327, ~"},{"path":"twitter-data.html","id":"plot-likes-per-day","chapter":"H Twitter Data","heading":"H.1.4 Plot Likes per Day","text":"Now plot likes per day. scale_x_date() function lets formats x-axis dates.\nFigure H.1: Likes per day.\n","code":"\nggplot(daily_tweets, aes(x = Date, y = likes)) +\n  geom_line() +\n  scale_x_date(name = \"\", \n               date_breaks = \"1 day\",\n               date_labels = \"%d\",\n               expand = expansion(add = c(.5, .5))) +\n  ggtitle(\"Likes: August 2021\")"},{"path":"twitter-data.html","id":"plot-multiple-engagements","chapter":"H Twitter Data","heading":"H.1.5 Plot Multiple Engagements","text":"want plot likes, retweets, replies plot? need get numbers column column contains \"engagement type\" can use determine different line colours. data different columns need get column, wide need pivot data longer.Now can plot number engagements per day engagement type making line colour determined value engage_type column.\nFigure H.2: Engagements per day engagement type.\n","code":"\nlong_tweets <- daily_tweets %>%\n  select(Date, likes, retweets, replies) %>%\n  pivot_longer(cols = c(likes, retweets, replies),\n               names_to = \"engage_type\",\n               values_to = \"n\")\n\nhead(long_tweets)\nggplot(long_tweets, aes(x = Date, y = n, colour = engage_type)) +\n  geom_line() +\n  scale_x_date(name = \"\", \n               date_breaks = \"1 day\",\n               date_labels = \"%d\",\n               expand = expansion(add = c(.5, .5))) +\n  scale_y_continuous(name = \"Engagements per Day\") + \n  scale_colour_discrete(name = \"\") +\n  ggtitle(\"August 2021\") +\n  theme(legend.position = c(.9, .8),\n        panel.grid.minor = element_blank())"},{"path":"twitter-data.html","id":"multiple-data-files","chapter":"H Twitter Data","heading":"H.2 Multiple Data Files","text":"Maybe now want compare data several months. First, get list files want combine. easiest directory, although can use pattern select files want systematic naming structure.use map_df() iterate list file paths, open read_csv(), return big data frame combined data. can pipe select() function get rid \"promoted\" columns.Now can make plot likes per day months.Notice changed date breaks labels x-axis. %B date code full month name. See ?strptime date codes.","code":"\nfiles <- list.files(\n  path = \"data/tweets\", \n  pattern = \"daily_tweet_activity_metrics\",\n  full.names = TRUE\n)\nall_daily_tweets <- purrr::map_df(files, read_csv) %>%\n  select(!starts_with(\"promoted\"))\nggplot(all_daily_tweets, aes(x = Date, y = likes)) +\n  geom_line(colour = \"dodgerblue\") +\n  scale_y_continuous(name = \"Likes per Day\") + \n  scale_x_date(name = \"\", \n               date_breaks = \"1 month\",\n               date_labels = \"%B\",\n               expand = expansion(add = c(.5, .5))) +\n  ggtitle(\"Likes 2021\")"},{"path":"twitter-data.html","id":"likes-by-month","chapter":"H Twitter Data","heading":"H.2.1 Likes by Month","text":"want plot likes month, first need column month. Use mutate() make new column, using lubridate::month() extract month name Date column.group new month column calculate sum likes. group_by() function causes subsequent functions operate inside groups, call ungroup(). example , sum(likes) function calculates sum total likes column separately month.column plot might make sense line plot summary.\nFigure H.3: Likes month.\nchange code section plot number tweets published per week?Hint: lubridate function month month(), function getting week likely ?","code":"\nlikes_by_month <- all_daily_tweets %>%\n  mutate(month = month(Date, label = TRUE)) %>%\n  group_by(month) %>%\n  summarise(total_likes = sum(likes)) %>%\n  ungroup()\n\nlikes_by_month\nggplot(likes_by_month, aes(x = month, y = total_likes, fill = month)) +\n  geom_col(color = \"black\", show.legend = FALSE) +\n  scale_x_discrete(name = \"\") +\n  scale_y_continuous(name = \"Total Likes per Month\",\n                     breaks = seq(0, 10000, 1000),\n                     labels = paste0(0:10, \"K\")) +\n  scale_fill_brewer(palette = \"Spectral\")\ntweets_by_week <- all_daily_tweets %>%\n  mutate(week = week(Date)) %>%\n  group_by(week) %>%\n  summarise(start_date = min(Date),\n            total_tweets = sum(`Tweets published`)) %>%\n  ungroup()\nggplot(tweets_by_week, aes(x = start_date, y = total_tweets)) +\n  geom_col(fill = \"hotpink\") +\n  scale_x_date(name = \"\",\n               date_breaks = \"1 month\", \n               date_labels = \"%B\") +\n  scale_y_continuous(name = \"Total Tweets per Week\")"},{"path":"twitter-data.html","id":"data-by-tweet","chapter":"H Twitter Data","heading":"H.3 Data by Tweet","text":"can also download twitter data tweet instead day. usually takes little longer download. can use pattern read combine tweet data files.^ start pattern means file name start . means match \"daily_tweet...\" files.First, open first file see need anything .look file Viewer, can set Tweet id column using scientific notation (1.355500e+18) instead full 18-digit tweet ID, gives different IDs value. ever want add ID numbers,safe represent characters. Set map files col_types specified, get rid promoted columns add month hour columns (reading date time column data).","code":"\ntweet_files <- list.files(\n  path = \"data/tweets\", \n  pattern = \"^tweet_activity_metrics\",\n  full.names = TRUE\n)\ntweets <- read_csv(tweet_files[1])\nct <- cols(\"Tweet id\" = col_character())\nall_tweets <- map_df(tweet_files, read_csv, col_types = ct) %>%\n  select(!starts_with(\"promoted\")) %>%\n  mutate(month = lubridate::month(time, label = TRUE),\n         hour = lubridate::hour(time))"},{"path":"twitter-data.html","id":"impressions-per-tweet","chapter":"H Twitter Data","heading":"H.3.1 Impressions per Tweet","text":"Now can look distribution impressions per tweet month.\nFigure H.4: Impressions per tweet per month.\ny-axis transformed \"pseudo_log\" show skewed data clearly (tweets get hundred impressions, can get thousands). See plot looks like change y-axis transformation.","code":"\nggplot(all_tweets, aes(x = month, y = impressions, fill = month)) +\n  geom_violin(show.legend = FALSE, alpha = 0.8) +\n  scale_fill_brewer(palette = \"Spectral\") +\n  scale_x_discrete(name = \"\") +\n  scale_y_continuous(name = \"Impressions per Tweet\",\n                     breaks = c(0, 10^(2:7)),\n                     labels = c(0, 10, 100, \"1K\", \"10K\", \"100K\", \"1M\"),\n                     trans = \"pseudo_log\") +\n  ggtitle(\"Distribution of Twitter Impressions per Tweet in 2021\")"},{"path":"twitter-data.html","id":"top-tweet","chapter":"H Twitter Data","heading":"H.3.2 Top Tweet","text":"can display Lisa's top tweet year.Top tweet 1190 likes:","code":"\ntop_tweet <- all_tweets %>%\n  slice_max(order_by = likes, n = 1)\n\nglue::glue(\"[Top tweet]({top_tweet$`Tweet permalink`}) with {top_tweet$likes} likes:\n\n---------------------------\n{top_tweet$`Tweet text`}\n---------------------------\n\") %>% cat()"},{"path":"twitter-data.html","id":"word-cloud","chapter":"H Twitter Data","heading":"H.3.3 Word Cloud","text":"can make word cloud top words tweet . (learn Chapter 9).","code":""},{"path":"twitter-data.html","id":"tweets-by-hour","chapter":"H Twitter Data","heading":"H.3.4 Tweets by Hour","text":"order make plot tweets hour, colouring data wherther sun , can join data table sunrise sunset times day Glasgow (download table region).Day column originally read character column, convert date import using col_types argument.Create matching Day column all_tweets, plus hour column plotting (factor structure starts day 8:00), tweet_time column comparing RiseTime SetTime columns, decimal hours.join sun table create timeofday column equals \"day\" sun \"night\" sun set.Check random rows make sure everything correctly.Plot hour along x-axis set fill colour timeofday. Use scale_*_manual() functions set custom colours day night.\nFigure H.5: Tweets per hour day\nGo line plot work function argument changing removing .","code":"\nsun <- read_csv(\"data/sunfact2021.csv\", \n                col_types = cols(\n                  Day = col_date(format=\"%d/%m/%Y\"),\n                  RiseTime = col_double(),\n                  SetTime = col_double()\n                ))\nsun_tweets <- all_tweets %>%\n  select(time) %>%\n  mutate(Day = date(time),\n         hour = factor(hour(time), \n                       levels = c(8:23, 0:7)),\n         tweet_time = hour(time) + minute(time)/60) %>%\n  left_join(sun, by = \"Day\") %>%\n  mutate(timeofday = ifelse(tweet_time>RiseTime & \n                            tweet_time<SetTime, \n                            yes = \"day\", \n                            no = \"night\"))\nslice_sample(sun_tweets, n = 10)\nmap <- aes(x = hour, \n           fill = timeofday, \n           colour = timeofday)\n\nggplot(sun_tweets, mapping = map) +\n  geom_bar(show.legend = FALSE) +\n  labs(x = \"\", \n       y = \"\",\n       title = \"Number of tweets by hour of the day\") +\n  scale_x_discrete(breaks = c(8:23, 0:7)[c(T, F, F, F)],\n                   drop = FALSE) +\n  scale_y_continuous(expand = c(0, 0, .1, 0)) +\n  scale_fill_manual(values = c(\"gold\", \"midnightblue\")) +\n  scale_colour_manual(values = c(\"darkgoldenrod1\", \"black\")) +\n  facet_wrap(~month(time, label = TRUE, abbr = FALSE), nrow = 3) +\n  theme(strip.background = element_rect(fill = \"white\", \n                                        color = \"transparent\"),\n        panel.grid = element_blank())"},{"path":"webpages.html","id":"webpages","chapter":"I Webpages","heading":"I Webpages","text":"tutorial, learn create simple webpage using R Markdown, link multiple pages, style content using css.CSS changes styles three levels headers (h2, h3, h4) sets third level italics.also gives paragraphs (p) green border double-spacing.Unordered Lists (ul) get:dotted red borderround cornersincreased padding top (10px) sides (30px)","code":""},{"path":"webpages.html","id":"webpage-create","chapter":"I Webpages","heading":"I.1 Create a webpage","text":"","code":""},{"path":"webpages.html","id":"create-a-project","chapter":"I Webpages","heading":"I.1.1 Create a project","text":"Choose New Project... File menu (save workspaces)Choose New Directory > Simple R Markdown WebsiteSet project name \"mywebpage\"","code":""},{"path":"webpages.html","id":"site-header","chapter":"I Webpages","heading":"I.1.2 Site header","text":"can set options like whether show table contents navigation bar look like. edit later add section menu.Open file _site.ymlOpen file _site.ymlReplace text following:\nname: \"mywebpage\"  \nauthor: \"NAME\"  \noutput_dir: \"docs\"  \noutput:  \n  html_document:  \n    self_contained:  \n    theme: \n      version: 4\n      bootswatch: yeti \nnavbar:  \n  title: \"First Webpage\"  \n    left:\n    - text: \"Home\"\n      href: index.html\n    - text: \"\"\n      href: .htmlReplace text following:Save file (change name)Save file (change name)","code":"name: \"mywebpage\"  \nauthor: \"YOUR NAME\"  \noutput_dir: \"docs\"  \noutput:  \n  html_document:  \n    self_contained: no  \n    theme: \n      version: 4\n      bootswatch: yeti \nnavbar:  \n  title: \"My First Webpage\"  \n    left:\n    - text: \"Home\"\n      href: index.html\n    - text: \"About\"\n      href: about.html"},{"path":"webpages.html","id":"edit-the-pages","chapter":"I Webpages","heading":"I.1.3 Edit the pages","text":"Edit text index.Rmd .Rmd pages. can use R markdown, including code chunks.","code":""},{"path":"webpages.html","id":"render-the-site","chapter":"I Webpages","heading":"I.1.4 Render the site","text":"upper right \"Build\" pane, click \"Build website\" hammer icon. render website automatically open browser window. Alternatively, type following Console pane:accidentally close website want look , re-render . Click docs directory Files tab lower right pane, click index.html choose View Web Browser","code":"\nbrowseURL(rmarkdown::render_site(encoding = 'UTF-8'))"},{"path":"webpages.html","id":"webpage-pages","chapter":"I Webpages","heading":"I.2 Add pages","text":"Create new .Rmd file webpageAdd content webpages using R MarkdownRe-render siteIf include linked content like image files, make sure copied main project directory linked using relative paths.get webpage online, copy contents docs directory web server. access web server, can make free websites using GitHub repository GitHub Pages).","code":""},{"path":"webpages.html","id":"webpage-styles","chapter":"I Webpages","heading":"I.3 Styles","text":"can change appearance website changing theme _site.yml file (see Appendix F), instructions help customise things even .","code":""},{"path":"webpages.html","id":"add-custom-styles","chapter":"I Webpages","heading":"I.3.1 Add custom styles","text":"can add custom style sheet (document determines element website look) adding line css: style.css html_document: _site.yml file.need create file named style.css add custom styles . web thousands guides CSS, codeacademy great interactive tutorials learning html, css, even advanced web coding like javascript.However, basics css easy learn best just start playing around . Add following text style.css file re-render website.","code":"output:  \n  html_document:  \n    self_contained: no  \n    theme: \n      version: 4\n      bootswatch: readable\n    css: style.css"},{"path":"webpages.html","id":"change-global-fonts-and-colours","chapter":"I Webpages","heading":"I.3.2 Change global fonts and colours","text":"make text website larger, different font, change text background colours.theme using might css blocks styles trying change. can add !important end colon override .","code":"body {\n  font-size: 2em;\n  font-family: \"Times New Roman\";\n  color: white;\n  background-color: #660000;\n}"},{"path":"webpages.html","id":"change-certain-elements","chapter":"I Webpages","heading":"I.3.3 Change certain elements","text":"Maybe want change font colour headings, rest text. can apply style specific element type specifying element name curly brackets.","code":"h1, h2, h3 {\n  text-align: center;\n  color: hsl(0, 100%, 20%);\n}\n\nh3 {\n  font-style: italic;\n}\n\np {\n  border: 1px solid green;\n  padding: 10px;\n  line-height: 2;\n}\n\nul {\n  border: 3px dotted red;\n  border-radius: 10px;\n  padding: 10px 30px;\n}"},{"path":"webpages.html","id":"example-using-the-styles-above","chapter":"I Webpages","heading":"I.4 Example using the styles above","text":"CSS changes styles three levels headers (h2, h3, h4) sets third level italics.","code":""},{"path":"webpages.html","id":"level-3-header","chapter":"I Webpages","heading":"I.4.1 Level 3 header","text":"also gives paragraphs (p) green border double-spacing.","code":""},{"path":"webpages.html","id":"level-4-header","chapter":"I Webpages","heading":"I.4.1.1 Level 4 header","text":"Unordered Lists (ul) get:dotted red borderround cornersincreased padding top (10px) sides (30px)","code":""},{"path":"teams.html","id":"teams","chapter":"J Using Teams","heading":"J Using Teams","text":"","code":""},{"path":"teams.html","id":"what-is-the-best-way-to-share-r-code-on-microsoft-teams","chapter":"J Using Teams","heading":"J.1 What is the best way to share R code on Microsoft Teams?","text":"run problem need get help MS Teams. right way share code?Please share screenshot unless asked, code giving problems, something weird happening RStudio IDE.code working, almost always better copy paste code, people trying help can copy paste code exactly try , rather re-type everything image. look example. screenshot RStudio IDE might look code throws error. code block labelled cars causing error.screenshot RStudio IDE showing error indicated red arrowThe particular error code threw wasAnd code threw wasNote can select copy code wanted run , rely screenshot.Copying code /error RStudio easy; just highlight code using mouse press Ctrl-C.just paste code Teams channel, formatting nice; lose formatting allows read code easily.screenshot MS Teams code pasted directly . pretty!two ways get code Teams, one quick easy flexible, another far flexible requires steps.","code":"Error in mtcars %>% filter(mpg > 20) : could not find function \"%>%\"\nmtcars %>%\n  filter(mpg > 20)"},{"path":"teams.html","id":"quick-and-easy-method","chapter":"J Using Teams","heading":"J.1.1 Quick and easy method","text":"First, just short function call, single line, error, can signal text meant appear code surrounding single backticks---.e., putting backtick (`) right right text want formatted code. Teams automatically format ., surrounded error message Error mtcars %>% filter(mpg > 20) : find function \"%>%\" single backticks indicate code, typed triple backticks start line create code chunk. (next method might easier making multi-line posts.)","code":""},{"path":"teams.html","id":"more-flexible-method","chapter":"J Using Teams","heading":"J.1.2 More flexible method","text":"flexible (possibly easier) way. pasting text, click icon looks like letter \"\", highlighted .  open options text formatting allow easily create multi-line post. options, select icon looks like <\/> stands code.  code icon open window can paste code. dropdown menu top right, select 'R' type code. give syntax highlighting.  might begin post.  #### Taking one step !really want go rabbit hole, can create reproducible example using reprex package tidyverse.","code":""},{"path":"teams.html","id":"screenshots","chapter":"J Using Teams","heading":"J.2 Screenshots","text":"need take screenshot, example, something goes wrong installation, please use screenshot functions built-computer rather taking photo screen using phone.","code":""},{"path":"teams.html","id":"taking-a-screenshot-on-windows","chapter":"J Using Teams","heading":"J.2.1 Taking a screenshot on Windows","text":"Use Windows search function search \"Snip & Sketch\"Use Windows search function search \"Snip & Sketch\"Click \"New\" \"Snip now\"Click \"New\" \"Snip now\"Use tool select area screen want take screenshot . photo automatically copied clipboard, can paste e.g., Teams chat document using Ctrl + V can also click Save icon top right save screenshot image file.Use tool select area screen want take screenshot . photo automatically copied clipboard, can paste e.g., Teams chat document using Ctrl + V can also click Save icon top right save screenshot image file.shortcut snipping tool Win + Shift + S.shortcut snipping tool Win + Shift + S.","code":""},{"path":"teams.html","id":"taking-a-screenshot-on-mac","chapter":"J Using Teams","heading":"J.2.2 Taking a screenshot on Mac","text":"Press Shift + Command (⌘) + 4 bring Screenshot app.Press Shift + Command (⌘) + 4 bring Screenshot app.Use tool select area screen want take screenshot .Use tool select area screen want take screenshot .see thumbnail corner screen, click edit screenshot drag e.g., Teams chat.see thumbnail corner screen, click edit screenshot drag e.g., Teams chat.photo also automatically save desktop.photo also automatically save desktop.","code":""},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt book. must give appropriate credit, provide link license, indicate changes made. adapt material, must distribute contributions license original.material book adapted DeBruine & Barr (2020) Nordmann et al. (2021).","code":""},{"path":"license.html","id":"reference","chapter":"License","heading":"J.3 Reference","text":"Nordmann, E. & DeBruine, L. (2022) Applied Data Skills: Processing & Presenting Data. v1.0. https://psyteachr.github.io/ads/(DOI coming soon)","code":""},{"path":"references-1.html","id":"references-1","chapter":"References","heading":"References","text":"","code":""}]
