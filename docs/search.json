[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"book provides overview basic skills needed turn raw data informative summaries visualisations presented professional reports, presentations, dashboards. book introduce learners R (R Core Team, 2021), programming language can help automate working data. book cover importing processing data spreadsheets, producing data summaries descriptive statistics tables, creating beautiful informative visualisations, constructing reports, presentations, dashboards automatically update underlying data changes.end book, able use R :clean process datasummarise datainformatively visualise datacreate reusable report templates","code":""},{"path":"intro.html","id":"intro","chapter":"1 Intro to R, RStudio and R Markdown","heading":"1 Intro to R, RStudio and R Markdown","text":"","code":""},{"path":"intro.html","id":"ilo-intro","chapter":"1 Intro to R, RStudio and R Markdown","heading":"1.1 Intended Learning Outcomes","text":"Understand structure content courseInstall R RStudioUnderstand reproducibility","code":""},{"path":"reports.html","id":"reports","chapter":"2 Reports with R Markdown","heading":"2 Reports with R Markdown","text":"","code":""},{"path":"reports.html","id":"ilo-reports","chapter":"2 Reports with R Markdown","heading":"2.1 Intended Learning Outcomes","text":"able knit simple reproducible report R MarkdownBe able edit Markdown show/hide code use inline codingBe able identify different types data","code":""},{"path":"reports.html","id":"resources-repro","chapter":"2 Reports with R Markdown","heading":"2.2 Resources","text":"R Markdown Cheat SheetkableExtraR Markdown reference GuideR Markdown TutorialR Markdown: Definitive Guide Yihui Xie, J. J. Allaire, & Garrett GrolemundProject Structure Danielle NavarroHow name files Jenny Bryan","code":""},{"path":"reports.html","id":"setup-repro","chapter":"2 Reports with R Markdown","heading":"2.3 Setup","text":"","code":"\nlibrary(tidyverse)\nlibrary(knitr)"},{"path":"reports.html","id":"projects","chapter":"2 Reports with R Markdown","heading":"2.4 Organising a project","text":"First, need get organised.Projects RStudio way group files need one project. projects include scripts, data files, output files like PDF version script images.Make new directory keep materials class.Choose New Project... File menu create new project called 02-reports directory.","code":""},{"path":"reports.html","id":"working-directory","chapter":"2 Reports with R Markdown","heading":"2.4.1 Working Directory","text":"put files? usually want scripts data files one subtree computer's directory structure. Usually single working directory data scripts stored.script reference files three locations, using appropriate format.Never set change working directory script.R Markdown files automatically use directory .Rmd file working directory.script needs file subdirectory working directory, , data/widgets_gadgets.xlsx, load using relative path accessible move working directory another location computer:load using absolute path:Also note convention using forward slashes, unlike Windows-specific convention using backward slashes. make references files platform independent.","code":"\ndat <- read_csv(\"data/widgets_gadgets.xlsx\")  # correct\ndat <- read_csv(\"C:/Carla's_files/yearly_reports/2020-2021/data/widgets_gadgets.xlsx\")   # wrong"},{"path":"reports.html","id":"naming-things","chapter":"2 Reports with R Markdown","heading":"2.4.2 Naming Things","text":"Name files people computers can easily find things. important principles:file directory names contain letters, numbers, dashes, underscores, full stop (.) file name extension (means spaces!)consistent capitalisation (prefer never use make easy remember)use underscores (_) separate parts file name, dashes (-) separate words sectionname files pattern alphabetises sensible order makes easy find file looking forprefix filename underscore move top list, prefix files numbers control orderFor example, file names mess:report.docreport final.docData (Customers) 11-15.xlsCustomers Data Nov 12.xlsfinal report2.docproject notes.txtVendor Data November 15.xlsHere one way structure similar files structure easy human scan list use code find relevant files. See can figure last one ._project-notes.txtreport_v1.docreport_v2.docreport_v3.docdata_customer_2021-11-12.xlsdata_customer_2021-11-15.xlsvendor-data_2021-11-15.xlsdata-vendor-2021_11_15.xlsdata_vendor_2021-11-15.xlsdata_2021-11-15_vendor.xlsThink ways name files . Look project files see can improve.","code":""},{"path":"reports.html","id":"r-markdown","chapter":"2 Reports with R Markdown","heading":"2.5 R Markdown","text":"lesson, learn make R Markdown document table contents, appropriate headers, tables, images, inline R.use R Markdown create reproducible reports, enables mixing text code. reproducible script contain sections code code blocks. code block starts ends three backtick symbols row, information code curly brackets, {r chunk-name, echo=FALSE} (runs code, show text code block compiled document). text outside code blocks written markdown, way specify formatting, headers, paragraphs, lists, bolding, links.open new R Markdown file template, see example document several code blocks . create HTML PDF report R Markdown (Rmd) document, compile . Compiling document called knitting RStudio. button looks like ball yarn needles click compile file report.Create new R Markdown file File > New File > R Markdown... menu. Change title author, click knit button create html file.","code":""},{"path":"reports.html","id":"yaml-header","chapter":"2 Reports with R Markdown","heading":"2.5.1 YAML Header","text":"YAML header can set several options.Try changing values false true see options .df_print: kable option prints data frames using knitr::kable. learn customise tables.built-bootswatch themes : default, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united, yeti. can view download themes.\nFigure 2.1: Light themes versions 3 4.\n","code":"---\ntitle: \"My Demo Document\"\nauthor: \"Me\"\noutput:\n  html_document:\n    df_print: kable\n    theme: \n      version: 4\n      bootswatch: yeti\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: false\n    toc_depth: 3\n    number_sections: false\n---"},{"path":"reports.html","id":"setup","chapter":"2 Reports with R Markdown","heading":"2.5.2 Setup","text":"create new R Markdown file RStudio, setup chunk automatically created.can set default options document .code sets following options:fig.width  = 8 : default figure width 8 inches (can change individual figures)fig.height = 5 : default figure height 5 inchesfig.path   = 'images/' : figures saved directory \"images\"echo       = FALSE : show code chunks rendered documentwarning    = FALSE : show function warningsmessage    = FALSE : show function messagescache      = FALSE : run code create images objects time knit (set TRUE time-consuming code)Find list current chunk options typing str(knitr::opts_chunk$get()) console. See knitr options documentation explanations possible options.can also add packages need chunk using library(). Often working script, realize need load another add-package. bury call library(package_I_need) way script. Put top, user overview packages needed.frequently use functions package tidyverse, load setup chunk using code install.packages(\"tidyverse\")library(tidyverse)load(tidyverse)","code":"```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)``````{r setup, include=FALSE}\nknitr::opts_chunk$set(\n  fig.width  = 8, \n  fig.height = 5, \n  fig.path   = 'images/',\n  echo       = FALSE, \n  warning    = TRUE, \n  message    = FALSE,\n  cache      = FALSE\n)```"},{"path":"reports.html","id":"structure","chapter":"2 Reports with R Markdown","heading":"2.5.3 Markdown","text":"can use visual markdown editor RStudio version 1.4 higher. button top source pane pen tip. useful complex styling, can also use common plain-text style markups:Headers created prefacing subtitles one hashes (#). include table contents (toc) YAML, created document headers.Format text italics bold surrounding text one two asterisks underscores.Make lists using numbers, asterisks dashes items. Indent items make nested lists.Make links like : [psyTeachR](https://psyteachr.github.io/)Download R Markdown Cheat Sheet learn .Delete default text add structure document creating headers subheaders. going present summary table plot data.","code":""},{"path":"reports.html","id":"code-chunks","chapter":"2 Reports with R Markdown","heading":"2.5.4 Code Chunks","text":"can include code chunks create display images, tables, computations include text. start loading data.First, create code chunk document. can type backticks chunk header manually, use keyboard shortcut (alt-cmd-). code loads data web.can add comments inside R chunks hash symbol (#). R interpreter ignore characters hash end line.usually good practice start code chunk comment explains , especially code explained text report.name objects clearly, often need add clarifying comments. example, named three objects total_number_of_sales, first_year last_year, omit comments. bit art comment code well.","code":"\n# https://www.kaggle.com/kyanyoga/sample-sales-data\nsales <- read_csv(\"data/sales_data_sample.csv\")\n# important numbers\n\nn <- nrow(sales) # the total number of sales\nfirst <- min(sales$YEAR_ID) # the first year in the table\nlast <- max(sales$YEAR_ID) # the last year in the table"},{"path":"reports.html","id":"tables","chapter":"2 Reports with R Markdown","heading":"2.5.5 Tables","text":"Next, create code chunk want display summary table. use tidyverse functions learn data wrangling lectures count number products per year product line.table OK, reader-friendly changing column labels adding caption. can also use specialised functions kableExtra format tables. powerful, take practice.\nTable 2.1: Number sales per product line year.\nSee many different ways can style table . Use kableExtra vignette inspiration.","code":"\nsummary_table <- sales %>%\n  group_by(YEAR_ID, PRODUCTLINE) %>%\n  count() %>%\n  spread(key = YEAR_ID, value = n) %>%\n  print()## # A tibble: 7 x 4\n## # Groups:   PRODUCTLINE [7]\n##   PRODUCTLINE      `2003` `2004` `2005`\n##   <chr>             <int>  <int>  <int>\n## 1 Classic Cars        366    442    159\n## 2 Motorcycles         109    164     58\n## 3 Planes               85    161     60\n## 4 Ships                81    115     38\n## 5 Trains               28     37     12\n## 6 Trucks and Buses    110    142     49\n## 7 Vintage Cars        221    284    102\nlibrary(kableExtra)\n\nkable(summary_table, \n      col.names = c(\"\", \"2003\", \"2004\", \"2005\"),\n      caption = \"Number of sales per product line each year.\") %>%\n  add_header_above(c(\"Product Lines\" = 1, \"Sales\" = 3), line = F, bold = T) %>%\n  row_spec(0, color = \"grey\") %>%\n  kable_classic(full_width = F) %>%\n  column_spec(1, bold = T, border_right = T) %>%\n  # highlight sales over 200 in red\n  column_spec(2, color = ifelse(summary_table$`2003` > 200, \"red\", \"black\")) %>%\n  column_spec(3, color = ifelse(summary_table$`2004` > 200, \"red\", \"black\")) %>%\n  column_spec(4, color = ifelse(summary_table$`2005` > 200, \"red\", \"black\")) "},{"path":"reports.html","id":"images","chapter":"2 Reports with R Markdown","heading":"2.5.6 Images","text":"Next, create code chunk want display image document. put table. use code learn Chapter 3 show range sales within country.Notice figure caption formatted chunk options.\nFigure 2.2: number items order product line.\n![Things Hyperbole Half{float: right; style=\"width:50%\"} can also include images create R using markdown syntax images:","code":"```{r item-by-line, fig.cap=\"The number of items in each order by product line.\"}\nggplot(sales, aes(x = COUNTRY, y = SALES, fill = COUNTRY)) +\n  geom_violin(alpha = 0.5, show.legend = FALSE) +\n  xlab(\"\") +\n  scale_y_continuous(name = \"Sales per order\", \n                     breaks = seq(0, 14000, 2000), \n                     labels = paste0(\"£\", seq(0, 14, 2), \"K\")) +\n  scale_fill_viridis_d() +\n  theme(text = element_text(size = 20, family = \"Times\"),\n        axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))```![All the Things by Hyperbole and a Half](images/memes/x-all-the-things.png){style=\"float: right; width:50%\"}"},{"path":"reports.html","id":"in-line-r","chapter":"2 Reports with R Markdown","heading":"2.5.7 In-line R","text":"Sometimes just need insert number data text report. Inline R code lets . First, calculate total number sales per year code block. block can hidden final report.can insert results paragraph inline R code looks like :Rendered text:total sales per year £3,516,980 (2003), £4,724,163 (2004), £1,791,487 (2005).markdown document, new paragraphs created skip blank line. include single line break sentence, like , show report. can good way organise complicated text inline code.","code":"\nsales_per_year <- sales %>%\n  group_by(YEAR_ID) %>%\n  summarise(total = sum(SALES)) %>%\n  # this adds commas as thousands separators\n  mutate(fmt = format(total, big.mark=\",\"))\n\nsales03 <- sales_per_year %>% filter(YEAR_ID == 2003) %>% pull(fmt)\nsales04 <- sales_per_year %>% filter(YEAR_ID == 2004) %>% pull(fmt)\nsales05 <- sales_per_year %>% filter(YEAR_ID == 2005) %>% pull(fmt)The total sales per year were \n£3,516,980 (2003), \n£4,724,163 (2004), and \n£1,791,487 (2005)."},{"path":"reports.html","id":"output-formats","chapter":"2 Reports with R Markdown","heading":"2.5.8 Output Formats","text":"can knit file PDF Word right packages installed computer. can also create presentations, dashboards, websites, even books R markdown, learn Chapter 9. fact, book reading right now created using R markdown.","code":""},{"path":"reports.html","id":"data-types","chapter":"2 Reports with R Markdown","heading":"2.6 Data Types","text":"","code":""},{"path":"reports.html","id":"glossary-reports","chapter":"2 Reports with R Markdown","heading":"2.7 Glossary","text":"","code":""},{"path":"viz.html","id":"viz","chapter":"3 Basic Data Visualisation","heading":"3 Basic Data Visualisation","text":"","code":""},{"path":"viz.html","id":"ilo-viz","chapter":"3 Basic Data Visualisation","heading":"3.1 Intended Learning Outcomes","text":"Understand difference categorical continuous dataBe able choose appropriate plots dataCreate histograms, bar plots, scatter plots, trend lines, change plot size position code chunk","code":""},{"path":"data.html","id":"data","chapter":"4 Data Import and Relations","heading":"4 Data Import and Relations","text":"","code":""},{"path":"data.html","id":"ilo-data","chapter":"4 Data Import and Relations","heading":"4.1 Intended Learning Outcomes","text":"able import data range sources using rio::import()able identify handle common problems data importBe able match related data multiple tables","code":""},{"path":"tidy.html","id":"tidy","chapter":"5 Data Tidying","heading":"5 Data Tidying","text":"","code":""},{"path":"tidy.html","id":"ilo-tidy","chapter":"5 Data Tidying","heading":"5.1 Intended Learning Outcomes","text":"able change data long wide formatsSeparate, mutate, rename column headers category labels","code":""},{"path":"tidy.html","id":"pipes","chapter":"5 Data Tidying","heading":"5.2 Pipes","text":"Pipes way order code readable format.say small Excel table 10 customer IDs, many widgets gadgets purchased 2020 2021. want calculate total number items purchased per year make table sorted total number items purchased.One way creating new object every step using object next step. pretty clear, created several unnecessary data objects environment. can get confusing long scripts.can name object data keep replacing old data object new one step. keep environment clean, recommend makes easy accidentally run code order running line--line development debugging.One way avoid extra objects nest functions, literally replacing data object code generated previous step. can fine short chains.gets extremely confusing long chains:pipe lets \"pipe\" result function next function, allowing put code logical order without creating many extra objects.can read code top bottom follows:Read excel file\npath data/widgets_gadgets.xlsx\nskipping first two rows,\nnew column names; \npath data/widgets_gadgets.xlsxskipping first two rows,new column names; thenGather create key column item_year value column number columns 2 5; thenSeparate column item_year 2 new columns called item year, separate \"_\"; thenGroup columns item year; thenSummarise new column called year_total sum number column group drop groups; thenMutate table add new column called total sum year_total column group; thenSpread make new columns key names year values year_totalYou can make intermediate objects whenever need break code getting complicated need debug something.can debug pipe highlighting beginning just pipe want stop . Try highlighting data <- end separate function typing cmd-return. data look like now?","code":"\n# get the data with better column names\ndata_original <- readxl::read_excel(\n  path = \"data/widgets_gadgets.xlsx\", \n  skip = 2,\n  col_names = c(\"customer_id\", \n                \"widgets_2020\", \n                \"widgets_2021\", \n                \"gadgets_2020\", \n                \"gadgets_2021\")\n)\n\n# gather columns 2 to 5 into \"item_year\" and \"number\" columns\ndata_gathered <- gather(data = data_original, \n                        key = item_year, \n                        value = number, 2:5)\n\n# separate the item_year column at the _ into \"item\" and \"year\" columns\ndata_separated <- separate(data = data_gathered, \n                           col = item_year, \n                           into = c(\"item\", \"year\"), \n                           sep = \"_\")\n\n# group the data by item and year\ndata_grouped <- group_by(.data = data_separated, item, year)\n\n# calculate the total number for each item/year \ndata_summarised <- summarise(.data = data_grouped, \n                             year_total = sum(number), \n                             .groups = \"drop\")\n\n# spread the year_total column into columns by year\ndata_spread <- spread(data = data_summarised, \n                      key = year, \n                      value = year_total)\nmean_petal_width <- round(mean(iris$Petal.Width), 2)\n# do not ever do this!!\ndata <- spread(\n  data = summarise(\n    .data = group_by(\n      .data = separate(\n        data = gather(\n          data = readxl::read_excel(\n            path = \"data/widgets_gadgets.xlsx\", \n            skip = 2,\n            col_names = c(\"customer_id\", \n                          \"widgets_2020\", \n                          \"widgets_2021\", \n                          \"gadgets_2020\", \n                          \"gadgets_2021\")), \n          key = item_year, value = number, 2:5), \n        item_year, c(\"item\", \"year\"), sep = \"_\"), \n      item, year), \n    year_total = sum(number), .groups = \"drop\"),\n  key = year, value = year_total)\ndata <- readxl::read_excel(\n  path = \"data/widgets_gadgets.xlsx\", \n  skip = 2,\n  col_names = c(\"customer_id\", \n                \"widgets_2020\", \n                \"widgets_2021\", \n                \"gadgets_2020\", \n                \"gadgets_2021\")\n) %>%\n  gather(key = item_year, value = number, 2:5) %>%\n  separate(col = item_year, into = c(\"item\", \"year\"), sep = \"_\") %>%\n  group_by(item, year) %>%\n  summarise(year_total = sum(number), .groups = \"drop\") %>%\n  spread(key = year, value = year_total)"},{"path":"wrangle.html","id":"wrangle","chapter":"6 Data Wrangling","heading":"6 Data Wrangling","text":"","code":""},{"path":"wrangle.html","id":"ilo-wrangle","chapter":"6 Data Wrangling","heading":"6.1 Intended Learning Outcomes","text":"able select filter data relevanceBe able calculate row means","code":""},{"path":"summary.html","id":"summary","chapter":"7 Data Summaries","heading":"7 Data Summaries","text":"","code":""},{"path":"summary.html","id":"ilo-summary","chapter":"7 Data Summaries","heading":"7.1 Intended Learning Outcomes","text":"Summarise data groupsProduce well-formatted tables","code":""},{"path":"custom.html","id":"custom","chapter":"8 Customising Visualisations","heading":"8 Customising Visualisations","text":"","code":""},{"path":"custom.html","id":"ilo-custom","chapter":"8 Customising Visualisations","heading":"8.1 Intended Learning Outcomes","text":"Customise plots consistent styleCreate high quality plots like BBC, NYT, 538","code":""},{"path":"present.html","id":"present","chapter":"9 Dashboards, Reports, and Presentations","heading":"9 Dashboards, Reports, and Presentations","text":"","code":""},{"path":"present.html","id":"ilo-present","chapter":"9 Dashboards, Reports, and Presentations","heading":"9.1 Intended Learning Outcomes","text":"Structure data report, dashboard, presentation formatsInclude table contents, figure table captions, references longer reports","code":""},{"path":"present.html","id":"resources-present","chapter":"9 Dashboards, Reports, and Presentations","heading":"9.2 Resources","text":"RStudio Formats","code":""},{"path":"next.html","id":"next","chapter":"10 What's Next","heading":"10 What's Next","text":"","code":""},{"path":"next.html","id":"ilo-next","chapter":"10 What's Next","heading":"10.1 Intended Learning Outcomes","text":"familiar range applications using RIdentify appropriate sources continued learning","code":""},{"path":"installing-r.html","id":"installing-r","chapter":"A Installing R","heading":"A Installing R","text":"Installing R RStudio usually straightforward. sections explain helpful YouTube video .","code":""},{"path":"installing-r.html","id":"installing-base-r","chapter":"A Installing R","heading":"A.1 Installing Base R","text":"Install base R. Choose download link operating system (Linux, Mac OS X, Windows).Mac, install latest release newest R-x.x.x.pkg link (legacy version older operating system). install R, also install XQuartz able use visualisation packages.installing Windows version, choose \"base\" subdirectory click download link top page. install R, also install RTools; use \"recommended\" version highlighted near top list.using Linux, choose specific operating system follow installation instructions.","code":""},{"path":"installing-r.html","id":"installing-rstudio","chapter":"A Installing R","heading":"A.2 Installing RStudio","text":"Go rstudio.com download RStudio Desktop (Open Source License) version operating system list titled Installers Supported Platforms.","code":""},{"path":"installing-r.html","id":"rstudio-settings","chapter":"A Installing R","heading":"A.3 RStudio Settings","text":"settings fix immediately updating RStudio. Go Global Options... Tools menu (⌘,), General tab, uncheck box says Restore .RData workspace startup. keep things around workspace, things get messy, unexpected things happen. always start clear workspace. also means never want save workspace exit, set Never. thing want save scripts.may also want change appearance code. Different fonts themes can sometimes help visual difficulties dyslexia.\nFigure .1: RStudio General Appearance settings\nmay also want change settings Code tab. Foe example, Lisa prefers two spaces instead tabs code likes able see whitespace characters. matter personal preference.\nFigure .2: RStudio Code settings\n","code":""},{"path":"installing-r.html","id":"installing-latex","chapter":"A Installing R","heading":"A.4 Installing LaTeX","text":"can install LaTeX typesetting system produce PDF reports RStudio. Without additional installation, able produce reports HTML PDF. course require make PDFs. generate PDF reports, additionally need install tinytex (Xie, 2021) run following code:","code":"\ntinytex::install_tinytex()"},{"path":"symbols.html","id":"symbols","chapter":"B Symbols","heading":"B Symbols","text":"\nFigure B.1: Image James Chapman/Soundimals\n","code":""},{"path":"conventions.html","id":"conventions","chapter":"C Conventions","heading":"C Conventions","text":"book use following conventions:Generic code: list(number = 1, letter = \"\")Highlighted code: list(number = 1, letter = \"\")File paths: data/sales.csvR Packages: tidyverseFunctions: paste()Strings: \"Lisa\", \"Emily\"Numbers: 100, 3.14Logical values: TRUE, FALSEGlossary items: ordinalCitations: Wickham (2021)Internal links: Chapter 3External links: Mastering ShinyMenu/interface options: New File...Quiz question: going learn lot: TRUEFALSEYou found !Informational asides.Notes warn something.Notes things cause serious errors.Try .","code":"\n# code chunks\npaste(\"Applied\", \"Data\", \"Skills\", 1, sep = \" \")## [1] \"Applied Data Skills 1\""},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt book. must give appropriate credit, provide link license, indicate changes made. adapt material, must distribute contributions license original.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
