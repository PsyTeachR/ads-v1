[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"book provides overview basic skills needed turn raw data informative summaries visualisations presented professional reports presentations. book introduce learners R (R Core Team, 2021), programming language can help automate working data. book cover importing processing data spreadsheets, producing data summaries descriptive statistics tables, creating beautiful informative visualisations, constructing reports presentations automatically update underlying data changes.end book, able use R :clean process datasummarise datainformatively visualise datacreate reusable report templates","code":""},{"path":"index.html","id":"structure-of-the-course","chapter":"Overview","heading":"0.1 Structure of the course","text":"book accompanies 10-week course, covering one chapter per week. chapter introduce new skills concepts using concrete examples. various points, multiple-choice fill---blank questions check understanding. chapter accompanying walk-videos, instructor demonstrates skills covered chapter. chapter also accompanying exercises reinforce learning.","code":""},{"path":"index.html","id":"how-to-learn-data-skills","chapter":"Overview","heading":"0.2 How to learn data skills","text":"Learning data skills kind like gym membership (thanks Phil McAleer analogy). given state---art equipment use instructions use , data skills get stronger unless practice.Data skills require memorise lots code. introduced many different functions, main skill learn efficiently find information need. require getting used structure help files cheat sheets, learning Goggle problem choose helpful solution, learning read error messages.Learning code involves making lot mistakes. mistakes completely essential process, try feel frustrated. Many chapter exercises give broken code fix get experience seeing common errors look like. become experienced coder, might make fewer errors, recover much faster.","code":""},{"path":"intro.html","id":"intro","chapter":"1 Intro to R and RStudio","heading":"1 Intro to R and RStudio","text":"","code":""},{"path":"intro.html","id":"ilo-intro","chapter":"1 Intro to R and RStudio","heading":"1.1 Intended Learning Outcomes","text":"Install R RStudioBe able install add-packagesBe able get help packages functionsBe able create objects writing running code console","code":""},{"path":"intro.html","id":"walkthrough-video","chapter":"1 Intro to R and RStudio","heading":"1.2 Walkthrough video","text":"walkthrough video chapter available via Echo360. recommend first trying work section book watching video get stuck, like information. feel slower just starting video, learn long-run.","code":""},{"path":"intro.html","id":"intro-r-rstudio","chapter":"1 Intro to R and RStudio","heading":"1.3 R and RStudio","text":"R programming language write code RStudio Integrated Development Environment (IDE) makes working R easier. Think knowing English using plain text editor like NotePad write book versus using word processor like Microsoft Word. , much harder without things like spell-checking formatting able use advanced features Word developed. similar way, can use R without R Studio recommend . RStudio serves text editor, file manager, spreadsheet viewer, . key thing remember although work using RStudio course, actually using two pieces software means time--time, may separate updates.","code":""},{"path":"intro.html","id":"intro-installing-r","chapter":"1 Intro to R and RStudio","heading":"1.4 Installing R and RStudio","text":"Appendix technical details installing R RStudio computer. need help installing R, please ask Teams attend office hours. installed R RStudio come back chapter. already R /RStudio installed, recommend updating latest version work course. Appendix B details . , concentrate introducing RStudio's interface getting configured.","code":""},{"path":"intro.html","id":"rstudio_ide","chapter":"1 Intro to R and RStudio","heading":"1.4.1 RStudio","text":"installed R, gave computer ability process R programming language, also installed app called \"R\". never use app. Instead, use RStudio. RStudio arranged four window panes.\nFigure 1.1: RStudio IDE\ndefault, upper left pane source pane, view, write, edit code files view data tables spreadsheet format. first open RStudio, pane display open document load data - worry, get soon.lower left pane console pane, can type commands view output messages. can write code console test . code run can create objects environment, code saved. need write code script source pane save .right panes several different tabs show information code. used tabs upper right pane Environment tab Help tab. environment tab lists information objects defined code. learn Help tab Section 1.6.5.lower right pane, used tabs Files tab directory structure, Plots tab plots made script, Packages tab managing add-packages (see Section 1.6), Viewer tab display reports created scripts. can change location panes tabs shown Preferences > Pane Layout.","code":""},{"path":"intro.html","id":"intro-reproducibility","chapter":"1 Intro to R and RStudio","heading":"1.4.2 Reproducibility","text":"class, learning make reproducible reports. involves writing scripts transform data, create summaries visualisations, embed report way always gives results.things reproducibly, others (future ) can understand check work. can also reuse work easily. example, need create report every month social media analytics company, reproducible report allows download new month's data create report within seconds. might take little longer set report first instance reproducible methods, time saves long run invaluable.Appendix .3 shows change two important settings global Options increase reproducibility. settings :Restore .RData workspace startup: CheckedNot CheckedSave workspace .RData exit: AlwaysNeverAsk","code":""},{"path":"intro.html","id":"themes-and-accessiblilty","chapter":"1 Intro to R and RStudio","heading":"1.4.3 Themes and accessiblilty","text":"can customise R Studio looks make work . Click Tools - Global Options - Appearance. can change default font, font size, general appearance R Studio, including using dark mode. Play around settings see prefer - going spend lot time R, might well look nice!","code":""},{"path":"intro.html","id":"intro-sessions","chapter":"1 Intro to R and RStudio","heading":"1.5 Sessions","text":"settings configured correctly, open RStudio start writing code, loading packages, creating objects, new session Environment tab completely empty. find code working figure , might worth restarting R session. clear environment detach loaded packages - think like restarting phone. several ways can restart R:Menu: Session > Restart RCmd-Shift-F10 Ctl-Shift-F10type .rs.restartR() consoleTry now. Additionally, now good time create notebook can keep record useful hints tips things try code working. Add \"restart R session\" notebook first item.","code":""},{"path":"intro.html","id":"packages","chapter":"1 Intro to R and RStudio","heading":"1.6 Packages and functions","text":"install R access range functions including options rglossary(\"data wrangling\")` statistical analysis. functions included default installation typically referred base R can think like default apps come pre-loaded phone.One great things R, however, user extensible: anyone can create new add-extends functionality. currently thousands packages R users created solve many different kinds problems, just simply fun. example, packages data visualisation, machine learning, interactive dashboards, web scraping, playing games Sudoku.Add-packages distributed base R, downloaded installed archive, way , instance, download install PokemonGo smartphone. main repository packages reside called CRAN, Comprehensive R Archive Network.important distinction installing package loading package.","code":""},{"path":"intro.html","id":"install-package","chapter":"1 Intro to R and RStudio","heading":"1.6.1 Installing a package","text":"done using install.packages(). like installing app phone: app remain installed remove . instance, want use PokemonGo phone, install App Store Play Store; re-install time want use . launch app, run background close restart phone. Likewise, install package, package available (loaded) every time open R.Install esquisse package system. package lets create plots interactively copy code needed make reproducibly.already packages like ggplot2 shiny installed, also install dependencies . get message says something like package ‘esquisse’ successfully unpacked MD5 sums checked, installation successful.Never install package inside script. console pane.can also install multiple packages . command install packages using class. take , try middle tutorial!","code":"\n# type this in the console pane\ninstall.packages(\"esquisse\")\ninstall.packages(\n  \"tidyverse\",      # for everything\n  \"rio\",            # for data import\n  \"kableExtra\",     # for nice tables\n  \"ggwordcloud\",    # for word clouds\n  \"tidytext\",       # for parsing text for word clouds\n  \"patchwork\",      # for multi-part plots\n  \"ggthemes\",       # for themed plots\n  \"glue\",           # for text manipulation\n  \"flexdashboard\",  # for dashboard presentations\n  \"treemap\",        # for treemap plots\n  \"sf\",             # for mapping geoms\n  \"rnaturalearth\",  # for map data\n  \"rnatrualearthdata\" # extra mapping data\n)\n\n# install waffle package \n\ndevtools::install_github(\"hrbrmstr/waffle\")"},{"path":"intro.html","id":"loading-a-package","chapter":"1 Intro to R and RStudio","heading":"1.6.2 Loading a package","text":"done using library(package_name). like launching app phone: functionality app launched remains close app restart. example, run library(glue) within session, functions package referred glue made available R session. next time start R, need run library(glue) want access package.can load esquisse package current R session follows:might get red text load package, normal. usually warning package functions name packages already loaded.can use convention package::function() indicate add-package function resides. instance, see readr::read_csv(), refers function read_csv() readr add-package. package loaded using library(), specify package name function unless conflict (e.g., two packages loaded function name).","code":"\nlibrary(esquisse)"},{"path":"intro.html","id":"using-a-function","chapter":"1 Intro to R and RStudio","heading":"1.6.3 Using a function","text":"Now can run function esquisser(), starts interactive plotting example.see error message: Error esquisser(data = ggplot2::diamonds) : find function \"esquisser\", just means forgot load esquisse package using library(esquisse). Either run code load package first, preface function package name like esquisse::esquisser() use without loading package.function name refers code can reuse. start using functions provided packages, can also write functions. function name, pair parentheses, contain zero arguments. options can set. example , data argument set ggplot2::diamonds, refers built-dataset diamonds ggplot2 package.type function console pane, run soon hit enter. put function script R Markdown document source pane, run run script, knit R Markdown file, run code chunk. learn Chapter 2.","code":"\n# type this in the console pane and press enter\nesquisser(data = ggplot2::diamonds)"},{"path":"intro.html","id":"tidyverse","chapter":"1 Intro to R and RStudio","heading":"1.6.4 Tidyverse","text":"tidyverseis meta-package loads several packages using almost every chapter book:ggplot2, data visualisation (Chapter 3)readr, data import (Chapter ??)tibble, tables (Chapter ??)tidyr, data tidying (Chapter ??)dplyr, data manipulation (Chapter ??)stringr, stringsforcats, factorspurrr, repeating thingsWhen install tidyverse, also installs useful packages can load individually. can get full list using tidyverse_packages(), packages using book :googlesheets4, working Google spreadsheetsreadxl, Excel fileslubridate, working dateshms, working timesrvest, web scraping","code":""},{"path":"intro.html","id":"function-help","chapter":"1 Intro to R and RStudio","heading":"1.6.5 Function Help","text":"load tidyverse automatically loads packages, however, can helpful know package function comes need Google . function base R loaded package, can type ?function_name console access help file. top help give function package name.package loaded, use ?package_name::function_name specify package help() function. sure package function , use shortcut ??function_name.Function help always organised way. example, look help ?glue::trim. top, tells name function package curly brackets, short description function, followed longer description. Usage section shows function arguments. arguments default values, shown like function(arg = default). Arguments section lists argument explanation. may Details section even detail functions. Examples section last, shows examples can run console window see function works.first argument mean function? trimna.rmmeanxWhat package read_excel ? readrreadxlbasestats","code":"\n# if the package is loaded\n?esquisser\nhelp(\"esquisser\")\n\n# works whether or not the package is loaded\n?esquisse::esquisser\nhelp(\"esquisser\", package=\"esquisse\") \n\n# shows a list of potentially matching functions\n??esquisser"},{"path":"intro.html","id":"arguments","chapter":"1 Intro to R and RStudio","heading":"1.6.6 Arguments","text":"can look arguments/options function using help documentation. arguments required, optional. Optional arguments often use default (normally specified help documentation) enter value.example, look help documentation function sample() randomly samples items list.help documentation sample() appear bottom right help panel. usage section, see sample() takes following form:arguments section, explanations arguments. x list items want choose , size number items want choose, replace whether item may selected , prob gives probability item chosen. details section notes values entered replace prob use defaults FALSE (item can chosen ) NULL (items equal probability chosen). default value x size, must specified otherwise code run.try example just change required arguments x size ask R choose 5 random letters (letters built-vector 26 lower-case Latin letters).sample() generates random sample. time run code, generate different set random letters (try ). function set.seed() controls random number generator - using functions use randomness (sample()), running set.seed() ensure get result (many cases may want ). get numbers , run set.seed(1242016) console, run sample(x = letters, size = 5) .Now can change default value replace argument produce set letters allowed duplicates.time R still produced 5 random letters, now set letters two instances \"k\". Always remember use help documentation help understand arguments function requires.","code":"\n?sample\nsample(x, size, replace = FALSE, prob = NULL)\nsample(x = letters, size = 5)## [1] \"z\" \"v\" \"y\" \"w\" \"j\"\nset.seed(8675309)\nsample(x = letters, size = 5, replace = TRUE)## [1] \"t\" \"k\" \"j\" \"k\" \"m\""},{"path":"intro.html","id":"argument-names","chapter":"1 Intro to R and RStudio","heading":"1.6.7 Argument names","text":"examples, written argument names code (.e., x, size, replace), however, strictly necessary. following two lines code produce result (although time run sample() produce slightly different result, random, still work ):Importantly, write argument names, R use default order arguments. sample assume first value enter x. second value size third value replace.write argument names can write arguments whatever order like:first learning R, may find useful write argument names can help remember understand part function . However, skills progress may find quicker omit argument names also see examples code online use argument names, important able understand argument bit code referring (look help documentation check).course, always write argument names first time use function. However, subsequent uses may omitted.","code":"\nsample(x = letters, size = 5, replace = TRUE)\nsample(letters, 5, TRUE)\nsample(size = 5, replace = TRUE, x = letters)"},{"path":"intro.html","id":"tab-auto-complete","chapter":"1 Intro to R and RStudio","heading":"1.6.8 Tab auto-complete","text":"One useful feature R Studio tab auto-complete functions (see Figure 1.2). write name function press tab key, R Studio show arguments function takes along brief description. press enter argument name fill name , just like auto-complete phone. incredibly useful first learning R remember use feature frequently.\nFigure 1.2: Tab auto-complete\n","code":""},{"path":"intro.html","id":"objects","chapter":"1 Intro to R and RStudio","heading":"1.7 Objects","text":"large part coding involve creating manipulating objects. Objects contain stuff. stuff can numbers, words, result operations analyses. assign content object using <-.Run following code console, change values name age details change christmas holiday date care .see four objects now appear environment pane:name character (text) data. order R recognise character data, must enclosed double quotation marks \" \".age numeric data. order R recognise number, must enclosed quotation marks.today stores result function Sys.Date(). function returns computer system's date. Unlike name age, hard-coded (.e., always return values enter), contents object today change dynamically date. , run function tomorrow, update date tomorrow's date.christmas also date hard-coded specific date. wrapped within .Date() function tells R interpret character string provide date rather text.print contents object, type object's name console press enter. Try printing four objects now.Finally, key concept understand objects can interact can save results interactions new object. Edit run following code create new objects, print contents new object.","code":"\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2022-12-25\")\ndecade <- age + 10\nfull_name <- paste(name, \"Nordmann\")\nhow_long <- christmas - today"},{"path":"intro.html","id":"help","chapter":"1 Intro to R and RStudio","heading":"1.8 Getting help","text":"feel like need lot help starting learn. really go away; impossible memorise everything. goal learn enough structure R can look things quickly. introduce specialised jargon glossary chapter; easier google \"convert character numeric R\" \"make numbers quotes actual numbers words\". addition function help described , additional resources use often.","code":""},{"path":"intro.html","id":"package-reference-manuals","chapter":"1 Intro to R and RStudio","heading":"1.8.1 Package reference manuals","text":"Start help browser entering help.start() console. Click \"Packages\" \"Reference\" see list packages. Scroll readxl package click see list functions available package.","code":""},{"path":"intro.html","id":"googling","chapter":"1 Intro to R and RStudio","heading":"1.8.2 Googling","text":"function help help, even sure function need, try Googling question. take practice able use right jargon search terms get want. helps put \"R\" \"tidyverse\" search text, name relevant package, like ggplot2.","code":""},{"path":"intro.html","id":"vignettes","chapter":"1 Intro to R and RStudio","heading":"1.8.3 Vignettes","text":"Many packages, especially tidyverse ones, helpful websites vignettes explaining use functions. vignettes also available inside R. can access package's help page vignette() function.","code":"\n# opens a list of available vignettes\nvignette(package = \"ggplot2\")\n\n# opens a specific vignette in the Help pane\nvignette(\"ggplot2-specs\", package = \"ggplot2\")"},{"path":"intro.html","id":"glossary-intro","chapter":"1 Intro to R and RStudio","heading":"1.9 Glossary","text":"","code":""},{"path":"intro.html","id":"resources-intro","chapter":"1 Intro to R and RStudio","heading":"1.10 Further Resources","text":"RStudio IDE CheatsheetRStudio Cloud","code":""},{"path":"reports.html","id":"reports","chapter":"2 Reports with R Markdown","heading":"2 Reports with R Markdown","text":"","code":""},{"path":"reports.html","id":"ilo-reports","chapter":"2 Reports with R Markdown","heading":"2.1 Intended Learning Outcomes","text":"able structure projectBe able knit simple reproducible report R MarkdownBe able create code chunks, tables, images, inline R R Markdown documentFor reference, packages use chapter.","code":"\nlibrary(tidyverse)  # various data manipulation functions\nlibrary(knitr)      # for rendering a report from a script\nlibrary(kableExtra) # for styling tables"},{"path":"reports.html","id":"projects","chapter":"2 Reports with R Markdown","heading":"2.2 Organising a project","text":"write code, first, need get organised. Projects RStudio way group files need one project. projects include scripts, data files, output files like PDF report created script images.First, make new folder computer keep materials class, suggest renaming something like ADS-22. folder R look default find save files known working directory. can set working directory manually folder want work menu commands:Session > Set Working Directory > Choose Directory...However, better way organising files using Projects RStudio.","code":""},{"path":"reports.html","id":"project-start","chapter":"2 Reports with R Markdown","heading":"2.2.1 Start a Project","text":"create new project work chapter:File > New Project...Name project 02-reportsSave inside directory just made.RStudio restart open new project directory working directory.\nFigure 2.1: Starting new project.\nClick Files tab lower right pane see contents project directory. see file called 02-reports.Rproj, file contains project information. can double-click open project.Depending settings, may also see directory called .Rproj.user, contains specific user settings. can ignore \"invisible\" files start full stop.","code":""},{"path":"reports.html","id":"naming","chapter":"2 Reports with R Markdown","heading":"2.2.2 Naming Things","text":"start creating new files, important review name files. might seem bit pedantic, following clear naming rules people computers can easily find things make life much easier long run. important principles:file directory names contain letters, numbers, dashes, underscores, full stop (.) file name extension (means spaces!)consistent capitalisation (set rule make easy remember, like always use lowercase)use underscores (_) separate parts file name, like title date, dashes (-) separate words part (e.g., social-media-report_2021-10.Rmd)name files pattern alphabetises sensible order makes easy find file looking forprefix file name underscore move top list, prefix files numbers control orderFor example, file names mess:report.docreport final.docData (Customers) 11-15.xlsCustomers Data Nov 12.xlsfinal report2.docproject notes.txtVendor Data November 15.xlsHere one way structure similar files structure easy human scan list use code find relevant files. See can figure last one ._project-notes.txtreport_v1.docreport_v2.docreport_v3.docdata_customer_2021-11-12.xlsdata_customer_2021-11-15.xlsvendor-data_2021-11-15.xlsdata-vendor-2021_11_15.xlsdata_vendor_2021-11-15.xlsdata_2021-11-15_vendor.xlsThink ways name files . Look project files see can improve.","code":""},{"path":"reports.html","id":"rmarkdown","chapter":"2 Reports with R Markdown","heading":"2.3 R Markdown","text":"Throughout course use R Markdown create reproducible reports table contents, text, tables, images, code. text can written using markdown, way specify formatting, headers, paragraphs, lists, bolding, links.","code":""},{"path":"reports.html","id":"new-document","chapter":"2 Reports with R Markdown","heading":"2.3.1 New document","text":"open new R Markdown document click:File > New File > R MarkdownYou prompted give title; call document Important Info. can also change author name. Keep output format HTML.opened new document sure save clicking File > Save .... name file important_info (Mac can see file extension, name important_info.Rmd). file automatically saved project folder, .e., working directory, now see file appear file viewer pane.first open new R Markdown document see bunch welcome text looks like :\nFigure 2.2: New R Markdown text\nfollowing steps:Delete everything line 12 onwardsOn line 12 type \"## info\" (hashtags without quotation marks)Click insert new code menu (green box C plus sign) RYour Markdown document now look something like :\nFigure 2.3: New R chunk\n","code":""},{"path":"reports.html","id":"code-chunks","chapter":"2 Reports with R Markdown","heading":"2.3.2 Code chunks","text":"created subtitle code chunk. R Markdown, anything written grey code chunk assumed code, anything written white space (code chunks) regarded normal text (actual colours depend theme applied, refer default white grey). makes easy combine text code one document.create new code chunk notice grey box starts ends three back ticks ```. One common mistake accidentally delete back ticks. Remember, code chunks text entry different colours - colour certain parts Markdown look right, check deleted back ticks.code chunk, write code created Chapter 1.7.","code":"\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2022-12-25\")"},{"path":"reports.html","id":"running-code","chapter":"2 Reports with R Markdown","heading":"2.3.3 Running code","text":"working R Markdown document, several ways run lines code.First, can highlight code want run click Run -> Run Selected Line(s), however tedious can cause problems highlight exactly code want run.\nFigure 2.4: Tedious method running code\nAlternatively, can press green \"play\" button top-right code chunk run lines code chunk.\nFigure 2.5: Slightly better method running code\nEven better learn keyboard short cuts R Studio. run single line code, make sure cursor line code want run (can anywhere) press ctrl + enter Cmd + enter Mac. want run code code chunk, press ctrl/cmd + shift + enter. Learn short cuts, make life easier!Run code using methods . see variables name, age, today, christmas appear environment pane.","code":""},{"path":"reports.html","id":"rmd-inline-r","chapter":"2 Reports with R Markdown","heading":"2.3.4 Inline code","text":"keep talking using R Markdown reproducible reports easier show tell powerful give insight course (hopefully!) change way work data forever!One important feature R Markdown can combine text code insert values writing using inline coding. ever copy paste value text one file another, know easy can make mistakes. Inline code avoids . easier show inline code rather explain go.First, copy paste text white space underneath code chunk. used different variable name christmas update name object created, otherwise change anything else.","code":"My name is `r name` and I am `r age` years old. \nIt is `r christmas - today` days until Christmas, \nwhich is my favourite holiday."},{"path":"reports.html","id":"rmd-knit","chapter":"2 Reports with R Markdown","heading":"2.3.5 Knitting your file","text":"Now going knit, compile, file document type choosing. case create default html file, learn create files like Word PDF throughout course. knit file click:Knit > Knit HMTLR Markdown create display new HTML document, also automatically save file working directory.magic, slightly odd bit text copied pasted now appears normal sentence values pulled objects created.name Emily 36 years old. 345 days Christmas, favourite holiday.can also knit typing following code console. Never put Rmd script , try knit infinite loop.","code":"\nknitr::knit2html(\"important_info.Rmd\")"},{"path":"reports.html","id":"loading-data","chapter":"2 Reports with R Markdown","heading":"2.4 Loading data","text":"Now try another example using Markdown time rather using objects created scratch, read data file.Save close important_info.Rmd document. open save new Markdown document, time named sales_data.Rmd. can get rid everything line 12 onwards.","code":""},{"path":"reports.html","id":"loading-online","chapter":"2 Reports with R Markdown","heading":"2.4.1 Online sources","text":"First, try loading data stored online. Create code chunk document copy, paste, run code. code loads simulated sales data.data stored .csv file going use readr::read_csv() function load .package readr part tidyverse installed Chapter 1 load package library()Note url contained within double quotation marks - work without .dataset simulated sales data different types vehicles line data single order. multiple ways view check dataset R. following make note information approach seems give . like information functions, can look help documentation ?function:Click sales_online object environment paneRun head(sales_online) consoleRun summary(sales_online) consoleRun str(sales_online) consoleRun View(sales_online) console","code":"\n# Data from https://www.kaggle.com/kyanyoga/sample-sales-data\nlibrary(tidyverse)\nsales_online <- readr::read_csv(\"https://psyteachr.github.io/ads-v1/data/sales_data_sample.csv\")"},{"path":"reports.html","id":"local-data-files","chapter":"2 Reports with R Markdown","heading":"2.4.2 Local data files","text":"commonly, working data files stored locally computer. put files? usually want scripts data files single project inside one folder computer, working directory, already set main directory 02-reportsfor chapter.can also organise files subdirectories inside main project directory, putting raw data files directory called data saving image files directory called images. Using subdirectories helps avoid one single folder becoming cluttered, important working big projects.02-reports directory, create new folder named data, , download copy sales data file save new subdirectory.load data local file, can use read_csv() function time rather specifying url, give subdirectory file name.Things note:must include file extension (case .csv)subdirectory folder name (data) file name separated forward slash /Precision important, typo file name able find file; remember R case sensitive - Sales_Data.csv completely different file sales_data.csv far R concerned.Run head(), summary(), str(), View() sales_local confirm data sales_online.","code":"\nsales_local <- read_csv(\"data/sales_data_sample.csv\") "},{"path":"reports.html","id":"writing-a-report","chapter":"2 Reports with R Markdown","heading":"2.5 Writing a report","text":"going write basic report sales dataset using R Markdown show features. expanding almost every bit show throughout course; important outcome start get comfortable R Markdown works can use .","code":""},{"path":"reports.html","id":"data-analysis","chapter":"2 Reports with R Markdown","heading":"2.5.1 Data analysis","text":"report just going present simple sales stats three types vehicles: planes, motorcycles, classic cars. come back write kind code Chapter 2.6.5. now, see can follow logic code via code comments.Create new code chunk, copy, paste run following code view sales_counts clicking object environment pane.row dataset sale, code gives us nice easy way seeing many sales made type vehicle; just counts number rows group.","code":"\n# start with the sale_online data and then\nsales_counts <- sales_online %>% \n  # keep only the data from planes, motorcycles, and cars and then\n  filter(PRODUCTLINE %in% c(\"Planes\", \"Motorcycles\", \"Classic Cars\")) %>% \n  # count how many are in each PRODUCTLINE\n  count(PRODUCTLINE)"},{"path":"reports.html","id":"markdown","chapter":"2 Reports with R Markdown","heading":"2.5.2 Text formatting","text":"can use visual markdown editor RStudio version 1.4 higher. button top source pane pen tip menu options familiar anyone worked software like Microsoft Word.\nFigure 2.6: visual editor.\nuseful complex styling, can also use common plain-text style markups:Headers created prefacing subtitles one hashes (#) space (exclude space). include table contents, created document headers.Format text italics bold surrounding text one two asterisks underscores.Make lists using numbers, asterisks dashes items. Indent items make nested lists.Make links like : [psyTeachR](https://psyteachr.github.io/)Download R Markdown Cheat Sheet learn .Copy paste text white space code chunk loads data. Save file click knit view results. look bit messy now contains code messages loading data worry, get rid soon.Try match inline code sales_counts table. note:$ sign used indicate specific variables (columns) object using object$variable syntax.Square brackets number e.g., [3] indicate particular observationSo sales_counts$n[3] asks inline code display third observation variable n dataset sales_online.Add another line reports total numbers motorcycles using inline code. Using either visual editor text markups, add bold italics matches others.","code":"## Sample sales report\n\nThis report summarises the sales data for different types of vehicles sold between 2003 and 2005. Thie data is from [Kaggle](https://www.kaggle.com/kyanyoga/sample-sales-data).\n\n### Sales by type\n\nThe *total* number of **planes** sold was `r sales_counts$n[3]`\n\nThe *total* number of **classic cars** sold was `r sales_counts$n[1]`.The *total* number of **motorcycles** sold was `r sales_counts$n[2]`."},{"path":"reports.html","id":"comments","chapter":"2 Reports with R Markdown","heading":"2.5.3 Code comments","text":"code used code comments important highlight useful . can add comments inside R chunks hash symbol (#). R ignore characters hash end line.usually good practice start code chunk comment explains , especially code explained text report.name objects clearly, often need add clarifying comments. example, named three objects total_number_of_sales, first_year last_year, omit comments. bit art comment code well try add comments working book - help consolidate learning future comes review code, thank past clear.","code":"\n# important numbers\n\nn <- nrow(sales_online) # the total number of sales (number of rows)\nfirst <- min(sales_online$YEAR_ID) # the first (minimum) year\nlast <- max(sales_online$YEAR_ID) # the last (maximum) year"},{"path":"reports.html","id":"rmd-images","chapter":"2 Reports with R Markdown","heading":"2.5.4 Images","text":"saying goes, picture paints thousand words sometimes want communicate data using visualisations.Create code chunk display graph data document text written far. use code learn Chapter 3 make simple bar chart represents sales data - focus trying follow bits code map plot created.Copy paste code. Run code Markdown see plot creates knit file see displayed document. Notice figure caption formatted chunk options.\nFigure 2.7: Sales visualisation\ncan also include images create R using markdown syntax images. similar loading data can either use image stored computer, via url using knitr::include_graphics().Create new code chunk underneath sales figures planes, classic cars, motorcycles add image Google Wikipedia (right click image select copy image address get url). See section chunk defaults see change display size.images Wikipedia public domain open license. can search images license Google Images clicking Tools button choosing \"Creative Commons licenses\" \"Usage Rights\" menu.","code":"```{r, fig.cap= \"Sales visualisation\"}\nggplot(data = sales_counts, \n       mapping = aes(x = PRODUCTLINE, y = n, fill = PRODUCTLINE)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  labs(x = \"Type of vehicle\",\n       y = \"Number of sales\",\n       title = \"Sales by vehicle type\",\n       subtitle = \"2003 - 2005\")```\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/3/3f/P-51_Mustang_edit1.jpg\")"},{"path":"reports.html","id":"rmd-tables","chapter":"2 Reports with R Markdown","heading":"2.5.5 Tables","text":"Rather figure, might want display data table.Add new level 2 heading (two hashtags) document, name heading \"Data table form\" create new code chunk .First, see table looks like make edits. Simply write name table want display code chunk (case sales_counts) click knit see looks like.just readable great. customise tables going use function kable() kableExtra package.Amend code load kableExtra package apply kable() function table. done , knit file see output.better, still amazing. make adjustments. can change names columns, add caption, also change alignment cell contents using arguments kable().can also add theme change overall style. example used kable_classic 5 others: kable_paper, kable_classic_2, kable_minimal, kable_material kable_material_dark. Try see one prefer.Finally, can change formatting first row using row_spec. Look help documentation row_spec see options available. Try changing value arguments figure .\nTable 2.1: Number sales per product line.\nappearance placement table caption depends type document creating. captions may look different book creating single-page html_document, book uses bs4_book style bookdown package. learn document output types Chapter ??.feeling confident covered far, kableExtra vignette gives lot detail can edit tables using kableExtra.can also explore gt package, complex, allows create beautiful customised tables. Riding tables {gt} {gtExtras} outstanding tutorial.","code":"\nsales_counts## # A tibble: 3 × 2\n## # Groups:   PRODUCTLINE [3]\n##   PRODUCTLINE      n\n##   <chr>        <int>\n## 1 Classic Cars   967\n## 2 Motorcycles    331\n## 3 Planes         306\nlibrary(kableExtra) # for table display\n\nsales_counts %>% # start with the sales_count table and then\n  kable() # apply the kable function\nsales_counts %>%\n  kable(col.names = c(\"Product\", \"Sales\"),\n      caption = \"Number of sales per product line.\", \n      align = \"c\") %>% \n  kable_classic(full_width = FALSE) %>% \n  row_spec(row = 0, bold = TRUE, color = \"red\") "},{"path":"reports.html","id":"refining-your-report","chapter":"2 Reports with R Markdown","heading":"2.6 Refining your report","text":"","code":""},{"path":"reports.html","id":"rmd-setup","chapter":"2 Reports with R Markdown","heading":"2.6.1 Chunk defaults","text":"finish tidying report organising code bit better. create new R Markdown file RStudio, setup chunk automatically created - ignored chunk now.can set default options document . Type str(knitr::opts_chunk$get()) console see full list options can set default values, however, useful common options change purposes writing reports revolve around whether want show code size images.Replace code setup chunk code try changing option FALSE TRUE changing numeric values knit file see difference makes.Note fig.width fig.height control original size aspect ratio images generated R, plots. affect relative size text elements plots. affect size existing images . However, .width controls display size existing images figures generated R. usually set percentage page width.\nFigure 2.8: plot default values fig.width = 8, fig.height = 5, .width = \"100%\"\n\nFigure 2.9: plot half default width height: fig.width = 4, fig.height = 2.5, .width = \"100%\"\n\nFigure 2.10: plot half output width: fig.width = 4, fig.height = 2.5, .width = \"50%\"\n","code":"```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)``````{r setup, include=FALSE}\nknitr::opts_chunk$set(\n  echo       = FALSE,     # whether to show code chunks\n  message    = FALSE,     # whether to show messages from your code\n  warning    = FALSE,     # whether to show warnings from your code\n  fig.width  = 8,         # figure width in inches (at 96 dpi)\n  fig.height = 5,         # figure height in inches (at 96 dpi)\n  out.width = \"50%\"      # figures/images span 50% of the page width\n)```"},{"path":"reports.html","id":"override-defaults","chapter":"2 Reports with R Markdown","heading":"2.6.2 Override defaults","text":"setup options change behaviour entire document, however, can override behaviour individual code chunks.example, default might want hide code might occasion want show code used analyse data. can set echo = FALSE setup chunk make hiding code default individual code chunk plot set echo = TRUE. Try now knit file see results.Additionally, can also override default image display size dimensions.","code":"```{r, echo = TRUE}\nggplot(data = sales_counts, \n       mapping = aes(x = PRODUCTLINE, y = n, fill = PRODUCTLINE)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  labs(x = \"Type of vehicle\",\n       y = \"Number of sales\",\n       title = \"Sales by vehicle type\",\n       subtitle = \"2003 - 2005\")``````{r, out.width='25%'}\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/3/3f/P-51_Mustang_edit1.jpg\")``````{r, fig.width = 10, fig.height = 20}\nggplot(data = sales_counts, \n       mapping = aes(x = PRODUCTLINE, y = n, fill = PRODUCTLINE)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  labs(x = \"Type of vehicle\",\n       y = \"Number of sales\",\n       title = \"Sales by vehicle type\",\n       subtitle = \"2003 - 2005\")```"},{"path":"reports.html","id":"loading-packages","chapter":"2 Reports with R Markdown","heading":"2.6.3 Loading packages","text":"can also add packages need setup chunk using library(). Often working script, realize need load another add-package. bury call library(package_I_need) way script. Put top, user overview packages needed.Move code loads tidyverse kableExtra setup chunk.","code":""},{"path":"reports.html","id":"yaml","chapter":"2 Reports with R Markdown","heading":"2.6.4 YAML header","text":"Finally, YAML header bit top Markdown document. can set several options well.Try changing values false true see options .df_print: kable option prints data frames using knitr::kable automatically.built-bootswatch themes : default, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united, yeti. can view download themes. Try changing theme see one like best.\nFigure 2.11: Light themes versions 3 4.\nYAML headers can picky spaces semicolons (rest R Markdown much forgiving). example, put space \"author\", get error looks like:error message tell exactly problem (second character second line YAML header), usually matter fixing typos making sure indenting exactly right.","code":"---\ntitle: \"Sales Data Report\"\nauthor: \"Your name\"\noutput:\n  html_document:\n    df_print: kable\n    theme: \n      version: 4\n      bootswatch: yeti\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: false\n    toc_depth: 3\n    number_sections: false\n---Error in yaml::yaml.load(..., eval.expr = TRUE) : \n  Parser error: while parsing a block mapping at line 1, column 1 did not find expected key at line 2, column 2"},{"path":"reports.html","id":"summary","chapter":"2 Reports with R Markdown","heading":"2.6.5 Summary","text":"chapter covered lot hopefully now much better idea Markdown able . Whilst working Markdown takes longer initial set-stage, fully reproducible report can plug new data week month simply click knit, reducing duplication effort, human error comes .continue work book learn wrangle analyse data use Markdown present . slowly build available customisation options course next weeks, find Markdown reports start look polished professional.","code":""},{"path":"reports.html","id":"exercises-reports","chapter":"2 Reports with R Markdown","heading":"2.7 Exercises","text":"additional exercises let apply learned chapter. suggest taking break - might feel slightly effortful, spreading practice help learn long run.","code":""},{"path":"reports.html","id":"exercises-reports-project","chapter":"2 Reports with R Markdown","heading":"2.7.1 New project","text":"Create new project called \"demo_report\" [2.2]","code":""},{"path":"reports.html","id":"exercises-reports-setup","chapter":"2 Reports with R Markdown","heading":"2.7.2 New script","text":"\"demo_report\" project, create new Rmarkdown document called \"job.Rmd\" [2.3]. Edit YAML header output tables using kable set custom theme [2.6.4].","code":"---\ntitle: \"My Job\"\nauthor: \"Me\"\noutput:\n  html_document:\n    df_print: kable\n    theme: \n      version: 4\n      bootswatch: sandstone\n---"},{"path":"reports.html","id":"exercises-reports-rmarkdown","chapter":"2 Reports with R Markdown","heading":"2.7.3 R Markdown","text":"Write short paragraph describing job job might like future [2.5.2]. Include bullet-point list links websites useful job [2.5.2].","code":"I am a research psychologist who is interested in open science \nand teaching computational skills.\n\n* [psyTeachR books](https://psyteachr.github.io/)\n* [Google Scholar](https://scholar.google.com/)"},{"path":"reports.html","id":"exercises-reports-tables","chapter":"2 Reports with R Markdown","heading":"2.7.4 Tables","text":"Use following code load small table tasks [2.3.2]. Edit relevant job (can change categories entirely want).Figure make code chunks show knitted document [2.6.1]can set default echo = FALSE setup chunk top script.set visibility specific code chunk, put echo = FALSE inside curly brackets.Display table purple italic column headers. Try different styles using kableExtra [2.5.5]","code":"\ntasks <- tibble::tribble(\n  ~task,                   ~category,      ~frequency,\n  \"Respond to tweets\",     \"social media\", \"daily\",\n  \"Create a twitter poll\", \"social media\", \"weekly\",\n  \"Make the sales report\", \"reporting\",    \"montly\"\n)\nknitr::opts_chunk$set(echo = FALSE)```{r, echo=FALSE}\n# code to hide```\nkableExtra::kable(tasks) %>%\n  kableExtra::kable_minimal() %>%\n  kableExtra::row_spec(row = 0, italic = TRUE, color = \"purple\")"},{"path":"reports.html","id":"exercises-reports-images","chapter":"2 Reports with R Markdown","heading":"2.7.5 Images","text":"Add image anything relevant [2.5.4]can add image web using URL:save image project directory (e.g., images folder) add using relative path:","code":"![Applied Data Skills](https://psyteachr.github.io/ads-v1/images/logos/logo.png)![Applied Data Skills](images/logos/logo.png)"},{"path":"reports.html","id":"exercises-reports-inline","chapter":"2 Reports with R Markdown","heading":"2.7.6 Inline R","text":"Use inline R include version R using following sentence: \"report created using R version 4.1.0 (2021-05-18).\" can get version using object R.version.string. [2.3.4]report created using `r R.version.string`.","code":""},{"path":"reports.html","id":"exercises-reports-knit","chapter":"2 Reports with R Markdown","heading":"2.7.7 Knit","text":"Knit document html [2.3.5]Click knit button run following code console. (put Rmd script!)","code":"\nknitr::knit2html(\"job.Rmd\")"},{"path":"reports.html","id":"glossary-reports","chapter":"2 Reports with R Markdown","heading":"2.8 Glossary","text":"","code":""},{"path":"reports.html","id":"resources-reports","chapter":"2 Reports with R Markdown","heading":"2.9 Further Resources","text":"R Markdown Cheat Sheet\nR Markdown TutorialR Markdown: Definitive Guide Yihui Xie, J. J. Allaire, & Garrett GrolemundChapter 27: R Markdown R Data ScienceProject Structure Danielle NavarroHow name files Jenny BryankableExtragt","code":""},{"path":"viz.html","id":"viz","chapter":"3 Basic Data Visualisation","heading":"3 Basic Data Visualisation","text":"","code":""},{"path":"viz.html","id":"ilo-viz","chapter":"3 Basic Data Visualisation","heading":"3.1 Intended Learning Outcomes","text":"able identify categorical versus continuous dataBe able create plots layers using ggplotBe able choose appropriate plots dataIn chapter use following packages:","code":"\nlibrary(tidyverse) # includes ggplot2\nlibrary(patchwork) # for multi-part plots\nlibrary(ggthemes)  # for plot themes\nlibrary(lubridate) # for manipulating dates"},{"path":"viz.html","id":"set-up","chapter":"3 Basic Data Visualisation","heading":"3.2 Set-up","text":"Create new project work chapter:File > New Project...Name project 03-visualisationSave inside ADS directory., create save new R Markdown document named plots.Rmd, get rid default template text, load packages set-code chunk. packages installed already, get message Error library(x) : package called ‘x’, please refer Chapter 1.6.1.recommend making new code chunk different activity, using white space make notes errors make, things find interesting, questions like ask course team.","code":""},{"path":"viz.html","id":"variable-types","chapter":"3 Basic Data Visualisation","heading":"3.3 Variable types","text":"spreadsheet tidy data format, row observation, column variable, information cell value. learn get data format Chapter ??, get started use datasets right format.example, table lists pets owned members psyTeachR team. row observation one pet. 6 variables pet, name, owner, species, birthdate, weight (kg), rating (5-point scale \"evil\" \"good\").Variables can classified continuous (numbers) categorical (labels). plotting data, important know kind variables , can help decide types plots appropriate. variable also data type, numeric (numbers), character (text), logical (TRUE/FALSE values). plots can work data types. Make sure watched mini-lecture types data last week work chapter. Additionally, Appendix E details, concept relevant repeatedly.\nFigure 3.1: Data types like categories format cells Excel.\n","code":""},{"path":"viz.html","id":"continuous","chapter":"3 Basic Data Visualisation","heading":"3.3.1 Continuous","text":"Continuous variables properties can measure, like weight. can use continuous variables mathematical operations, like calculating sum total column prices average number social media likes per day. may rounded nearest whole number, make sense measurement halfway .Continuous variables always numeric data type. either integers like 42 doubles like 3.14159.","code":""},{"path":"viz.html","id":"categorical","chapter":"3 Basic Data Visualisation","heading":"3.3.2 Categorical","text":"Categorical variables properties can count, like species pet. Categorical variables can nominal, categories really order, like cats, dogs ferrets (even though ferrets obviously best), ordinal, clear order distance categories something exactly equate, like points Likert rating scale. Even data table uses numbers like 1-7 represent ordinal variables, treat like continuous variables.Categorical data can character data type, also called strings. made putting text inside quotes. text can letters, punctuation, even numbers. example, \"January\" character string, \"1\" put quotes. character data type best variables can lot different values predict ahead time.Categorical data can also factors, specific type integer lets specify category names order. useful making plots display categories order want (otherwise default alphabetical order). factor data type best categories specific number levels.Sometimes people represent categorical variables numbers correspond names, like 0 = \"\" 1 = \"yes\", values clear interpretation. control data recorded, better use character names clarity. learn recode columns Chapter ??.","code":""},{"path":"viz.html","id":"dates-and-times","chapter":"3 Basic Data Visualisation","heading":"3.3.3 Dates and times","text":"Dates times special case variable. can act like categorical continuous variables, special ways plot . Dates times can hard work , lubridate package provides functions help .","code":"\n# the current date\nlubridate::today()## [1] \"2022-01-14\"\n# the current date and time in the GMT timezone\nlubridate::now(tzone = \"GMT\")## [1] \"2022-01-14 17:52:58 GMT\""},{"path":"viz.html","id":"test-your-understanding","chapter":"3 Basic Data Visualisation","heading":"3.3.4 Test your understanding","text":"Coming back pets dataset, type variable column? can use function glimpse() show list column names, data types, first values column - output running glimpse() pets dataset.","code":"\nglimpse(pets)## Rows: 4\n## Columns: 6\n## $ name      <chr> \"Darwin\", \"Oy\", \"Khaleesi\", \"Bernie\"\n## $ owner     <chr> \"Lisa\", \"Lisa\", \"Emily\", \"Phil\"\n## $ species   <fct> ferret, ferret, cat, dog\n## $ birthdate <date> 1998-04-02, NA, 2014-10-01, 2017-06-01\n## $ weight    <dbl> 1.2, 2.9, 4.5, 32.0\n## $ rating    <fct> a little evil, very good, very good, very good"},{"path":"viz.html","id":"building-plots","chapter":"3 Basic Data Visualisation","heading":"3.4 Building plots","text":"multiple approaches data visualisation R; course use popular package ggplot2, part larger tidyverse collection packages. grammar graphics (\"gg\" \"ggplot\") standardised way describe components graphic. ggplot2 uses layered grammar graphics, plots built series layers. may helpful think picture multiple elements sit semi-transparently . good analogy old Disney movies artists create background add moveable elements top background via transparencies.Figure 3.2 displays evolution simple scatterplot using layered approach. First, plot space built (layer 1); variables specified (layer 2); type visualisation (known geom) desired variables specified (layer 3) - case geom_point() called visualise individual data points; second geom added include line best fit (layer 4), axis labels edited readability (layer 5), finally, theme applied change overall appearance plot (layer 6).\nFigure 3.2: Evolution layered plot\nImportantly, layer independent independently customisable. example, size, colour position component can adjusted, one , example, remove first geom (data points) visualise line best fit, simply removing layer draws data points (Figure 3.3). use layers makes easy build complex plots step--step, adapt extend plots existing code.\nFigure 3.3: Plot scatterplot layer removed.\n","code":""},{"path":"viz.html","id":"plots-loading-data","chapter":"3 Basic Data Visualisation","heading":"3.4.1 Plot Data","text":"build plot , layer layer. First need get data. learn load data different sources Chapter ??, time use method Chapter 2.4.1 load online source.load data, read_csv() produce message gives information data imported assumptions made. \"column specification\" tells column named type data R categorised variable . abbreviation \"chr\" character columns, \"dbl\" double columns, \"dttm\" date/time column.data simulated data call centre customer satisfaction survey. first thing need plot data get familiar rows (observations) columns (variables) mean. Sometimes obvious, sometimes requires help data provider. , row represents one call centre.caller_id unique ID calleremployee_id unique ID employee taking callscall_start date time call arrivedwait_time number seconds caller waitcall_time number seconds call lasted employee picked upissue_category whether issue tech, sales, returns, othersatisfaction customer satisfaction rating scale 1 (unsatisfied) 5 (satisfied)Unless specify column types, data importing functions just guess types usually default double columns numbers character columns letters. Use function spec() find column types edit needed.set issue_category factor set order levels. default, R order levels factor alphanumerically, however many cases want need set order. example, data, makes sense category \"\" come end list. update column types, re-import data adjusting read_csv() code set col_types argument new column types.Note read_csv() going use object survey_col_types, must create survey_col_types run adjusted read_csv() code. ever need adjust code, try think order code run start scratch make sure organised appropriately.","code":"\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\")## Rows: 707 Columns: 7## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr  (3): caller_id, employee_id, issue_category\n## dbl  (3): wait_time, call_time, satisfaction\n## dttm (1): call_start## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nspec(survey_data)## cols(\n##   caller_id = col_character(),\n##   employee_id = col_character(),\n##   call_start = col_datetime(format = \"\"),\n##   wait_time = col_double(),\n##   call_time = col_double(),\n##   issue_category = col_character(),\n##   satisfaction = col_double()\n## )\n# updated column types\nsurvey_col_types <- cols(\n  caller_id = col_character(),\n  employee_id = col_character(),\n  call_start = col_datetime(format = \"\"),\n  wait_time = col_double(),\n  call_time = col_double(),\n  issue_category = col_factor(levels = c(\"tech\", \"sales\", \"returns\", \"other\")),\n  satisfaction = col_integer()\n)\n\n# re-import data with correct column  types\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\",\n                        col_types = survey_col_types)"},{"path":"viz.html","id":"plot-setup","chapter":"3 Basic Data Visualisation","heading":"3.4.2 Plot setup","text":"","code":""},{"path":"viz.html","id":"default-theme","chapter":"3 Basic Data Visualisation","heading":"3.4.2.1 Default theme","text":"Plots book use black--white theme, default grey theme, set default theme plots look like examples . top script, setup chunk loaded tidyverse package, add following code run . learn ways customise theme Section 3.4.3.4 Appendix F.3.","code":"\ntheme_set(theme_bw()) # set the default theme"},{"path":"viz.html","id":"plot-setup-data","chapter":"3 Basic Data Visualisation","heading":"3.4.2.2 Data","text":"Every plot starts ggplot() function data table. data loaded typo code, give error message. best check plot step, can figure errors easily.\nFigure 3.4: blank ggplot.\n","code":"\nggplot(data = survey_data)"},{"path":"viz.html","id":"mapping","chapter":"3 Basic Data Visualisation","heading":"3.4.2.3 Mapping","text":"next argument ggplot() mapping. tells plot columns data represented , \"mapped\" , different aspects plot, x-axis, y-axis, line colour, object fill, line style. aspects, \"aesthetics\", listing inside aes() function.Set arguments x y names columns want plotted axes. , want plot wait time x-axis call time y-axis.\nFigure 3.5: blank plot x- y- axes mapped.\nexample , wrote names arguments data mapping, practice, almost everyone omits . Just make sure put data mapping right order.","code":"\n# set up the plot with mapping\nggplot(\n  data = survey_data, \n  mapping = aes(x = wait_time, y = call_time)\n)\nggplot(survey_data,  aes(x = wait_time, y = call_time))"},{"path":"viz.html","id":"geoms","chapter":"3 Basic Data Visualisation","heading":"3.4.2.4 Geoms","text":"Now can add plot elements layers. referred geoms functions start geom_. add layers onto base plot created ggplot() plus (+).\nFigure 3.6: Adding scatterplot geom_point().\nSomewhat annoyingly, plus end previous line, start next line. make mistake, run first line code produce base layer get following error message rather adding geom_point().","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() # scatterplot\nggplot(survey_data, aes(x = wait_time, y = call_time))\n+ geom_point() # scatterplot## Error: Cannot use `+.gg()` with a single argument. Did you accidentally put + on a new line?"},{"path":"viz.html","id":"multiple-geoms","chapter":"3 Basic Data Visualisation","heading":"3.4.2.5 Multiple geoms","text":"Part power ggplot2 can add one geom plot adding extra layers quickly becomes possible make complex informative visualisation. Importantly, layers display order set . code uses geoms produce scatterplot line best fit orders differently.\nFigure 3.7: Points first versus line first.\n","code":"\n# Points first\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = lm) # line of best fit\n\n# Line first\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_smooth(method = lm) + # line of best fit\n  geom_point() # scatterplot"},{"path":"viz.html","id":"saving-plots","chapter":"3 Basic Data Visualisation","heading":"3.4.2.6 Saving plots","text":"Just like can save numbers data tables objects, can also save output ggplot(). code produces plots created saves objects named point_first line_first. run code, plots display like done . Instead, see object names appear environment pane.view plots, call objects name. output plot separately.","code":"\npoint_first <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = lm) # line of best fit\n  \nline_first <-\n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_smooth(method = lm) + # line of best fit\n  geom_point() # scatterplot\npoint_first # view first plot\nline_first # view second plot"},{"path":"viz.html","id":"combining-plots","chapter":"3 Basic Data Visualisation","heading":"3.4.2.7 Combining plots","text":"One reasons save plots objects can combine multiple plots using functions patchwork package. code produces plot combining two plots + specifying want plots produced single row nrow argument plot_layout().\nFigure 3.8: Combining plots patchwork.\n","code":"\n# add plots together in 1 row; try changing nrow to 2\npoint_first + line_first + plot_layout(nrow = 1)"},{"path":"viz.html","id":"customising-plots","chapter":"3 Basic Data Visualisation","heading":"3.4.3 Customising plots","text":"","code":""},{"path":"viz.html","id":"styling-geoms","chapter":"3 Basic Data Visualisation","heading":"3.4.3.1 Styling geoms","text":"definitely put line front points, points still bit dark. want change overall style geom, can set arguments colour, alpha, shape, size linetype inside geom function. many different values can set ; Appendix F gives details . Play around different values figure default values shape size.\nFigure 3.9: Changing geom styles.\nmethod changing style shapes made geom. want, example, points different colours depending issue category , set argument colour = issue_category inside aes() function mapping. can customise colours used scale_ functions, learn Chapter ??.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2, # 20% transparency\n             shape = 18,  # solid diamond\n             size = 2) + \n  geom_smooth(method = lm, \n              formula = y~x, # formula used to draw line, \n              # setting the default formula avoids an annoying message\n              colour = rgb(0, .5, .8),\n              linetype = 3) "},{"path":"viz.html","id":"format-axes","chapter":"3 Basic Data Visualisation","heading":"3.4.3.2 Format axes","text":"Now need make axes look neater. several functions can use change axis labels, powerful ones scale_ functions. need use scale function matches data plotting axis becomes particularly important know type data working . axes continuous, use scale_x_continuous() scale_y_continuous().name argument changes axis label. breaks argument sets major units needs vector possible values, can extend beyond range data (e.g., wait time goes 350, can specify breaks 600 make maths easier). seq() function creates sequence numbers one another specified steps.\nFigure 3.10: Formatting plot axes scale_ functions.\nCheck help ?scale_x_continuous see set minor units specify many breaks want instead.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30))"},{"path":"viz.html","id":"axis-limits","chapter":"3 Basic Data Visualisation","heading":"3.4.3.3 Axis limits","text":"want change minimum maximum values axis, use coord_cartesian() function. Many plots make sense minimum maximum values represent range possible values, even values present data. , wait call times less 0 seconds, set minimum values 0 maximum values first break highest value.\nFigure 3.11: Changing axis limits.\ncan also set limits argument inside scale_ functions, actually removes data falls outside limits, rather cropping plot, can change appearance certain types plots like violin plots density plots.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30)) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180))"},{"path":"viz.html","id":"themes","chapter":"3 Basic Data Visualisation","heading":"3.4.3.4 Themes","text":"ggplot2 comes several built-themes, theme_minimal() theme_bw(), ggthemes package provides even themes match different software, GoogleDocs Stata, publications, Economist Wall Street Journal. add GoogleDocs theme, change font size 20 base_size argument.also worth highlighting code starting look quite complicated number layers, built slowly (hopefully!) make sense. see examples ggplot2 code online like adapt, build plot layer layer make easier understand layer adds.\nFigure 3.12: Changing theme.\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30)) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180)) +\n  ggthemes::theme_gdocs(base_size = 20)"},{"path":"viz.html","id":"theme-tweaks","chapter":"3 Basic Data Visualisation","heading":"3.4.3.5 Theme tweaks","text":"still quite happy theme, can customise even themes() function. Check help function see possible options. common thing want remove element entirely. setting relevant argument element_blank(). , getting rid x-axis line plot background, removes line around plot.\nFigure 3.13: Customising theme.\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = x_breaks) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = y_breaks) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180)) +\n  theme_gdocs(base_size = 11, base_family = \"Times\") +\n  theme(axis.line.x = element_blank(),\n        plot.background = element_blank())"},{"path":"viz.html","id":"appropriate-plots","chapter":"3 Basic Data Visualisation","heading":"3.5 Appropriate plots","text":"Now know build plot layers customise appearance, ready learn plot types. Different types data require different types plots, section organised data type.ggplot2 cheat sheet great resource help find plots appropriate data, based many variables plotting type . examples use customer satisfaction data, plot communicates something different.expect memorise plot types methods customising , helpful try code examples , changing values test understanding.","code":""},{"path":"viz.html","id":"counting-categories","chapter":"3 Basic Data Visualisation","heading":"3.5.1 Counting categories","text":"","code":""},{"path":"viz.html","id":"bar-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.1.1 Bar plot","text":"want count number things per category, can use geom_bar(). need provide x mapping geom_bar() default geom_bar() uses number observations group x value y, need tell put y-axis.probably want customise things, like colours, order columns, labels. Inspect code try running layer layer figure things change. functions scale_fill_manual() scale_x_discrete() new, work way scale_ functions. learn Chapter ??.","code":"\nggplot(survey_data, aes(x = issue_category)) +\n  geom_bar()\nggplot(survey_data, aes(x = issue_category, \n                        fill = issue_category)) +\n  geom_bar() +\n  scale_x_discrete(\n    # change axis title\n    name = \"Issue Category\", \n    # change order\n    limits = c(\"tech\", \"returns\", \"sales\", \"other\"), \n    # change labels\n    labels = c(\"Technical\", \"Returns\", \"Sales\", \"Other\") \n  ) +\n  scale_fill_manual(\n    # change colours\n    values = c(tech = \"goldenrod\", \n                returns = \"darkgreen\", \n                sales = \"dodgerblue3\", \n                other = \"purple3\"),\n    # remove the legend\n    guide = \"none\" \n  ) +\n  scale_y_continuous(\n    name = \"\", # remove axis title\n    # remove the space above and below the y-axis\n    expand = expansion(add = 0)\n  ) +\n  # minimum = 0, maximum = 350\n  coord_cartesian(ylim = c(0, 350)) + \n  ggtitle(\"Number of issues per category\") # add a title"},{"path":"viz.html","id":"column-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.1.2 Column plot","text":"data already column number want plot, can use geom_col() plot . can use count() function make table row issue_category column called n number observations category.mapping geom_col() requires set x y aesthetics. Set y = n want plot number issues category, information column called n.","code":"\ncount_data <- count(x = survey_data, issue_category)\nggplot(count_data, aes(x = issue_category, y = n)) +\n  geom_col()"},{"path":"viz.html","id":"pie-chart","chapter":"3 Basic Data Visualisation","heading":"3.5.1.3 Pie chart","text":"Pie charts misleading form data visualisation, cover . cover options visualising proportions, like waffle, lollipop treemap plots, Chapter ??.","code":""},{"path":"viz.html","id":"test-your-understanding-1","chapter":"3 Basic Data Visualisation","heading":"3.5.1.4 Test your understanding","text":"small data table.geom use plot population 5 countries? geom_bargeom_colWhat mapping use?\n\naes(x = country, y = population)aes(x = population, y = country)aes(x = country)aes(x = island)aes(y = population)\ngeom use plot number countries island? geom_bargeom_colWhat mapping use?\n\naes(x = country, y = population)aes(x = population, y = country)aes(x = country)aes(x = island)aes(y = population)\n","code":""},{"path":"viz.html","id":"one-continuous-variable","chapter":"3 Basic Data Visualisation","heading":"3.5.2 One continuous variable","text":"continuous variable, like number seconds callers wait, can use geom_histogram() geom_density() show distribution. Just like geom_bar() required specify x variable.","code":""},{"path":"viz.html","id":"histogram","chapter":"3 Basic Data Visualisation","heading":"3.5.2.1 Histogram","text":"histogram splits data \"bins\" along x-axis shows count many observations bin along y-axis.\nFigure 3.14: Histogram wait times.\nalways set binwidth number bins something meaningful data (otherwise get annoying message). might need try options find something looks good conveys meaning plot -- try changing values binwidth bins see works best.default, bars start centered 0, binwidth set 15, first bar include -7.5 7.5 seconds, make much sense. can set boundary = 0 bar represents increments 15 seconds starting 0.Finally, default style grey bars ugly, can change setting fill colour, well using scale_x_continuous() update axis labels.\nFigure 3.15: Histogram custom styles.\n","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n# adjust width of each bar\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15)\n\n# adjust number of bars\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(bins = 5)\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15, boundary = 0)\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15, \n                 boundary = 0, \n                 fill = \"white\", \n                 color = \"black\") +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60))"},{"path":"viz.html","id":"frequency-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.2.2 Frequency plot","text":"Rather plotting bin bar, can connect line across top bin using frequency plot. function geom_freqpoly() works geom_histogram(), except take fill argument just line.","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_freqpoly(boundary = 0, binwidth = 15, \n                color = \"black\")"},{"path":"viz.html","id":"density-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.2.3 Density plot","text":"distribution smooth, density plot often better way show distribution. density plot need binwidth boundary arguments split data bins, can fill.","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_density(fill = \"purple\", color = \"black\")"},{"path":"viz.html","id":"test-your-understanding-2","chapter":"3 Basic Data Visualisation","heading":"3.5.2.4 Test your understanding","text":"Imagine table population country world columns country population. just look 76 countries populations less million.kind plot ? geom_histogramgeom_freqpolygeom_densityWhat kind plot B? geom_histogramgeom_freqpolygeom_densityWhat kind plot C? geom_histogramgeom_freqpolygeom_densityHow set mapping plots?\n\naes(x = country, y = population)aes(x = population, y = country)aes(x = population)aes(x = population, y = count)\nbinwidth histogram? 1100100K1M","code":""},{"path":"viz.html","id":"grouped-continuous-variables","chapter":"3 Basic Data Visualisation","heading":"3.5.3 Grouped continuous variables","text":"several ways compare continuous data across groups. choose depends point trying make plot.","code":""},{"path":"viz.html","id":"subdividing-distributions","chapter":"3 Basic Data Visualisation","heading":"3.5.3.1 Subdividing distributions","text":"previous plots, used fill purely visual reasons, e.g., changed colour histogram bars make look nicer. However, can also use fill represent another variable colours become meaningful.Setting fill aesthetic mapping produce different coloured bars category fill variable, case issue_category.\nFigure 3.16: Histogram categories represented fill.\nset aspect represent data, inside aes() function mapping, argument geom. try set geom, get following error (unless coincidentally object named issue_category colour word).default, categories positioned stacked top . function geom_area() gives similar effect stat = \"bin\".\nFigure 3.17: Stacked area plot.\n","code":"\nggplot(survey_data, aes(x = wait_time, fill = issue_category)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 15,\n                 color = \"black\")\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 15, \n                 color = \"black\",\n                 fill = issue_category)## Error in layer(data = data, mapping = mapping, stat = stat, geom = GeomBar, : object 'issue_category' not found\n# area plot\nggplot(survey_data, mapping = aes(x = wait_time, fill = issue_category)) +\n  geom_area(stat = \"bin\", \n            boundary = 0, \n            binwidth = 15, \n            color = \"black\")"},{"path":"viz.html","id":"comparing-distributions","chapter":"3 Basic Data Visualisation","heading":"3.5.3.2 Comparing distributions","text":"want compare one distribution, can set position argument geom_histogram() \"dodge\" put bars group next instead stacking . However, can look confusing several categories. Instead, usegeom_freqpoly() plot line connecting top bin.\nFigure 3.18: Different ways plot distribution continuous variable multiple groups.\n","code":"\n# dodged histogram\nhistogram_dodge <- \n  ggplot(survey_data, aes(x = wait_time, \n                          fill = issue_category,\n                          colour = issue_category))+\n  geom_histogram(boundary = 0, \n                 binwidth = 15, \n                 position = \"dodge\") +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  ggtitle(\"Dodged Histogram\")\n\n# frequency plot\nfreqpoly_plot <- \n  ggplot(survey_data, aes(x = wait_time,\n                          fill = issue_category,\n                          colour = issue_category)) +\n  geom_freqpoly(binwidth = 15, \n                boundary = 0,\n                size = 1) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  ggtitle(\"Frequency\")\n\n# put plots together\nhistogram_dodge + freqpoly_plot + \n  plot_layout(nrow = 1, guides = \"collect\") # collects the legends together, try removing this"},{"path":"viz.html","id":"violin-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.3.3 Violin plot","text":"Another way compare groups continuous variables violin plot. like density plot, rotated 90 degrees mirrored - fatter violin, larger proportion data points value.\nFigure 3.19: default violin plot gives shape area. Set scale='count' make size proportional number observations.\n","code":"\nviolin_area <- \n  ggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n  geom_violin() +\n  ggtitle('scale = \"area\"')\n\nviolin_count <- \n  ggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n  geom_violin(scale = \"count\") +\n  ggtitle('scale = \"count\"')\n\nviolin_area + violin_count"},{"path":"viz.html","id":"boxplot","chapter":"3 Basic Data Visualisation","heading":"3.5.3.4 Boxplot","text":"Boxplots serve similar purpose violin plots (without giggles back row). show shape distribution, rather statistics . middle line represents median; half data line half . box encloses 25th 75th percentiles data, 50% data falls inside box. \"whiskers\" extending box extend 1.5 times height box, although can change coef argument. points show outliers -- individual data points fall outside range.\nFigure 3.20: Basic boxplot.\n","code":"\nggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n geom_boxplot()"},{"path":"viz.html","id":"combo-plots","chapter":"3 Basic Data Visualisation","heading":"3.5.3.5 Combo plots","text":"Violin plots frequently layered geoms represent mean median values data. lot code, help understanding ) run layer layer see builds b) change values throughout code\nFigure 3.21: Violin plots combined different methods represent means medians.\ncommon type plot produce bar chart means, however, example demonstrates just misleading . communicates mean value category, bars hide distribution actual data. tell wait times close 3 minutes, spread 0 6 minutes, vast majority less 2 minutes, mean pulled high outliers.\nFigure 3.22: plot continuous data column plots. appropriate count data.\nColumn plots can also misleading. plot left starts y-axis 0, makes bar heights proportional, showing almost difference average wait times. Since differences hard see, may tempted start y-axis higher, makes look like average wait time returns double tech.","code":"\n# add fill and colour to the mapping\n\nggplot(survey_data,  aes(x = issue_category, \n                         y = wait_time,\n                         fill = issue_category,\n                         colour = issue_category)) +\n  scale_x_discrete(name = \"Issue Category\") +\n  scale_y_continuous(name = \"Wait Time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  coord_cartesian(ylim = c(0, 360)) +\n  guides(fill = \"none\", colour = \"none\") + \n  # add a line at median (50%) score\n  geom_violin(alpha = 0.4, \n              draw_quantiles = 0.5) + \n  # add a boxplot\n  geom_boxplot(width = 0.25, \n               fill = \"white\", \n               alpha = 0.75, \n               outlier.alpha = 0) + \n  # add a point that represents the mean\n  stat_summary(fun = mean, \n               geom = \"point\", \n               size = 2) + \n  ggtitle(\"ViolinBox\")"},{"path":"viz.html","id":"test-your-understanding-3","chapter":"3 Basic Data Visualisation","heading":"3.5.3.6 Test your understanding","text":"create plot ? geom_box()geom_boxplot()geom_violin()geom_violinplot()create plot B? geom_box()geom_boxplot()geom_violin()geom_violinplot()mapping look like plots?\n\naes(x = employee_id, y = call_time, fill = employee_id)aes(x = employee_id, y = call_time, colour = call_time)aes(x = employee_id, y = call_time, fill = call_time)aes(x = employee_id, y = call_time, colour = employee_id)\nemployee tends longest calls? e01e02e03e04e05e06e07e08e09e10Which employee record longest call? e01e02e03e04e05e06e07e08e09e10","code":""},{"path":"viz.html","id":"two-continuous-variables","chapter":"3 Basic Data Visualisation","heading":"3.5.4 Two continuous variables","text":"want see two continuous variables related, set one x-axis y-axis. Usually, one variable causes , plot cause x-axis effect y-axis. , want see longer wait times cause calls longer.","code":""},{"path":"viz.html","id":"scatterplot","chapter":"3 Basic Data Visualisation","heading":"3.5.4.1 Scatterplot","text":"function create scatterplot called geom_point().\nFigure 3.23: Scatterplot geom_point().\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point()"},{"path":"viz.html","id":"trendlines","chapter":"3 Basic Data Visualisation","heading":"3.5.4.2 Trendlines","text":"Figure 3.2, emphasised relationship wait time call time trendline created geom_smooth() using argument method = lm (\"lm\" stands \"linear model\" straight line relationship). can also set method = loess visualise non-linear relationship.\nFigure 3.24: Different ways show relationship two continuous variables.\nmuch data extremes x-axis, curve can uncertain. represented wider shaded area, means true relationship might anywhere within area. Add argument se = FALSE geom_smooth() remove \"standard error\" shading.","code":"\nlm_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = lm, formula = y~x) +\n  ggtitle(\"method = lm\")\n\nloess_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = loess, formula = y~x) +\n  ggtitle(\"method = loess\")\n\nlm_plot + loess_plot"},{"path":"viz.html","id":"dates","chapter":"3 Basic Data Visualisation","heading":"3.5.4.3 Dates","text":"call_start column contains date time, use date() function lubridate convert just date. need format able transform x-axis .can use scale_x_date() set date_breaks \"1 month\" apart. date_labels argument uses code different date formats; can see full list possibilities help ?strptime. example, %b means \"Abbreviated month name\", whilst wanted use format like \"2020/01/31\" try \"%Y/%m/%d\".looks like customer satisfaction declined across year, change meaningful? See plot looks like y-axis spans full range possible satisfaction values 1 5. can also plot individual data points emphasise range values.","code":"\nggplot(survey_data, aes(x = lubridate::date(call_start), \n                        y = satisfaction)) + \n  geom_smooth(method = lm, formula = y~x)\nggplot(survey_data, aes(x = lubridate::date(call_start), \n                        y = satisfaction)) +\n  geom_smooth(method = lm, formula = y~x) +\n  scale_x_date(name = \"\",\n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  scale_y_continuous(name = \"Caller Satisfaction\") +\n  ggtitle(\"2020 Caller Satisfaction\")\nggplot(survey_data, aes(x = lubridate::date(call_start), \n                        y = satisfaction)) +\n  # show individual data, jitter the height to avoid overlap\n  geom_jitter(width = 0, height = .1, alpha = 0.2) + \n  geom_smooth(method = lm,  formula = y~x) +\n  scale_x_date(name = \"\",\n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  scale_y_continuous(name = \"Caller Satisfaction\",\n                     breaks = 1:5) +\n  coord_cartesian(ylim = c(1, 5)) + # changes limits\n  ggtitle(\"2020 Caller Satisfaction\")"},{"path":"viz.html","id":"ordinal-variables","chapter":"3 Basic Data Visualisation","heading":"3.5.5 Ordinal variables","text":"limited range numeric values, ordinal rating scale, sometimes overlapping data makes difficult see going point plot. example, plot shows satisfaction ratings call time ratings 1, 2, 3, 4 5, makes hard see exactly many data points point.section, explore options dealing .\nFigure 3.25: Overlapping data.\n","code":"\nggplot(survey_data, aes(x = call_time, y = satisfaction)) + \n  geom_point()"},{"path":"viz.html","id":"jitter-plot","chapter":"3 Basic Data Visualisation","heading":"3.5.5.1 Jitter plot","text":"can use geom_jitter() move points around bit make easier see. can also set alpha transparency. , x-axis continuous, need jitter width, y-axis ordinal categories, height jittered -0.2 +0.2 away true y-value. can help play around values understand jitter .\nFigure 3.26: Jitter plot.\n","code":"\nggplot(survey_data, aes(x = call_time, y = satisfaction)) +\n  geom_jitter(width = 0, height = .2, alpha = 0.5)"},{"path":"viz.html","id":"facets","chapter":"3 Basic Data Visualisation","heading":"3.5.5.2 Facets","text":"Alternatively, can use facet_wrap() create separate plot level satisfaction. facet_wrap() uses tilde (~) symbol, can roughly translate \"\", e.g., facet plot satisfaction rating. labeller function controls labels plot. label_both specifies want variable name (satisfaction) value (e.g., 1) printed plot make easier read.\nFigure 3.27: histogram facets.\n, means, plot types can make R. chapter just gave basic overview, go detail Chapter ??. resources section end chapter lists many resources, R Graph Gallery especially useful one get inspiration kinds beautiful plots can make R.","code":"\nggplot(survey_data, aes(x = call_time)) +\n  geom_histogram(binwidth = 10, \n                 boundary = 0, \n                 fill = \"dodgerblue\", \n                 color = \"black\") +\n  facet_wrap(~satisfaction, \n             ncol = 1, # try changing this to 2 \n             labeller = label_both) +\n  scale_x_continuous(name = \"Call Time (seconds)\",\n                     breaks = seq(0, 600, 30))"},{"path":"viz.html","id":"r-markdown-exercises","chapter":"3 Basic Data Visualisation","heading":"3.6 R Markdown exercises","text":"final step chapter, create report data visualisations. may need refer back Chapter 2 help complete exercises may also want take break work section. also recommend knit every step can see output changes.","code":""},{"path":"viz.html","id":"exercises-new-rmd-3","chapter":"3 Basic Data Visualisation","heading":"3.6.1 New Markdown","text":"Create save new R Markdown document named plots_report.Rmd give title \"Customer satisfaction report\". Remove default template text load packages code set-code chunk:","code":"\nlibrary(tidyverse) \nlibrary(patchwork) \nlibrary(ggthemes)  \nlibrary(lubridate) \nlibrary(knitr)\nlibrary(kableExtra)\n\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\")"},{"path":"viz.html","id":"summary-1","chapter":"3 Basic Data Visualisation","heading":"3.6.2 Summary","text":"Create level 1 heading titled \"Overview\". Underneath heading, write short summary data set contains variables means (can use information Section 3.4.1 like).","code":""},{"path":"viz.html","id":"presenting-plots","chapter":"3 Basic Data Visualisation","heading":"3.6.3 Presenting plots","text":"Pick two favourites plots examples made chapter. plot:Create level 2 heading R Markdown document give informative title.Write short summary interprets data shown plots - enough just present visualisations, effective reports also help reader understand conclusions draw plots presented.Look different themes available ggtheme choose one apply plots.Make sure plot figure caption (either adding ggplot() code adding code chunk options).Organise Markdown plots shown text summary.","code":""},{"path":"viz.html","id":"combining-plots-1","chapter":"3 Basic Data Visualisation","heading":"3.6.4 Combining plots","text":"Now, pick two least favourite plots:Adjust visual aesthetics make look bad difficult read possible.Combine plots using patchwork functions.Write short summary explains think plots bad.Organise Markdown plots shown text summary.","code":""},{"path":"viz.html","id":"editing-your-markdown-display","chapter":"3 Basic Data Visualisation","heading":"3.6.5 Editing your Markdown display","text":"Adjust set-Markdown knitted report show code, messages, warnings, figures 8 x 5 (see Chapter 2.6.1).","code":""},{"path":"viz.html","id":"change-the-output","chapter":"3 Basic Data Visualisation","heading":"3.6.6 Change the output","text":"far just knitted html. generate PDF reports, need install tinytex (Xie, 2021) run following code console (add Rmd file):done , update YAML heading include following:knit PDF document. likely encounter errors - knitting pdf really seventh circle hell. happens, ask Teams help.alternative, can also knit Word document.","code":"\n# run this in the console\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()---\ntitle: \"Customer Satisfaction Report\"\nauthor: \"Your name\"\noutput:\n  pdf_document:\n------\ntitle: \"Customer Satisfaction Report\"\nauthor: \"Your name\"\noutput:\n  word_document:\n---"},{"path":"viz.html","id":"share-your-work","chapter":"3 Basic Data Visualisation","heading":"3.6.7 Share your work","text":"completed activity, post Week 3 channel Teams can compare plots chose visual style learners course.","code":""},{"path":"viz.html","id":"glossary-viz","chapter":"3 Basic Data Visualisation","heading":"3.7 Glossary","text":"","code":""},{"path":"viz.html","id":"resources-viz","chapter":"3 Basic Data Visualisation","heading":"3.8 Further Resources","text":"Data visualisation using R, researchers use R (Nordmann et al., 2021)Chapter 3: Data Visualisation R Data Scienceggplot2 cheat sheetggplot2 FAQsggplot2 documentationHack Data Beautiful workshop University Glasgow postgraduate studentsChapter 28: Graphics communication R Data Science","code":""},{"path":"installing-r.html","id":"installing-r","chapter":"A Installing R","heading":"A Installing R","text":"Installing R RStudio usually straightforward. sections explain helpful YouTube video .","code":""},{"path":"installing-r.html","id":"installing-base-r","chapter":"A Installing R","heading":"A.1 Installing Base R","text":"Install base R. Choose download link operating system (Linux, Mac OS X, Windows).Mac, install latest release newest R-x.x.x.pkg link (legacy version older operating system). may also need install XQuartz able use visualisation packages.installing Windows version, choose \"base\" subdirectory click download link top page. install R, also install RTools; use \"recommended\" version highlighted near top list.using Linux, choose specific operating system follow installation instructions.","code":""},{"path":"installing-r.html","id":"installing-rstudio","chapter":"A Installing R","heading":"A.2 Installing RStudio","text":"Go rstudio.com download RStudio Desktop (Open Source License) version operating system list titled Installers Supported Platforms.","code":""},{"path":"installing-r.html","id":"rstudio-settings","chapter":"A Installing R","heading":"A.3 RStudio Settings","text":"settings fix immediately updating RStudio. Go Global Options... Tools menu (⌘,), General tab, uncheck box says Restore .RData workspace startup. keep things around workspace, things get messy, unexpected things happen. always start clear workspace. also means never want save workspace exit, set Never. thing want save scripts.may also want change appearance code. Different fonts themes can sometimes help visual difficulties dyslexia.\nFigure .1: RStudio General Appearance settings\nmay also want change settings Code tab. example, Lisa prefers two spaces instead tabs code likes able see whitespace characters. matter personal preference.\nFigure .2: RStudio Code settings\n","code":""},{"path":"installing-r.html","id":"installing-latex","chapter":"A Installing R","heading":"A.4 Installing LaTeX","text":"can install LaTeX typesetting system produce PDF reports RStudio. Without additional installation, able produce reports HTML PDF. generate PDF reports, additionally need install tinytex (Xie, 2021) run following code:","code":"\n# run this in the console\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()"},{"path":"appendix-updating-r.html","id":"appendix-updating-r","chapter":"B Updating R, RStudio, and packages","heading":"B Updating R, RStudio, and packages","text":"time--time, updated version R, RStudio, packages use (e.g., ggplot) become available. Remember separate, different process come different considerations. recommend updating latest version three start academic year.","code":""},{"path":"appendix-updating-r.html","id":"updating-rstudio","chapter":"B Updating R, RStudio, and packages","heading":"B.1 Updating RStudio","text":"RStudio easiest component update. Typically, updates RStudio affect code, instead add new features, like spell-check upgrades RStudio can . usually little downside updating RStudio easy .Click Help - Check updates\nFigure B.1: Updating RStudio\nupdate available, prompt download can install usual.","code":""},{"path":"appendix-updating-r.html","id":"updating-packages","chapter":"B Updating R, RStudio, and packages","heading":"B.2 Updating packages","text":"Package developers occasionally release updates packages. typically add new functions package, fix amend existing functions. aware package updates may cause previous code stop working. tend happen minor updates packages, occasionally major updates, can serious issues developer made fundamental changes code works. reason, recommend updating packages beginning academic year (semester) - assessment deadline just case!update individual package, easiest way use install.packages() function, always installs recent version package.update multiple packages, indeed packages, RStudio provides helpful tools. Click Tools - Check Package Updates. dialogue box appear can select packages wish update. aware select packages, may take time unable use R whilst process completes.\nFigure B.2: Updating packages RStudio\nOccasionally, might problem packages seemingly refuse update, , rlang vctrs cause end trouble. packages likely every explicitly load, required beneath surface R things like knit Markdown files etc.try update package get error message says something like Warning install.packages : installation package ‘vctrs’ non-zero exit status perhaps Error loadNamespace(, c(lib.loc, .libPaths()), versionCheck = vI[[]]) :  namespace 'rlang' 0.4.9 loaded, >= 0.4.10 required one solution found manually uninstall package, restart R, install package new, rather trying update existing version. installr package also useful function uninstalling packages.","code":"\ninstall.packages(\"tidyverse\")\n# Load installr\nlibrary(installr)\n\n# Uninstall the problem package\nuninstall.packages(\"package_name\")\n\n# Then restart R using session - restart R\n# Then install the package fresh\n\ninstall.packages(\"package\")"},{"path":"appendix-updating-r.html","id":"updating-r","chapter":"B Updating R, RStudio, and packages","heading":"B.3 Updating R","text":"Finally, may also wish update R . key thing aware update R, just download latest version website, lose packages. easiest way update R cause huge headache use installr package. use updateR() function, series dialogue boxes appear. fairly self-explanatory full step--step guide available use installr, important bit select \"Yes\" asked like copy packages older version R.always, issues, please ask Teams come office hours.","code":"\n# Install the installr package\ninstall.packages(\"installr\")\n\n# Load installr\nlibrary(installr)\n\n# Run the update function\nupdateR()"},{"path":"symbols.html","id":"symbols","chapter":"C Symbols","heading":"C Symbols","text":"\nFigure C.1: Image James Chapman/Soundimals\n","code":""},{"path":"conventions.html","id":"conventions","chapter":"D Conventions","heading":"D Conventions","text":"book use following conventions:Generic code: list(number = 1, letter = \"\")Generic code: list(number = 1, letter = \"\")Highlighted code: list(number = 1, letter = \"\")Highlighted code: list(number = 1, letter = \"\")File paths: data/sales.csvFile paths: data/sales.csvR Packages: tidyverseR Packages: tidyverseFunctions: paste()Functions: paste()Strings: \"Lisa\", \"Emily\"Strings: \"Lisa\", \"Emily\"Numbers: 100, 3.14Numbers: 100, 3.14Logical values: TRUE, FALSELogical values: TRUE, FALSEGlossary items: ordinalGlossary items: ordinalCitations: Wickham (2021)Citations: Wickham (2021)Internal links: Chapter 3Internal links: Chapter 3External links: Mastering ShinyExternal links: Mastering ShinyMenu/interface options: New File...Menu/interface options: New File...Quiz question: going learn lot: TRUEFALSEQuiz question: going learn lot: TRUEFALSEWhat p-value?\n\nprobability null hypothesis truethe probability observed, extreme, data, assumption null-hypothesis truethe probability making error conclusion\np-value?found !Informational asides.Notes warn something.Notes things cause serious errors.Try .","code":"\n# code chunks\npaste(\"Applied\", \"Data\", \"Skills\", 1, sep = \" \")## [1] \"Applied Data Skills 1\""},{"path":"data-types.html","id":"data-types","chapter":"E Data Types","heading":"E Data Types","text":"","code":""},{"path":"data-types.html","id":"basic-data-types","chapter":"E Data Types","heading":"E.1 Basic data types","text":"Data can numbers, words, true/false values combinations . basic data types R : numeric, character, logical, well special classes factor date/times.\nFigure E.1: Data types like categories format cells Excel.\n","code":""},{"path":"data-types.html","id":"numeric-data","chapter":"E Data Types","heading":"E.1.1 Numeric data","text":"numbers numeric data types. two types numeric data, integer double. Integers whole numbers, like -1, 0 1. Doubles numbers can fractional amounts. just type plain number 10, stored double, even decimal point. want exact integer, can use L suffix (10L), distinction make much difference practice.ever want know data type something, use typeof function.want know something numeric (double integer), can use function .numeric() tell numeric (TRUE) (FALSE).","code":"\ntypeof(10)   # double\ntypeof(10.0) # double\ntypeof(10L)  # integer## [1] \"double\"\n## [1] \"double\"\n## [1] \"integer\"\nis.numeric(10L)\nis.numeric(10.0)\nis.numeric(\"Not a number\")## [1] TRUE\n## [1] TRUE\n## [1] FALSE"},{"path":"data-types.html","id":"character-data","chapter":"E Data Types","heading":"E.1.2 Character data","text":"Characters (also called \"strings\") text quotation marks.can include quotes, escape quotes using backslash signal quote meant end string.","code":"\ntypeof(\"This is a character string\")\ntypeof('You can use double or single quotes')## [1] \"character\"\n## [1] \"character\"\nmy_string <- \"The instructor said, \\\"R is cool,\\\" and the class agreed.\"\ncat(my_string) # cat() prints the arguments## The instructor said, \"R is cool,\" and the class agreed."},{"path":"data-types.html","id":"logical-data","chapter":"E Data Types","heading":"E.1.3 Logical Data","text":"Logical data (also sometimes called \"boolean\" values) one two values: true false. R, always write uppercase: TRUE FALSE.compare two values operator, checking see 10 greater 5, resulting value logical.might also see logical values abbreviated T F, 0 1. can cause problems road, always spell whole thing.","code":"\nclass(TRUE)\nclass(FALSE)## [1] \"logical\"\n## [1] \"logical\"\nis.logical(10 > 5)## [1] TRUE"},{"path":"data-types.html","id":"factors","chapter":"E Data Types","heading":"E.1.4 Factors","text":"factor specific type integer lets specify categories order. useful data tables make plots display categories correct order.Factors type integer, can tell factors checking class().","code":"\nmyfactor <- factor(\"B\", levels = c(\"A\", \"B\",\"C\"))\nmyfactor## [1] B\n## Levels: A B C\ntypeof(myfactor)\nclass(myfactor)## [1] \"integer\"\n## [1] \"factor\""},{"path":"data-types.html","id":"dates-and-times-1","chapter":"E Data Types","heading":"E.1.5 Dates and Times","text":"Dates times represented doubles special classes. Dates times hard work , lubridate package provides functions help .Date datetimes type double, can tell dates checking class(). Datetimes can one classes start POSIX.data types :100 integerdoublecharacterlogicalfactor100L integerdoublecharacterlogicalfactor\"100\" integerdoublecharacterlogicalfactor100.0 integerdoublecharacterlogicalfactor-100L integerdoublecharacterlogicalfactorfactor(100) integerdoublecharacterlogicalfactorTRUE integerdoublecharacterlogicalfactor\"TRUE\" integerdoublecharacterlogicalfactorFALSE integerdoublecharacterlogicalfactor1 == 2 integerdoublecharacterlogicalfactor","code":"\ntoday <- lubridate::today()\nnow <- lubridate::now(tzone = \"GMT\")\ntypeof(today)\ntypeof(now)\nclass(today)\nclass(now)## [1] \"double\"\n## [1] \"double\"\n## [1] \"Date\"\n## [1] \"POSIXct\" \"POSIXt\""},{"path":"data-types.html","id":"containers","chapter":"E Data Types","heading":"E.2 Basic container types","text":"Individual data values can grouped together containers. main types containers work vectors, lists, data tables.","code":""},{"path":"data-types.html","id":"vectors","chapter":"E Data Types","heading":"E.2.1 Vectors","text":"vector R set items ('elements') specific order. elements vector must data type (numeric, character, logical). can create vector enclosing elements function c().happens mix types? class variable mixed?mix data types vector; elements vector must data type. mix , R coerce . mix doubles integers, integers changed doubles. mix characters numeric types, numbers coerced characters, rhl(10)` turn \"10\".","code":"\n## put information into a vector using c(...)\nc(1, 2, 3, 4)\nc(\"this\", \"is\", \"cool\")\n1:6 # shortcut to make a vector of all integers x:y## [1] 1 2 3 4\n## [1] \"this\" \"is\"   \"cool\"\n## [1] 1 2 3 4 5 6\nmixed <- c(2, \"good\", 2L, \"b\", TRUE)\ntypeof(mixed)## [1] \"character\""},{"path":"data-types.html","id":"selecting-values-from-a-vector","chapter":"E Data Types","heading":"E.2.1.1 Selecting values from a vector","text":"wanted pick specific values vector position, can use square brackets (extract operator, []) vector.can select one value vector putting vector numbers inside square brackets. example, can select 18th, 19th, 20th, 21st, 4th, 9th 15th letter built-vector LETTERS (gives uppercase letters Latin alphabet).Can decode secret message?can also create 'named' vectors, element name. example:can access elements name using character vector within square brackets. can put order want, can repeat elements:can get vector names using names() function, can set change using something like names(vec2) <- c(\"n1\", \"n2\", \"n3\").Another way access elements using logical vector within square brackets. pull elements vector corresponding element logical vector TRUE. logical vector length original, repeat. can find long vector using length() function.","code":"\nvalues <- c(10, 20, 30, 40, 50)\nvalues[2] # selects the second value## [1] 20\nword <- c(18, 19, 20, 21, 4, 9, 15)\nLETTERS[word]## [1] \"R\" \"S\" \"T\" \"U\" \"D\" \"I\" \"O\"\nsecret <- c(14, 5, 22, 5, 18, 7, 15, 14, 14, 1, 7, 9, 22, 5, 25, 15, 21, 21, 16)\nLETTERS[secret]##  [1] \"N\" \"E\" \"V\" \"E\" \"R\" \"G\" \"O\" \"N\" \"N\" \"A\" \"G\" \"I\" \"V\" \"E\" \"Y\" \"O\" \"U\" \"U\" \"P\"\nvec <- c(first = 77.9, second = -13.2, third = 100.1)\nvec##  first second  third \n##   77.9  -13.2  100.1\nvec[c(\"third\", \"second\", \"second\")]##  third second second \n##  100.1  -13.2  -13.2\nlength(LETTERS)\nLETTERS[c(TRUE, FALSE)]## [1] 26\n##  [1] \"A\" \"C\" \"E\" \"G\" \"I\" \"K\" \"M\" \"O\" \"Q\" \"S\" \"U\" \"W\" \"Y\""},{"path":"data-types.html","id":"rep_seq","chapter":"E Data Types","heading":"E.2.1.2 Repeating Sequences","text":"useful tricks save typing creating vectors.command x:y : operator give sequence number starting x, going y increments 1.want create sequence something integer steps? can use seq() function. Look examples work arguments .want repeat vector many times? either type (painful) use rep() function, can repeat vectors different ways.rep() function useful create vector logical values (TRUE/FALSE 1/0) select values another vector.","code":"\n1:10\n15.3:20.5\n0:-10##  [1]  1  2  3  4  5  6  7  8  9 10\n## [1] 15.3 16.3 17.3 18.3 19.3 20.3\n##  [1]   0  -1  -2  -3  -4  -5  -6  -7  -8  -9 -10\nseq(from = -1, to = 1, by = 0.2)\nseq(0, 100, length.out = 11)\nseq(0, 10, along.with = LETTERS)##  [1] -1.0 -0.8 -0.6 -0.4 -0.2  0.0  0.2  0.4  0.6  0.8  1.0\n##  [1]   0  10  20  30  40  50  60  70  80  90 100\n##  [1]  0.0  0.4  0.8  1.2  1.6  2.0  2.4  2.8  3.2  3.6  4.0  4.4  4.8  5.2  5.6\n## [16]  6.0  6.4  6.8  7.2  7.6  8.0  8.4  8.8  9.2  9.6 10.0\nrep(0, 10)                      # ten zeroes\nrep(c(1L, 3L), times = 7)       # alternating 1 and 3, 7 times\nrep(c(\"A\", \"B\", \"C\"), each = 2) # A to C, 2 times each##  [1] 0 0 0 0 0 0 0 0 0 0\n##  [1] 1 3 1 3 1 3 1 3 1 3 1 3 1 3\n## [1] \"A\" \"A\" \"B\" \"B\" \"C\" \"C\"\n# Get IDs in the pattern Y Y N N ...\nids <- 1:40\nyynn <- rep(c(TRUE, FALSE), each = 2, \n            length.out = length(ids))\nids[yynn]##  [1]  1  2  5  6  9 10 13 14 17 18 21 22 25 26 29 30 33 34 37 38"},{"path":"data-types.html","id":"lists","chapter":"E Data Types","heading":"E.2.2 Lists","text":"Recall vectors can contain data one type. want store collection data different data types? purpose use list. Define list using list() function.can refer elements list using square brackets like vector, can also use dollar sign notation ($) list items names.Explore 5 ways shown extract value list. data type object? difference single double brackets? one dollar sign?single brackets (bracket1 name1) return list subset items inside brackets. case, just one item, can (try data_types[1:2]). items keep names , returned value rhl(list(double = 10))`.double brackets (bracket2 name2 return single item vector. select one item; data_types[[1:2]] give \"subscript bounds\" error.dollar-sign notation double-brackets. name spaces characters letters, numbers, underscores, full stops, need surround name backticks (e.g., sales$`Customer ID`).","code":"\ndata_types <- list(\n  double = 10.0,\n  integer = 10L,\n  character = \"10\",\n  logical = TRUE\n)\n\nstr(data_types) # str() prints lists in a condensed format## List of 4\n##  $ double   : num 10\n##  $ integer  : int 10\n##  $ character: chr \"10\"\n##  $ logical  : logi TRUE\ndata_types$logical## [1] TRUE\nbracket1 <- data_types[1]\nbracket2 <- data_types[[1]]\nname1    <- data_types[\"double\"]\nname2    <- data_types[[\"double\"]]\ndollar   <- data_types$double"},{"path":"data-types.html","id":"tables-data","chapter":"E Data Types","heading":"E.2.3 Tables","text":"Tabular data structures allow collection data different types (characters, integers, logical, etc.) subject constraint \"column\" table (element list) must number elements. base R version table called data.frame, 'tidyverse' version called tibble. Tibbles far easier work , using . learn differences two data structures, see vignette(\"tibble\").Tabular data becomes especially important talk tidy data Chapter ??, consists set simple principles structuring data.","code":"\n# construct a table by column with tibble\navatar <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE\n)\n\n# or by row with tribble\navatar <- tribble(\n  ~name,    ~bends,  ~friendly,\n  \"Katara\", \"water\", TRUE,\n  \"Toph\",   \"earth\", TRUE,\n  \"Sokka\",  NA,      TRUE\n)\n# export the data to a file\nrio::export(avatar, \"data/avatar.csv\")\n\n# or by importing data from a file\navatar <- rio::import(\"data/avatar.csv\")"},{"path":"data-types.html","id":"table-info","chapter":"E Data Types","heading":"E.2.3.1 Table info","text":"can get information table using following functions.ncol(): number columnsnrow(): number rowsdim(): number rows number columnsname(): column namesglimpse(): column types","code":"\nnrow(avatar)\nncol(avatar)\ndim(avatar)\nnames(avatar)\nglimpse(avatar)## [1] 3\n## [1] 3\n## [1] 3 3\n## [1] \"name\"     \"bends\"    \"friendly\"\n## Rows: 3\n## Columns: 3\n## $ name     <chr> \"Katara\", \"Toph\", \"Sokka\"\n## $ bends    <chr> \"water\", \"earth\", NA\n## $ friendly <lgl> TRUE, TRUE, TRUE"},{"path":"data-types.html","id":"row-col-access","chapter":"E Data Types","heading":"E.2.3.2 Accessing rows and columns","text":"various ways accessing specific columns rows table. ones base R useful know , learning easier (readable) ways Chapters ?? ??. Examples base R accessing functions provided reference, since might see people's scripts.","code":"\nkatara     <- avatar[1, ] # first row\ntype       <- avatar[, 2] # second column (bends)\nbenders    <- avatar[c(1, 2), ] # selected rows (by number)\nbends_name <- avatar[, c(\"bends\", \"name\")] # selected columns (by name)\nfriendly   <- avatar$friendly  # by column name"},{"path":"data-types.html","id":"glossary-datatypes","chapter":"E Data Types","heading":"E.3 Glossary","text":"","code":""},{"path":"plotstyle.html","id":"plotstyle","chapter":"F Styling Plots","heading":"F Styling Plots","text":"","code":""},{"path":"plotstyle.html","id":"aesthetics","chapter":"F Styling Plots","heading":"F.1 Aesthetics","text":"","code":""},{"path":"plotstyle.html","id":"colourfill","chapter":"F Styling Plots","heading":"F.1.1 Colour/Fill","text":"colour argument changes point line colour, fill argument changes interior colour shapes. Type colours() console see list named colours R. Alternatively, can use hexadecimal colours like \"#FF8000\" rgb() function set red, green, blue values scale 0 1.Hover colour see R name.\nblack\n\ngray1\n\ngray2\n\ngray3\n\ngray4\n\ngray5\n\ngray6\n\ngray7\n\ngray8\n\ngray9\n\ngray10\n\ngray11\n\ngray12\n\ngray13\n\ngray14\n\ngray15\n\ngray16\n\ngray17\n\ngray18\n\ngray19\n\ngray20\n\ngray21\n\ngray22\n\ngray23\n\ngray24\n\ngray25\n\ngray26\n\ngray27\n\ngray28\n\ngray29\n\ngray30\n\ngray31\n\ngray32\n\ngray33\n\ngray34\n\ngray35\n\ngray36\n\ngray37\n\ngray38\n\ngray39\n\ngray40\n\ndimgray\n\ngray42\n\ngray43\n\ngray44\n\ngray45\n\ngray46\n\ngray47\n\ngray48\n\ngray49\n\ngray50\n\ngray51\n\ngray52\n\ngray53\n\ngray54\n\ngray55\n\ngray56\n\ngray57\n\ngray58\n\ngray59\n\ngray60\n\ngray61\n\ngray62\n\ngray63\n\ngray64\n\ngray65\n\ndarkgray\n\ngray66\n\ngray67\n\ngray68\n\ngray69\n\ngray70\n\ngray71\n\ngray72\n\ngray73\n\ngray74\n\ngray\n\ngray75\n\ngray76\n\ngray77\n\ngray78\n\ngray79\n\ngray80\n\ngray81\n\ngray82\n\ngray83\n\nlightgray\n\ngray84\n\ngray85\n\ngainsboro\n\ngray86\n\ngray87\n\ngray88\n\ngray89\n\ngray90\n\ngray91\n\ngray92\n\ngray93\n\ngray94\n\ngray95\n\ngray96\n\ngray97\n\ngray98\n\ngray99\n\nwhite\n\nsnow4\n\nsnow3\n\nsnow2\n\nsnow\n\nrosybrown4\n\nrosybrown\n\nrosybrown3\n\nrosybrown2\n\nrosybrown1\n\nlightcoral\n\nindianred\n\nindianred4\n\nindianred2\n\nindianred1\n\nindianred3\n\nbrown4\n\nbrown\n\nbrown3\n\nbrown2\n\nbrown1\n\nfirebrick4\n\nfirebrick\n\nfirebrick3\n\nfirebrick1\n\nfirebrick2\n\ndarkred\n\nred3\n\nred2\n\nred\n\nmistyrose3\n\nmistyrose4\n\nmistyrose2\n\nmistyrose\n\nsalmon\n\ntomato3\n\ncoral4\n\ncoral3\n\ncoral2\n\ncoral1\n\ntomato2\n\ntomato\n\ntomato4\n\ndarksalmon\n\nsalmon4\n\nsalmon3\n\nsalmon2\n\nsalmon1\n\ncoral\n\norangered4\n\norangered3\n\norangered2\n\nlightsalmon3\n\nlightsalmon2\n\nlightsalmon\n\nlightsalmon4\n\nsienna\n\nsienna3\n\nsienna2\n\nsienna1\n\nsienna4\n\norangered\n\nseashell4\n\nseashell3\n\nseashell2\n\nseashell\n\nchocolate4\n\nchocolate3\n\nchocolate\n\nchocolate2\n\nchocolate1\n\nlinen\n\npeachpuff4\n\npeachpuff3\n\npeachpuff2\n\npeachpuff\n\nsandybrown\n\ntan4\n\nperu\n\ntan2\n\ntan1\n\ndarkorange4\n\ndarkorange3\n\ndarkorange2\n\ndarkorange1\n\nantiquewhite3\n\nantiquewhite2\n\nantiquewhite1\n\nbisque4\n\nbisque3\n\nbisque2\n\nbisque\n\nburlywood4\n\nburlywood3\n\nburlywood\n\nburlywood2\n\nburlywood1\n\ndarkorange\n\nantiquewhite4\n\nantiquewhite\n\npapayawhip\n\nblanchedalmond\n\nnavajowhite4\n\nnavajowhite3\n\nnavajowhite2\n\nnavajowhite\n\ntan\n\nfloralwhite\n\noldlace\n\nwheat4\n\nwheat3\n\nwheat2\n\nwheat\n\nwheat1\n\nmoccasin\n\norange4\n\norange3\n\norange2\n\norange\n\ngoldenrod\n\ngoldenrod1\n\ngoldenrod4\n\ngoldenrod3\n\ngoldenrod2\n\ndarkgoldenrod4\n\ndarkgoldenrod\n\ndarkgoldenrod3\n\ndarkgoldenrod2\n\ndarkgoldenrod1\n\ncornsilk\n\ncornsilk4\n\ncornsilk3\n\ncornsilk2\n\nlightgoldenrod4\n\nlightgoldenrod3\n\nlightgoldenrod\n\nlightgoldenrod2\n\nlightgoldenrod1\n\ngold4\n\ngold3\n\ngold2\n\ngold\n\nlemonchiffon4\n\nlemonchiffon3\n\nlemonchiffon2\n\nlemonchiffon\n\npalegoldenrod\n\nkhaki\n\ndarkkhaki\n\nkhaki4\n\nkhaki3\n\nkhaki2\n\nkhaki1\n\nivory4\n\nivory3\n\nivory2\n\nivory\n\nbeige\n\nlightyellow4\n\nlightyellow3\n\nlightyellow2\n\nlightyellow\n\nlightgoldenrodyellow\n\nyellow4\n\nyellow3\n\nyellow2\n\nyellow\n\nolivedrab\n\nolivedrab4\n\nolivedrab3\n\nolivedrab2\n\nolivedrab1\n\ndarkolivegreen\n\ndarkolivegreen4\n\ndarkolivegreen3\n\ndarkolivegreen2\n\ndarkolivegreen1\n\ngreenyellow\n\nchartreuse4\n\nchartreuse3\n\nchartreuse2\n\nlawngreen\n\nchartreuse\n\nhoneydew4\n\nhoneydew3\n\nhoneydew2\n\nhoneydew\n\ndarkseagreen4\n\ndarkseagreen\n\ndarkseagreen3\n\ndarkseagreen2\n\ndarkseagreen1\n\nlightgreen\n\npalegreen\n\npalegreen4\n\npalegreen3\n\npalegreen1\n\nforestgreen\n\nlimegreen\n\ndarkgreen\n\ngreen4\n\ngreen3\n\ngreen2\n\ngreen\n\nmediumseagreen\n\nseagreen\n\nseagreen3\n\nseagreen2\n\nseagreen1\n\nmintcream\n\nspringgreen4\n\nspringgreen3\n\nspringgreen2\n\nspringgreen\n\naquamarine3\n\naquamarine2\n\naquamarine\n\nmediumspringgreen\n\naquamarine4\n\nturquoise\n\nmediumturquoise\n\nlightseagreen\n\nazure4\n\nazure3\n\nazure2\n\nazure\n\nlightcyan4\n\nlightcyan3\n\nlightcyan2\n\nlightcyan\n\npaleturquoise\n\npaleturquoise4\n\npaleturquoise3\n\npaleturquoise2\n\npaleturquoise1\n\ndarkslategray\n\ndarkslategray4\n\ndarkslategray3\n\ndarkslategray2\n\ndarkslategray1\n\ncyan4\n\ncyan3\n\ndarkturquoise\n\ncyan2\n\ncyan\n\ncadetblue4\n\ncadetblue\n\nturquoise4\n\nturquoise3\n\nturquoise2\n\nturquoise1\n\npowderblue\n\ncadetblue3\n\ncadetblue2\n\ncadetblue1\n\nlightblue4\n\nlightblue3\n\nlightblue\n\nlightblue2\n\nlightblue1\n\ndeepskyblue4\n\ndeepskyblue3\n\ndeepskyblue2\n\ndeepskyblue\n\nskyblue\n\nlightskyblue4\n\nlightskyblue3\n\nlightskyblue2\n\nlightskyblue1\n\nlightskyblue\n\nskyblue4\n\nskyblue3\n\nskyblue2\n\nskyblue1\n\naliceblue\n\nslategray\n\nlightslategray\n\nslategray3\n\nslategray2\n\nslategray1\n\nsteelblue4\n\nsteelblue\n\nsteelblue3\n\nsteelblue2\n\nsteelblue1\n\ndodgerblue4\n\ndodgerblue3\n\ndodgerblue2\n\ndodgerblue\n\nlightsteelblue4\n\nlightsteelblue3\n\nlightsteelblue\n\nlightsteelblue2\n\nlightsteelblue1\n\nslategray4\n\ncornflowerblue\n\nroyalblue\n\nroyalblue4\n\nroyalblue3\n\nroyalblue2\n\nroyalblue1\n\nghostwhite\n\nlavender\n\nmidnightblue\n\nnavy\n\nblue4\n\nblue3\n\nblue2\n\nblue\n\ndarkslateblue\n\nslateblue\n\nmediumslateblue\n\nlightslateblue\n\nslateblue1\n\nslateblue4\n\nslateblue3\n\nslateblue2\n\nmediumpurple4\n\nmediumpurple3\n\nmediumpurple\n\nmediumpurple2\n\nmediumpurple1\n\npurple4\n\npurple3\n\nblueviolet\n\npurple1\n\npurple2\n\npurple\n\ndarkorchid\n\ndarkorchid4\n\ndarkorchid3\n\ndarkorchid2\n\ndarkorchid1\n\ndarkviolet\n\nmediumorchid4\n\nmediumorchid3\n\nmediumorchid\n\nmediumorchid2\n\nmediumorchid1\n\nthistle4\n\nthistle3\n\nthistle\n\nthistle2\n\nthistle1\n\nplum4\n\nplum3\n\nplum2\n\nplum1\n\nplum\n\nviolet\n\ndarkmagenta\n\nmagenta3\n\nmagenta2\n\nmagenta\n\norchid4\n\norchid3\n\norchid\n\norchid2\n\norchid1\n\nmaroon4\n\nvioletred\n\nmaroon3\n\nmaroon2\n\nmaroon1\n\nmediumvioletred\n\ndeeppink3\n\ndeeppink2\n\ndeeppink\n\ndeeppink4\n\nhotpink2\n\nhotpink1\n\nhotpink4\n\nhotpink\n\nvioletred4\n\nvioletred3\n\nvioletred2\n\nvioletred1\n\nhotpink3\n\nlavenderblush4\n\nlavenderblush3\n\nlavenderblush2\n\nlavenderblush\n\nmaroon\n\npalevioletred4\n\npalevioletred3\n\npalevioletred\n\npalevioletred2\n\npalevioletred1\n\npink4\n\npink3\n\npink2\n\npink1\n\npink\n\nlightpink\n\nlightpink4\n\nlightpink3\n\nlightpink2\n\nlightpink1\n","code":""},{"path":"plotstyle.html","id":"alpha","chapter":"F Styling Plots","heading":"F.1.2 Alpha","text":"alpha argument changes transparency (0 = totally transparent, 1 = totally opaque).\nFigure F.1: Varying alpha values.\n","code":""},{"path":"plotstyle.html","id":"shape","chapter":"F Styling Plots","heading":"F.1.3 Shape","text":"shape argument changes shape points.\nFigure F.2: 25 shape values\n","code":""},{"path":"plotstyle.html","id":"linetype","chapter":"F Styling Plots","heading":"F.1.4 Linetype","text":"can probably guess linetype argument .\nFigure F.3: 6 linetype values different sizes.\n","code":""},{"path":"plotstyle.html","id":"palettes","chapter":"F Styling Plots","heading":"F.2 Palettes","text":"Discrete palettes change depending number categories.\nFigure F.4: Default discrete palette different numbers levels.\n","code":""},{"path":"plotstyle.html","id":"viridis-palettes","chapter":"F Styling Plots","heading":"F.2.1 Viridis Palettes","text":"Viridis palettes good colourblind-safe greyscale-safe plots. work number categories, best larger numbers categories continuous colours.","code":""},{"path":"plotstyle.html","id":"discrete-viridis-palettes","chapter":"F Styling Plots","heading":"F.2.1.1 Discrete Viridis Palettes","text":"Set discrete viridis colours scale_colour_viridis_d() scale_fill_viridis_d() set option argument one options . Set direction = -1 reverse order colours.\nFigure F.5: Discrete viridis palettes.\nend colour light plot start colour dark, can set begin end arguments values 0 1, scale_colour_viridis_c(begin = 0.1, end = 0.9).","code":""},{"path":"plotstyle.html","id":"continuous-viridis-palettes","chapter":"F Styling Plots","heading":"F.2.1.2 Continuous Viridis Palettes","text":"Set continuous viridis colours scale_colour_viridis_c() scale_fill_viridis_c() set option argument one options . Set direction = -1 reverse order colours.\nFigure F.6: Continuous viridis palettes.\n","code":""},{"path":"plotstyle.html","id":"brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2 Brewer Palettes","text":"Brewer palettes give lot control plot colour fill. set scale_color_brewer() scale_fill_brewer() set palette argument one palettes . Set direction = -1 reverse order colours.","code":""},{"path":"plotstyle.html","id":"qualitative-brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2.1 Qualitative Brewer Palettes","text":"palettes good categorical data 8 categories (palettes can handle 12). \"Paired\" palette useful categories arranged pairs.\nFigure F.7: Qualitative brewer palettes.\n","code":""},{"path":"plotstyle.html","id":"sequential-brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2.2 Sequential Brewer Palettes","text":"palettes good 9 ordinal categories lot categories.\nFigure F.8: Sequential brewer palettes.\n","code":""},{"path":"plotstyle.html","id":"diverging-brewer-palettes","chapter":"F Styling Plots","heading":"F.2.2.3 Diverging Brewer Palettes","text":"palettes good ordinal categories 11 levels centre level neutral baseline category levels differ important way, agree versus disagree options.\nFigure F.9: Diverging brewer palettes.\n","code":""},{"path":"plotstyle.html","id":"themes-appendix","chapter":"F Styling Plots","heading":"F.3 Themes","text":"ggplot2 8 built-themes can add plot like plot + theme_bw() set default theme top script like theme_set(theme_bw()).\nFigure F.10: {ggplot2} themes.\n","code":""},{"path":"plotstyle.html","id":"ggthemes","chapter":"F Styling Plots","heading":"F.3.1 ggthemes","text":"can get themes add-packages, like ggthemes. themes also custom scale_ functions like scale_colour_economist(). website extensive examples instructions alternate dark versions themes.\nFigure 2.7: {ggthemes} themes.\n","code":""},{"path":"plotstyle.html","id":"fonts","chapter":"F Styling Plots","heading":"F.3.2 Fonts","text":"can customise fonts used themes. computers able recognise families \"sans\", \"serif\", \"mono\", computers able access installed fonts name.\nFigure F.11: Different fonts.\nHowever, may add fonts first, especially using Windows. showtext package flexible way add fonts..ttf file font site, like Font Squirrel, can load file directly using font_add(). Set regular path file regular version font, optionally add versions. Set family name want use font. need include local font files sharing script others.download fonts directly Google fonts, use function font_add_google(), set name exact name site, family name want use font.added fonts local files Google, need make available R using showtext_auto(). steps script want use custom fonts.change fonts used overall plot, use theme() function set text element_text(family = \"new_font_family\").\nFigure F.12: Custom Fonts.\nset fonts individual elements plot, need find specific argument element. can use argument face choose \"bold\", \"italic\", \"bolditalic\" versions, available.\nFigure F.13: Multiple custom fonts plot.\n","code":"\nsans <- g + theme_bw(base_family = \"sans\") + \n  ggtitle(\"Sans\")\nserif <- g + theme_bw(base_family = \"serif\") + \n  ggtitle(\"Serif\")\nmono <- g + theme_bw(base_family = \"mono\") + \n  ggtitle(\"Mono\")\nfont <- g + theme_bw(base_family = \"Comic Sans MS\") + \n  ggtitle(\"Comic Sans MS\")\n\nsans + serif + mono + font + plot_layout(nrow = 1)\nlibrary(showtext)\n\n# font from https://www.fontsquirrel.com/fonts/SF-Cartoonist-Hand\n\nfont_add(\n  regular = \"fonts/cartoonist/SF_Cartoonist_Hand.ttf\",\n  bold = \"fonts/cartoonist/SF_Cartoonist_Hand_Bold.ttf\",\n  italic = \"fonts/cartoonist/SF_Cartoonist_Hand_Italic.ttf\",\n  bolditalic = \"fonts/cartoonist/SF_Cartoonist_Hand_Bold_Italic.ttf\",\n  family = \"cartoonist\" \n)\n# download fonts from Google\nfont_add_google(name = \"Courgette\", family = \"courgette\")\nfont_add_google(name = \"Poiret One\", family = \"poiret\")\nshowtext_auto() # load the fonts\na <- g + theme(text = element_text(family = \"courgette\")) +\n  ggtitle(\"Courgette\")\nb <- g + theme(text = element_text(family = \"cartoonist\")) +\n  ggtitle(\"Cartoonist Hand\")\nc <- g + theme(text = element_text(family = \"poiret\")) +\n  ggtitle(\"Poiret One\")\n\na + b + c\ng + ggtitle(\"Cartoonist Hand\") +\n  theme(\n    title = element_text(family = \"cartoonist\", face = \"bold\"),\n    strip.text = element_text(family = \"cartoonist\", face = \"italic\"),\n    axis.text = element_text(family = \"sans\")\n  )"},{"path":"twitter-example.html","id":"twitter-example","chapter":"G Twitter Example","heading":"G Twitter Example","text":"section takes problem-based approach teach use functions , combination functions learned previous chapters, summarise visualise twitter data.","code":"\nlibrary(tidyverse)   # data wrangling functions\nlibrary(lubridate)   # for handling dates and times"},{"path":"twitter-example.html","id":"single-data-file","chapter":"G Twitter Example","heading":"G.1 Single Data File","text":"","code":""},{"path":"twitter-example.html","id":"export-data","chapter":"G Twitter Example","heading":"G.1.1 Export Data","text":"can export organisations' twitter data https://analytics.twitter.com/. Go Tweets tab, choose time period, export last month's data day (use files class data).","code":""},{"path":"twitter-example.html","id":"import-data","chapter":"G Twitter Example","heading":"G.1.2 Import Data","text":"","code":"\nfile <- \"data/tweets/daily_tweet_activity_metrics_LisaDeBruine_20210801_20210901_en.csv\"\n\ndaily_tweets <- read_csv(file, show_col_types = FALSE)"},{"path":"twitter-example.html","id":"select-relevant-data","chapter":"G Twitter Example","heading":"G.1.3 Select Relevant Data","text":"file contains bunch columns \"promoted\" tweets blank unless organisation pays . get rid . can use select helper starts_with() get columns start \"promoted\" remove prefacing function !. Now 20 columns, can inspect glimpse().","code":"\ndaily_tweets <- read_csv(file) %>%\n  select(!starts_with(\"promoted\")) %>%\n  glimpse()## Rows: 31\n## Columns: 20\n## $ Date                  <date> 2021-08-01, 2021-08-02, 2021-08-03, 2021-08-04,…\n## $ `Tweets published`    <dbl> 0, 2, 4, 15, 12, 11, 14, 17, 26, 17, 3, 9, 5, 17…\n## $ impressions           <dbl> 1088, 1244, 3974, 22394, 23340, 316989, 694114, …\n## $ engagements           <dbl> 13, 19, 76, 1290, 2051, 26249, 51494, 5988, 2964…\n## $ `engagement rate`     <dbl> 0.01194853, 0.01527331, 0.01912431, 0.05760472, …\n## $ retweets              <dbl> 0, 0, 0, 5, 15, 124, 130, 18, 13, 4, 2, 25, 1, 7…\n## $ replies               <dbl> 0, 2, 5, 15, 16, 122, 123, 21, 52, 21, 4, 11, 9,…\n## $ likes                 <dbl> 2, 3, 25, 96, 108, 628, 847, 93, 116, 68, 10, 10…\n## $ `user profile clicks` <dbl> 1, 9, 10, 56, 36, 379, 550, 98, 78, 31, 17, 104,…\n## $ `url clicks`          <dbl> 2, 0, 0, 45, 97, 10136, 19467, 1937, 681, 324, 1…\n## $ `hashtag clicks`      <dbl> 0, 0, 0, 0, 0, 0, 1, 5, 1, 0, 0, 12, 1, 2, 3, 1,…\n## $ `detail expands`      <dbl> 7, 5, 36, 412, 606, 10348, 21021, 2642, 1441, 79…\n## $ `permalink clicks`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ `app opens`           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ `app installs`        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ follows               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ `email tweet`         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ `dial phone`          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ `media views`         <dbl> 2, 2, 25, 710, 1187, 4474, 9356, 1176, 582, 334,…\n## $ `media engagements`   <dbl> 1, 0, 0, 661, 1173, 4464, 9353, 1174, 582, 327, …"},{"path":"twitter-example.html","id":"plot-likes-per-day","chapter":"G Twitter Example","heading":"G.1.4 Plot Likes per Day","text":"Now plot likes per day. scale_x_date() function lets formats x-axis dates.\nFigure G.1: Likes per day.\n","code":"\nggplot(daily_tweets, aes(x = Date, y = likes)) +\n  geom_line() +\n  scale_x_date(name = \"\", \n               date_breaks = \"1 day\",\n               date_labels = \"%d\",\n               expand = expansion(add = c(.5, .5))) +\n  ggtitle(\"Likes: August 2021\")"},{"path":"twitter-example.html","id":"plot-multiple-engagements","chapter":"G Twitter Example","heading":"G.1.5 Plot Multiple Engagements","text":"want plot likes, retweets, replies plot? need get numbers column column contains \"engagement type\" can use determine different line colours. data different columns need get column, wide need pivot data longer.Now can plot number engagements per day engagement type making line colour determined value engage_type column.\nFigure G.2: Engagements per day engagement type.\n","code":"\nlong_tweets <- daily_tweets %>%\n  select(Date, likes, retweets, replies) %>%\n  pivot_longer(cols = c(likes, retweets, replies),\n               names_to = \"engage_type\",\n               values_to = \"n\")\n\nhead(long_tweets)\nggplot(long_tweets, aes(x = Date, y = n, colour = engage_type)) +\n  geom_line() +\n  scale_x_date(name = \"\", \n               date_breaks = \"1 day\",\n               date_labels = \"%d\",\n               expand = expansion(add = c(.5, .5))) +\n  scale_y_continuous(name = \"Engagements per Day\") + \n  scale_colour_discrete(name = \"\") +\n  ggtitle(\"August 2021\") +\n  theme(legend.position = c(.9, .8),\n        panel.grid.minor = element_blank())"},{"path":"twitter-example.html","id":"multiple-data-files","chapter":"G Twitter Example","heading":"G.2 Multiple Data Files","text":"Maybe now want compare data several months. First, get list files want combine. easiest directory, although can use pattern select files want systematic naming structure.use map_df() iterate list file paths, open read_csv(), return big data frame combined data. can pipe select() function get rid \"promoted\" columns.Now can make plot likes per day months.Notice changed date breaks labels x-axis. %B date code full month name. See ?strptime date codes.","code":"\nfiles <- list.files(\n  path = \"data/tweets\", \n  pattern = \"daily_tweet_activity_metrics\",\n  full.names = TRUE\n)\nall_daily_tweets <- purrr::map_df(files, read_csv) %>%\n  select(!starts_with(\"promoted\"))\nggplot(all_daily_tweets, aes(x = Date, y = likes)) +\n  geom_line(colour = \"dodgerblue\") +\n  scale_y_continuous(name = \"Likes per Day\") + \n  scale_x_date(name = \"\", \n               date_breaks = \"1 month\",\n               date_labels = \"%B\",\n               expand = expansion(add = c(.5, .5))) +\n  ggtitle(\"Likes 2021\")"},{"path":"twitter-example.html","id":"likes-by-month","chapter":"G Twitter Example","heading":"G.2.1 Likes by Month","text":"want plot likes month, first need column month. Use mutate() make new column, using lubridate::month() extract month name Date column.group new month column calculate sum likes. group_by() function causes subsequent functions operate inside groups, call ungroup(). example , sum(likes) function calculates sum total likes column separately month.column plot might make sense line plot summary.\nFigure G.3: Likes month.\nchange code section plot number tweets published per week?Hint: lubridate function month month(), function getting week likely ?","code":"\nlikes_by_month <- all_daily_tweets %>%\n  mutate(month = month(Date, label = TRUE)) %>%\n  group_by(month) %>%\n  summarise(total_likes = sum(likes)) %>%\n  ungroup()\n\nlikes_by_month\nggplot(likes_by_month, aes(x = month, y = total_likes, fill = month)) +\n  geom_col(color = \"black\", show.legend = FALSE) +\n  scale_x_discrete(name = \"\") +\n  scale_y_continuous(name = \"Total Likes per Month\",\n                     breaks = seq(0, 10000, 1000),\n                     labels = paste0(0:10, \"K\")) +\n  scale_fill_brewer(palette = \"Spectral\")\ntweets_by_week <- all_daily_tweets %>%\n  mutate(week = week(Date)) %>%\n  group_by(week) %>%\n  summarise(start_date = min(Date),\n            total_tweets = sum(`Tweets published`)) %>%\n  ungroup()\nggplot(tweets_by_week, aes(x = start_date, y = total_tweets)) +\n  geom_col(fill = \"hotpink\") +\n  scale_x_date(name = \"\",\n               date_breaks = \"1 month\", \n               date_labels = \"%B\") +\n  scale_y_continuous(name = \"Total Tweets per Week\")"},{"path":"twitter-example.html","id":"data-by-tweet","chapter":"G Twitter Example","heading":"G.3 Data by Tweet","text":"can also download twitter data tweet instead day. usually takes little longer download. can use pattern read combine tweet data files.^ start pattern means file name start . means match \"daily_tweet...\" files.First, open first file see need anything .look file Viewer, can set Tweet id column using scientific notation (1.355500e+18) instead full 18-digit tweet ID, gives different IDs value. ever want add ID numbers,safe represent characters. Set map files col_types specified, get rid promoted columns add month hour columns (reading date time column data).","code":"\ntweet_files <- list.files(\n  path = \"data/tweets\", \n  pattern = \"^tweet_activity_metrics\",\n  full.names = TRUE\n)\ntweets <- read_csv(tweet_files[1])\nct <- cols(\"Tweet id\" = col_character())\nall_tweets <- map_df(tweet_files, read_csv, col_types = ct) %>%\n  select(!starts_with(\"promoted\")) %>%\n  mutate(month = lubridate::month(time, label = TRUE),\n         hour = lubridate::hour(time))"},{"path":"twitter-example.html","id":"impressions-per-tweet","chapter":"G Twitter Example","heading":"G.3.1 Impressions per Tweet","text":"Now can look distribution impressions per tweet month.\nFigure G.4: Impressions per tweet per month.\ny-axis transformed \"pseudo_log\" show skewed data clearly (tweets get hundred impressions, can get thousands). See plot looks like change y-axis transformation.","code":"\nggplot(all_tweets, aes(x = month, y = impressions, fill = month)) +\n  geom_violin(show.legend = FALSE, alpha = 0.8) +\n  scale_fill_brewer(palette = \"Spectral\") +\n  scale_x_discrete(name = \"\") +\n  scale_y_continuous(name = \"Impressions per Tweet\",\n                     breaks = c(0, 10^(2:7)),\n                     labels = c(0, 10, 100, \"1K\", \"10K\", \"100K\", \"1M\"),\n                     trans = \"pseudo_log\") +\n  ggtitle(\"Distribution of Twitter Impressions per Tweet in 2021\")"},{"path":"twitter-example.html","id":"top-tweet","chapter":"G Twitter Example","heading":"G.3.2 Top Tweet","text":"can display Lisa's top tweet year.Top tweet 1190 likes:","code":"\ntop_tweet <- all_tweets %>%\n  slice_max(order_by = likes, n = 1)\n\nglue::glue(\"[Top tweet]({top_tweet$`Tweet permalink`}) with {top_tweet$likes} likes:\n\n---------------------------\n{top_tweet$`Tweet text`}\n---------------------------\n\") %>% cat()"},{"path":"twitter-example.html","id":"word-cloud","chapter":"G Twitter Example","heading":"G.3.3 Word Cloud","text":"can make word cloud top words tweet . (learn Chapter ??).","code":""},{"path":"twitter-example.html","id":"tweets-by-hour","chapter":"G Twitter Example","heading":"G.3.4 Tweets by Hour","text":"order make plot tweets hour, colouring data wherther sun , can join data table sunrise sunset times day Glasgow (download table region).Day column originally read character column, convert date import using col_types argument.Create matching Day column all_tweets, plus hour column plotting (factor structure starts day 8:00), tweet_time column comparing RiseTime SetTime columns, decimal hours.join sun table create timeofday column equals \"day\" sun \"night\" sun set.Check random rows make sure everything correctly.Plot hour along x-axis set fill colour timeofday. Use scale_*_manual() functions set custom colours day night.\nFigure G.5: Tweets per hour day\nGo line plot work function argument changing removing .","code":"\nsun <- read_csv(\"data/sunfact2021.csv\", \n                col_types = cols(\n                  Day = col_date(format=\"%d/%m/%Y\"),\n                  RiseTime = col_double(),\n                  SetTime = col_double()\n                ))\nsun_tweets <- all_tweets %>%\n  select(time) %>%\n  mutate(Day = date(time),\n         hour = factor(hour(time), \n                       levels = c(8:23, 0:7)),\n         tweet_time = hour(time) + minute(time)/60) %>%\n  left_join(sun, by = \"Day\") %>%\n  mutate(timeofday = ifelse(tweet_time>RiseTime & \n                            tweet_time<SetTime, \n                            yes = \"day\", \n                            no = \"night\"))\nslice_sample(sun_tweets, n = 10)\nmap <- aes(x = hour, \n           fill = timeofday, \n           colour = timeofday)\n\nggplot(sun_tweets, mapping = map) +\n  geom_bar(show.legend = FALSE) +\n  labs(x = \"\", \n       y = \"\",\n       title = \"Number of tweets by hour of the day\") +\n  scale_x_discrete(breaks = c(8:23, 0:7)[c(T, F, F, F)],\n                   drop = FALSE) +\n  scale_y_continuous(expand = c(0, 0, .1, 0)) +\n  scale_fill_manual(values = c(\"gold\", \"midnightblue\")) +\n  scale_colour_manual(values = c(\"darkgoldenrod1\", \"black\")) +\n  facet_wrap(~month(time, label = TRUE, abbr = FALSE), nrow = 3) +\n  theme(strip.background = element_rect(fill = \"white\", \n                                        color = \"transparent\"),\n        panel.grid = element_blank())"},{"path":"webpages.html","id":"webpages","chapter":"H Webpages","heading":"H Webpages","text":"tutorial, learn create simple webpage using R Markdown, link multiple pages, style content using css.CSS changes styles three levels headers (h2, h3, h4) sets third level italics.also gives paragraphs (p) green border double-spacing.Unordered Lists (ul) get:dotted red borderround cornersincreased padding top (10px) sides (30px)","code":""},{"path":"webpages.html","id":"webpage-create","chapter":"H Webpages","heading":"H.1 Create a webpage","text":"","code":""},{"path":"webpages.html","id":"create-a-project","chapter":"H Webpages","heading":"H.1.1 Create a project","text":"Choose New Project... File menu (save workspaces)Choose New Directory > Simple R Markdown WebsiteSet project name \"mywebpage\"","code":""},{"path":"webpages.html","id":"site-header","chapter":"H Webpages","heading":"H.1.2 Site header","text":"can set options like whether show table contents navigation bar look like. edit later add section menu.Open file _site.ymlOpen file _site.ymlReplace text following:\nname: \"mywebpage\"  \nauthor: \"NAME\"  \noutput_dir: \"docs\"  \noutput:  \n  html_document:  \n    self_contained:  \n    theme: \n      version: 4\n      bootswatch: yeti \nnavbar:  \n  title: \"First Webpage\"  \n    left:\n    - text: \"Home\"\n      href: index.html\n    - text: \"\"\n      href: .htmlReplace text following:Save file (change name)Save file (change name)","code":"name: \"mywebpage\"  \nauthor: \"YOUR NAME\"  \noutput_dir: \"docs\"  \noutput:  \n  html_document:  \n    self_contained: no  \n    theme: \n      version: 4\n      bootswatch: yeti \nnavbar:  \n  title: \"My First Webpage\"  \n    left:\n    - text: \"Home\"\n      href: index.html\n    - text: \"About\"\n      href: about.html"},{"path":"webpages.html","id":"edit-the-pages","chapter":"H Webpages","heading":"H.1.3 Edit the pages","text":"Edit text index.Rmd .Rmd pages. can use R markdown, including code chunks.","code":""},{"path":"webpages.html","id":"render-the-site","chapter":"H Webpages","heading":"H.1.4 Render the site","text":"upper right \"Build\" pane, click \"Build website\" hammer icon. render website automatically open browser window. Alternatively, type following Console pane:accidentally close website want look , re-render . Click docs directory Files tab lower right pane, click index.html choose View Web Browser","code":"\nbrowseURL(rmarkdown::render_site(encoding = 'UTF-8'))"},{"path":"webpages.html","id":"webpage-pages","chapter":"H Webpages","heading":"H.2 Add pages","text":"Create new .Rmd file webpageAdd content webpages using R MarkdownRe-render siteIf include linked content like image files, make sure copied main project directory linked using relative paths.get webpage online, copy contents docs directory web server. access web server, can make free websites using GitHub repository GitHub Pages).","code":""},{"path":"webpages.html","id":"webpage-styles","chapter":"H Webpages","heading":"H.3 Styles","text":"can change appearance website changing theme _site.yml file (see Appendix F), instructions help customise things even .","code":""},{"path":"webpages.html","id":"add-custom-styles","chapter":"H Webpages","heading":"H.3.1 Add custom styles","text":"can add custom style sheet (document determines element website look) adding line css: style.css html_document: _site.yml file.need create file named style.css add custom styles . web thousands guides CSS, codeacademy great interactive tutorials learning html, css, even advanced web coding like javascript.However, basics css easy learn best just start playing around . Add following text style.css file re-render website.","code":"output:  \n  html_document:  \n    self_contained: no  \n    theme: \n      version: 4\n      bootswatch: readable\n    css: style.css"},{"path":"webpages.html","id":"change-global-fonts-and-colours","chapter":"H Webpages","heading":"H.3.2 Change global fonts and colours","text":"make text website larger, different font, change text background colours.theme using might css blocks styles trying change. can add !important end colon override .","code":"body {\n  font-size: 2em;\n  font-family: \"Times New Roman\";\n  color: white;\n  background-color: #660000;\n}"},{"path":"webpages.html","id":"change-certain-elements","chapter":"H Webpages","heading":"H.3.3 Change certain elements","text":"Maybe want change font colour headings, rest text. can apply style specific element type specifying element name curly brackets.","code":"h1, h2, h3 {\n  text-align: center;\n  color: hsl(0, 100%, 20%);\n}\n\nh3 {\n  font-style: italic;\n}\n\np {\n  border: 1px solid green;\n  padding: 10px;\n  line-height: 2;\n}\n\nul {\n  border: 3px dotted red;\n  border-radius: 10px;\n  padding: 10px 30px;\n}"},{"path":"webpages.html","id":"example-using-the-styles-above","chapter":"H Webpages","heading":"H.4 Example using the styles above","text":"CSS changes styles three levels headers (h2, h3, h4) sets third level italics.","code":""},{"path":"webpages.html","id":"level-3-header","chapter":"H Webpages","heading":"H.4.1 Level 3 header","text":"also gives paragraphs (p) green border double-spacing.","code":""},{"path":"webpages.html","id":"level-4-header","chapter":"H Webpages","heading":"H.4.1.1 Level 4 header","text":"Unordered Lists (ul) get:dotted red borderround cornersincreased padding top (10px) sides (30px)","code":""},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt book. must give appropriate credit, provide link license, indicate changes made. adapt material, must distribute contributions license original.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
